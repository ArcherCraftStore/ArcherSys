<!-- templates-f28969f9ea11c82d317a1a6e6f6c6433.cache --><script id="CalendarPubLayout" type="text/html"> <div data-view-model="Common_InformationViewModel"></div> <div class="screens pub_view"> <div data-view-model="Calendar_CalendarViewModel" class="screen CalendarLayout" style="display: none;"></div> <div data-view-model="Popups_Calendar_CalendarPopupViewModel" class="popup calendar_popup calendar_create" style="display: none;"></div> <div data-view-model="Popups_Calendar_SharePopupViewModel" class="popup calendar_popup calendar_share" style="display: none;"></div> <div data-view-model="Popups_Calendar_EventPopupViewModel" class="popup calendar_popup calendar_event" style="display: none;"></div> <div data-view-model="Popups_AlertPopupViewModel" class="alert popup" style="display: none;"></div> <div data-view-model="Popups_ConfirmPopupViewModel" class="confirm popup" style="display: none;"></div> </div> </script><script id="FileStoragePubLayout" type="text/html"> <div data-view-model="Common_InformationViewModel"></div> <div class="screens pub_view"> <div data-view-model="FileStorage_FileStorageViewModel" class="screen FileStorageLayout" style="display: none;"></div> <div data-view-model="Popups_FileStorage_FolderCreatePopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_FileStorage_RenamePopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_FileStorage_SharePopupViewModel" class="popup" style="display: none;"></div> </div> </script><script id="HelpdeskLayout" type="text/html"> <div data-view-model="Common_InformationViewModel"></div> <div class="screens"> <div data-view-model="Helpdesk_Login" class="screen LoginLayout HelpdeskLayout" style="display: none;"></div> <div data-view-model="Helpdesk_Header" class="tabs_panel helpdesk" style="display: none;"></div> <div data-view-model="Helpdesk_HelpdeskViewModel" class="screen HelpdeskLayout" style="display: none;"></div> <div data-view-model="Helpdesk_SettingsExt" class="screen HelpdeskLayout" style="display: none;"></div> <div data-view-model="Popups_ChangePasswordPopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_AlertPopupViewModel" class="alert popup" style="display: none;"></div> <div data-view-model="Popups_ConfirmPopupViewModel" class="confirm popup" style="display: none;"></div> </div> </script><script id="Layout" type="text/html"> <!--<video id="video_local" class="video" style="display: none"></video>--> <!--<video id="video_remote" class="video" style="display: none"></video>--> <audio id="audio_remote" class="audio" style="display: none"></audio> <!--<div class="flash_wrapper">--> <div id="flash"> <!--<p><a href="http://www.adobe.com/go/getflashplayer"><img src="http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif" alt="Get Adobe Flash player" /></a></p>--> <!--<p><a href="http://www.adobe.com/go/getflashplayer"></a></p>--> </div> <!--</div>--> <div data-view-model="Common_InformationViewModel"></div> <div class="screens"> <div data-view-model="Login_WrapLoginViewModel" class="screen LoginLayout" style="display: none;"></div> <div data-view-model="Common_HeaderViewModel" class="tabs_panel" style="display: none;"></div> <div data-view-model="Common_HeaderMobileViewModel" class="tabs_panel" style="display: none;"></div> <div data-view-model="Mail_LayoutSidePane_MailViewModel" class="screen MailLayout" style="display: none;"></div> <div data-view-model="Mail_LayoutBottomPane_MailViewModel" class="screen MailBottomLayout" style="display: none;"></div> <div data-view-model="Mail_ComposeViewModel" class="screen MailComposeLayout" style="display: none;"></div> <div data-view-model="Settings_SettingsViewModel" class="screen SettingsLayout" style="display: none;"></div> <div data-view-model="Contacts_ContactsViewModel" class="screen ContactsLayout" style="display: none;"></div> <div data-view-model="Calendar_CalendarViewModel" class="screen CalendarLayout" style="display: none;"></div> <div data-view-model="FileStorage_FileStorageViewModel" class="screen FileStorageLayout" style="display: none;"></div> <div data-view-model="Helpdesk_HelpdeskViewModel" class="screen HelpdeskLayout" style="display: none;"></div> <div data-view-model="Helpdesk_ViewThreadInNewWindow" class="screen HelpdeskLayout" style="display: none;"></div> <div data-view-model="Mail_LayoutSidePane_MessagePaneViewModel" class="panel item_viewer message_viewer" style="display: none;"></div> <div data-view-model="Popups_Calendar_CalendarPopupViewModel" class="popup calendar_popup calendar_create" style="display: none;"></div> <div data-view-model="Popups_Calendar_SharePopupViewModel" class="popup calendar_popup calendar_share" style="display: none;"></div> <div data-view-model="Popups_Calendar_GetLinkPopupViewModel" class="popup calendar_popup calendar_getlink" style="display: none;"></div> <div data-view-model="Popups_Calendar_EventPopupViewModel" class="popup calendar_popup calendar_event" style="display: none;"></div> <div data-view-model="Popups_Calendar_ImportPopupViewModel" class="popup calendar_popup calendar_create" style="display: none;"></div> <div data-view-model="Popups_Calendar_EditRecurrenceEventPopupViewModel" class="popup calendar_recurrence" style="display: none;"></div> <div data-view-model="Popups_Calendar_CalendarSelectCalendarsPopupViewModel" class="popup calendar_select" style="display: none;"></div> <div data-view-model="Popups_FileStorage_FolderCreatePopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_FileStorage_LinkCreatePopupViewModel" class="files_create_link popup" style="display: none;"></div> <div data-view-model="Popups_FileStorage_RenamePopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_FileStorage_SharePopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_FileStorage_FileStoragePopupViewModel" class="popup files" style="display: none;"></div> <div data-view-model="Popups_AlertPopupViewModel" class="alert popup" style="display: none;"></div> <div data-view-model="Popups_ConfirmPopupViewModel" class="confirm popup" style="display: none;"></div> <div data-view-model="Popups_AccountCreatePopupViewModel" class="add_account popup" style="display: none;"></div> <div data-view-model="Popups_AccountCreateIdentityPopupViewModel" class="add_account popup" style="display: none;"></div> <div data-view-model="Popups_FetcherAddPopupViewModel" class="add_fetcher popup" style="display: none;"></div> <div data-view-model="Popups_FolderSystemPopupViewModel" class="folders_setup popup" style="display: none;"></div> <div data-view-model="Popups_FolderCreatePopupViewModel" class="add_folder popup" style="display: none;"></div> <div data-view-model="Popups_ChangePasswordPopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_PhonePopupViewModel" class="popup phone_popup" style="display: none;"></div> <div data-view-model="Popups_GenerateOpenPgpKeyPopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_ShowOpenPgpKeyArmorPopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_ImportOpenPgpKeyPopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_OpenPgpEncryptPopupViewModel" class="popup" style="display: none;"></div> <div data-view-model="Popups_GooglePickerPopupViewModel" class="popup" style="display: none;"></div> </div> </script><script id="Calendar_CalendarListItem" type="text/html"><div class="item" data-bind="  droppable: {valueFunc: function (oEvent, oUi) { $root.dropItem(oEvent, oUi); }},  dropdown: {'callback': $parent.calendarDropdownToggle, 'trueValue': id, passClick: false},  click: $parent.calendarListClick,  style: {backgroundColor: color},  css: {'inactive': !active(), 'readonly': !isEditable()}"> <span class="control" data-bind="visible: control"></span> <label class="custom_checkbox" data-bind="css: {'checked': active}"> <span class="icon"></span> <input type="checkbox" data-bind="checked: active" /> </label> <span class="icon public" data-bind="visible: isPublic()"></span> <span> <span class="title" data-bind="text: name() + (isShared() ? ' - ' + owner() : ''), fade: {color: color}"></span> </span> </div></script><script id="Calendar_CalendarListItemMenu" type="text/html"><div class="item" data-bind="css: {'expand': $parent.currentCalendarDropdown() === id}, style: {backgroundColor: color}"> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content" data-bind="style: {backgroundColor: color}"> <!--span class="item" data-i18n="CALENDAR/ACTION_CREATE_EVENT" data-bind="visible: (access !== 2), i18n: 'text', click: function (item) {$parent.createEventInCalendar(id);}"></span> <span class="item" data-i18n="CALENDAR/ACTION_HIDE_OTHER" data-bind="i18n: 'text', click: function () {$parent.calendars.hideOtherCalendars(id);}"></span--> <span class="item" data-i18n="CALENDAR/ACTION_EDIT_CALENDAR" data-bind="visible: isEditable(), i18n: 'text', click: function (oItem) {$parent.openUpdateCalendarForm(oItem);}"></span> <span class="item" data-i18n="CALENDAR/ACTION_IMPORT_CALENDAR" data-bind="visible: isEditable(), i18n: 'text', click: function (oItem) {$parent.openImportCalendarForm(oItem);}"></span> <span class="item" data-i18n="CALENDAR/ACTION_GETLINK_CALENDAR" data-bind="i18n: 'text', visible: (!isShared() || isOwner()), click: function (oItem) {$parent.openGetLinkCalendarForm(oItem);}"></span> <span class="item" data-i18n="CALENDAR/ACTION_SHARE_AND_PUBLISH" data-bind="i18n: 'text', visible: (canShare() && $parent.calendarSharing), click: function (oItem) {$parent.openShareCalendarForm(oItem);}"></span> <span class="item" data-i18n="CALENDAR/ACTION_REMOVE_CALENDAR" data-bind="i18n: 'text', visible: !isDefault && !isSharedToAll(), click: function () {$parent.deleteCalendar(id);}"></span> <span class="separator" data-bind="visible: (!isShared() || isOwner())"></span> <span class="colors" data-bind="visible: isEditable(), foreach: $parent.colors"> <span class="item color_pick" data-bind="style: {backgroundColor: $data}, css: {'selected': $parent.color() === $data},  click: function () {$root.updateCalendarColor($data, $parent.id);}"></span> </span> </span> </span> </span> </div></script><script id="Calendar_CalendarViewModel" type="text/html"><div class="tabs_panel" data-bind="visible: isPublic"> <span class="item calendar current"> <span class="" data-bind="text: publicCalendarName"></span> </span> </div> <div class="panels" data-bind="splitter: {name: 'calendar', sizeLeft: 200, minLeft: 200, minRight: 40, resizeToWidth: true, resizeFunc: dayNamesResizeBinding}"> <div class="panel calendar_manager"> <div class="resize_handler"></div> <div class="panel_content"> <div class="toolbar"> <span class="content" data-bind="visible: !isPublic"> <span class="item" data-i18n="CALENDAR/BUTTON_NEW_EVENT" data-bind="i18n: 'text', click: createEventInCurrentCalendar"></span> </span> </div> <div class="middle_bar"> <div class="panel_center" data-bind="visible: !isPublic"> <div class="panel_center" data-bind="customScrollbar: {x: false, 'onStart': _.throttle(function () { calendarDropdownToggle(false); }, 500) }"> <div class="scroll-inner"> <div class="items_list calendars"> <span class="section_title"> <span class="control" data-bind="click: openCreateCalendarForm"></span> <span class="title personal" data-bind="i18n: 'text', visible: (calendars.ownCount() > 0)"> <span class="icon"></span> <span class="text" data-i18n="CALENDAR/TITLE_CALENDARS" data-bind="i18n: 'text'"></span> </span> </span> <!-- ko foreach: calendars.own() --> <!-- ko template: {name: 'Calendar_CalendarListItem'} --><!-- /ko --> <!-- /ko --> </div> <div class="items_list calendars" data-bind="visible: (calendars.sharedCount() > 0 && calendarSharing)"> <span class="section_title"> <span class="title shared"> <span class="icon"></span> <span class="text" data-i18n="CALENDAR/TITLE_SHARED_CALENDARS" data-bind="i18n: 'text'"></span> </span> </span> <!-- ko foreach: calendars.shared() --> <!-- ko template: {name: 'Calendar_CalendarListItem'} --><!-- /ko --> <!-- /ko --> </div> <div class="items_list calendars" data-bind="visible: (calendars.sharedToAllCount() > 0 && calendarSharing)"> <span class="section_title"> <span class="title shared-all"> <span class="icon"></span> <span class="text" data-i18n="CALENDAR/TITLE_SHARED_WITH_ALL_CALENDARS" data-bind="i18n: 'text'"></span> </span> </span> <!-- ko foreach: calendars.sharedToAll() --> <!-- ko template: {name: 'Calendar_CalendarListItem'} --><!-- /ko --> <!-- /ko --> </div> </div> </div> <div class="dropdowns" data-bind="style: {'top': currentCalendarDropdownOffset() + 'px'}"> <!-- ko template: {name: 'Calendar_CalendarListItemMenu', foreach: calendars.collection()} --><!-- /ko --> </div> </div> <div class="panel_bottom" data-bind="initDom: datePickerDom"> </div> </div> </div> </div> <div class="panel calendar"> <div class="panel_content"> <div class="toolbar unselectable"> <span class="content"> <span class="item checkmail command" data-bind="click: getCalendars, checkmail: {'activeClass': 'process', 'state': checkStarted(), 'duration': 800}"> <span class="icon"></span> </span> <span class="group"> <span class="item" data-bind="click: displayToday"> <span class="text" data-i18n="CALENDAR/BUTTON_TODAY" data-bind="i18n: 'text'"></span> </span> <span class="item" data-bind="click: function(){changeView('agendaDay');}, css: {'selected passive': selectedView() === 'agendaDay'}"> <span class="text" data-i18n="CALENDAR/BUTTON_DAY_VIEW" data-bind="i18n: 'text'"></span> </span> <span class="item" data-bind="click: function(){changeView('agendaWeek');}, css: {'selected passive': selectedView() === 'agendaWeek'}"> <span class="text" data-i18n="CALENDAR/BUTTON_WEEK_VIEW" data-bind="i18n: 'text'"></span> </span> <span class="item" data-bind="click: function(){changeView('month');}, css: {'selected passive': selectedView() === 'month'}"> <span class="text" data-i18n="CALENDAR/BUTTON_MONTH_VIEW" data-bind="i18n: 'text'"></span> </span> </span> <span class="group date_select"> <span class="item prev" data-bind="click: displayPrev"> <span class="icon"></span> </span> <span class="item current passive"> <span class="helper" data-bind="foreach: dateTitleHelper, css: {'week': selectedView() === 'agendaWeek', 'day': selectedView() === 'agendaDay'}"> <span class="text" data-bind="text: $parent.selectedView() === 'agendaWeek' ? '' + $data + $data : $data"></span><br /> </span> <span class="text" data-bind="text: dateTitle"></span> </span> <span class="item next" data-bind="click: displayNext"> <span class="icon"></span> </span> </span> </span> </div> <div class="middle_bar" data-bind="css: {'view_month': visibleWeekdayHeader}"> <div class="panel_top"> <div class="weekday-header" data-bind="foreach: correctedDayNames, visible: visibleWeekdayHeader"> <div class="weekday-header-item" data-bind="text: $data"></div> </div> </div> <div class="panel_center" data-bind="customScrollbar: {x: false, top: customscrollTop()}"> <div class="scroll-inner"> <div data-bind="initDom: calendarGridDom" style="visibility: hidden;"></div> <div class="uploader_mask" data-bind="initDom: uploaderArea, css: {'active': bDragActiveComp}"> <div class="inner"></div> </div> </div> </div> </div> </div> </div> </div></script><script id="Common_ColorPickerViewModel" type="text/html"><span class="color_table" data-bind="initDom: colorPickerDom"> <span class="title" data-bind="text: caption"></span> <span class="row" data-bind="foreach: aGreyColors"> <span class="color-item" data-bind="style: {backgroundColor: $data}, attr: {'data-color': $data}"></span> </span> <span class="row" data-bind="foreach: aBrightColors"> <span class="color-item" data-bind="style: {backgroundColor: $data}, attr: {'data-color': $data}"></span> </span> <span data-bind="foreach: aColorLines"> <span class="row" data-bind="foreach: $data"> <span class="color-item" data-bind="style: {backgroundColor: $data}, attr: {'data-color': $data}"></span> </span> </span> </span> </script><script id="Common_ContactCard" type="text/html"><div class="fields"> <div class="fieldset"> <div class="row" data-bind="visible: displayName()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_DISPLAY_NAME"></span> <span class="value" data-bind="text: displayName"></span> </div> <div class="row" data-bind="visible: email()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_EMAIL"></span> <a class="button" href="javascript: void(0)" data-bind="text: email, attr: {href: sendMailLink}"></a> </div> <div class="row" data-bind="visible: firstName()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FIRST_NAME"></span> <span class="value" data-bind="text: firstName"></span> </div> <div class="row" data-bind="visible: lastName()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_LAST_NAME"></span> <span class="value" data-bind="text: lastName"></span> </div> <div class="row" data-bind="visible: nickName()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_NICK_NAME"></span> <span class="value" data-bind="text: nickName"></span> </div> </div> <div class="fieldset" data-bind="visible: !personalIsEmpty()"> <h2 data-i18n="CONTACTS/HEADER_BASIC_INFO" data-bind="i18n: 'text'"></h2> <div class="row" data-bind="visible: (personalEmail() && personalEmail() !== email())"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PERSONAL_EMAIL"></span> <a class="button" href="javascript: void(0)" data-bind="text: personalEmail, attr: {href: sendMailToPersonalLink}"></a> </div> <div class="row" data-bind="visible: personalStreetAddress()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STREET_ADDRESS"></span> <span class="value" data-bind="text: personalStreetAddress"></span> </div> <div class="row" data-bind="visible: personalCity()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_CITY"></span> <span class="value" data-bind="text: personalCity"></span> </div> <div class="row" data-bind="visible: personalState()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STATE_PROVINCE"></span> <span class="value" data-bind="text: personalState"></span> </div> <div class="row" data-bind="visible: personalZipCode()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_ZIP_CODE"></span> <span class="value" data-bind="text: personalZipCode"></span> </div> <div class="row" data-bind="visible: personalCountry()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_COUNTRY_REGION"></span> <span class="value" data-bind="text: personalCountry"></span> </div> <div class="row" data-bind="visible: personalWeb()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_WEB_PAGE"></span> <span class="value" data-bind="text: personalWeb"></span> </div> <div class="row" data-bind="visible: personalFax()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FAX"></span> <span class="value" data-bind="text: personalFax"></span> </div> <div class="row" data-bind="visible: personalPhone()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PHONE"></span> <span class="value"> <span data-bind="text: personalPhone"></span> <span class="link call" data-i18n="call" data-bind="i18n: 'text', click: function() {onCallClick(personalPhone())}, visible: voiceApp"></span> </span> </div> <div class="row" data-bind="visible: personalMobile()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_MOBILE"></span> <span class="value"> <span data-bind="text: personalMobile"></span> <span class="link call" data-i18n="call" data-bind="i18n: 'text', click: function() {onCallClick(personalMobile())}, visible: voiceApp"></span> </span> </div> </div> <div class="fieldset" data-bind="visible: !businessIsEmpty()"> <h2 data-i18n="CONTACTS/HEADER_BUSINESS_INFO" data-bind="i18n: 'text'"></h2> <div class="row" data-bind="visible: (businessEmail() && businessEmail() !== email())"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_BUSINESS_EMAIL"></span> <a class="button" href="javascript: void(0)" data-bind="text: businessEmail, attr: {href: sendMailToBusinessLink}"></a> </div> <div class="row" data-bind="visible: businessCompany()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_COMPANY"></span> <span class="value" data-bind="text: businessCompany"></span> </div> <div class="row" data-bind="visible: businessDepartment()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_DEPARTMENT"></span> <span class="value" data-bind="text: businessDepartment"></span> </div> <div class="row" data-bind="visible: businessJob()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_JOB_TITLE"></span> <span class="value" data-bind="text: businessJob"></span> </div> <div class="row" data-bind="visible: businessOffice()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_OFFICE"></span> <span class="value" data-bind="text: businessOffice"></span> </div> <div class="row" data-bind="visible: businessStreetAddress()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STREET_ADDRESS"></span> <span class="value" data-bind="text: businessStreetAddress"></span> </div> <div class="row" data-bind="visible: businessCity()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_CITY"></span> <span class="value" data-bind="text: businessCity"></span> </div> <div class="row" data-bind="visible: businessState()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STATE_PROVINCE"></span> <span class="value" data-bind="text: businessState"></span> </div> <div class="row" data-bind="visible: businessZipCode()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_ZIP_CODE"></span> <span class="value" data-bind="text: businessZipCode"></span> </div> <div class="row" data-bind="visible: businessCountry()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_COUNTRY_REGION"></span> <span class="value" data-bind="text: businessCountry"></span> </div> <div class="row" data-bind="visible: businessWeb()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_WEB_PAGE"></span> <span class="value" data-bind="text: businessWeb"></span> </div> <div class="row" data-bind="visible: businessFax()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FAX"></span> <span class="value" data-bind="text: businessFax"></span> </div> <div class="row" data-bind="visible: businessPhone()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PHONE"></span> <span class="value"> <span data-bind="text: businessPhone"></span> <span class="link call" data-i18n="call" data-bind="i18n: 'text', click: function() {onCallClick(businessPhone())}, visible: voiceApp"></span> </span> </div> </div> <div class="fieldset" data-bind="visible: !otherIsEmpty()"> <h2 data-i18n="CONTACTS/HEADER_OTHER_INFO" data-bind="i18n: 'text'"></h2> <div class="row" data-bind="visible: (otherEmail() && otherEmail() !== email())"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_OTHER_EMAIL"></span> <a class="button" href="javascript: void(0)" data-bind="text: otherEmail, attr: {href: sendMailToOtherLink}"></a> </div> <div class="row" data-bind="visible: otherBirthday()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_BIRTHDAY"></span> <span class="value" data-bind="text: otherBirthday"></span> </div> <div class="row" data-bind="visible: otherNotes()"> <span class="label" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_NOTES"></span> <span class="value" data-bind="text: otherNotes"></span> </div> </div> </div> <div class="buttons"> <a class="link" href="javascript: void(0)" data-i18n="CONTACTS/LINK_SEND_MAIL"     data-bind="i18n: 'text', attr: {href: sendMailLink}"></a> <span class="link" data-i18n="CONTACTS/LINK_VIEW_MAILS" data-bind="i18n: 'text', click: viewAllMailsWithContact"></span> </div></script><script id="Common_FileViewModel" type="text/html"><div class="item file attachment" data-bind=" css: { 'dragHandle': allowDrag(), 'selected': allowSelect() && selected(), 'checked': allowCheck() && checked(), 'deleted': allowDelete() && deleted(), 'incomplete': allowUpload() && !uploaded(), 'shared': allowSharing() && shared() && !$root.isPublic, 'fail': uploadError(),  'success': !uploadError(), 'aslink': isLink() }, event: isPopupItem() ? null : { 'dragstart': eventDragStart }, draggable: !isPopupItem() && allowDrag(), draggablePlace: !isPopupItem() && allowDrag() ? $parent.dragAndDropHelperBinded : null, draggableDragStartCallback: function() {if (!isPopupItem() && allowDrag()) {$root.dragover(true);}}, draggableDragStopCallback: function() {if (!isPopupItem() && allowDrag()) {$root.dragover(false);}} "> <!-- ko if: (allowHeader()) --> <span class="header"> <span class="author" data-bind="text: ownerHeaderText"></span> <span class="date" data-bind="text: lastModifiedHeaderText"></span> </span> <!-- /ko --> <span class="item_content ui-droppable"> <span class="cancel" data-bind="click: function () { $parent.onFileRemove( uploadUid() ); }, i18n: 'title'" data-i18n="COMPOSE/UPLOAD_CANCEL"></span> <span class="image"> <!-- ko if: thumb() --> <img class="thumb download" data-bind="attr: {'title': (allowDownload()) ? downloadTitle() : '', 'src': thumbnailSrc()}, click: function () {if (allowDownload()) {downloadFile(App);}}, event: { load: onImageLoad }, visible: thumbnailLoaded()" /> <!-- /ko --> <span class="icon download" data-bind="attr: {'title': (allowDownload()) ? downloadTitle() : ''}, click: function () {if (allowDownload()) {downloadFile(App);}}, css: extension().toLowerCase(), visible: !thumbnailLoaded()"></span> </span> <!-- ko if: (allowSharing()) --> <span class="shared_icon" data-bind="i18n: 'title', css: {'with_thumb': thumbnailLoaded()}, click: function (oItem) {$root.onShareIconClick(oItem)}" data-i18n="COMPOSE/FILES_SHARED"></span> <!-- /ko --> <span class="progress" data-bind="visible: visibleProgress()"> <span data-bind="style: {'width': progressPercent() + '%'}"></span> </span> <span class="status_text" data-bind="text: statusText(), css: {'hide': !(statusText().length > 0), 'error': uploadError()}"></span> <div class="buttons" data-bind="visible: !isPopupItem(), css: {'hide': statusText().length > 0 || !uploaded()}"> <!--ko if: isIosDevice --> <a class="button view" href="javascript: void(0)"    data-bind="i18n: 'text', click: function () {downloadFile(App);}"    data-i18n="MESSAGE/ATTACHMENT_VIEW"></a> <!-- /ko --> <!--ko if: !isIosDevice --> <a class="button download" href="javascript: void(0)"    data-bind=" visible: visibleDownloadLink(), attr: {'title': downloadTitle()},  click: function () {downloadFile(App);},  i18n: 'text'    "    data-i18n="MESSAGE/ATTACHMENT_DOWNLOAD"></a> <a class="button view" href="javascript: void(0)"    data-bind=" visible: (visibleViewLink() && !visibleImportLink()),  i18n: 'text',  click: viewFile"    data-i18n="MESSAGE/ATTACHMENT_VIEW"></a> <a class="button view" href="javascript: void(0)"    data-bind=" visible: visibleImportLink(),  i18n: 'text',  click: importFile"    data-i18n="MESSAGE/ATTACHMENT_IMPORT"></a> <!-- /ko --> <a class="button view" href="javascript: void(0)"    data-bind="visible: visibleExpandLink(), i18n: 'text', click: expandFile"    data-i18n="MESSAGE/ATTACHMENT_EXPAND"></a> <span data-bind="visible: visibleExpandingText(), i18n: 'text'"    data-i18n="MESSAGE/ATTACHMENT_EXPANDING"></span> <a class="button view" href="javascript: void(0)"    data-bind="visible: subFilesCollapsed(), i18n: 'text', click: collapseFile"    data-i18n="MESSAGE/ATTACHMENT_COLLAPSE"></a> </div> </span> <span class="size" data-bind="text: 0 < size() ? friendlySize() : ''"></span> <span class="title" data-bind="attr: {'title': fileName()}"> <span class="name" data-bind="text: displayName()"></span><span class="ext" data-bind="text: '.' + extension()"></span> </span> <div class="children" data-bind="visible: subFilesCollapsed()"> <!-- ko template: {name: 'Common_FileViewModel', foreach: subFiles} --><!-- /ko --> </div> </div> <!-- ko if: isMessageType() && messagePart() --> <!-- ko template: {name: 'Mail_PrintMessageViewModel', data: messagePart} --><!-- /ko --> <!-- /ko --> </script><script id="Common_HeaderMobileViewModel" type="text/html"><div class="right" data-bind="dropdown: {control: false}"> <span class="control"> <span class="icon"></span> </span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> <!-- ko foreach: accounts --> <span class="item emails" data-bind="css: {'current': $parent.currentTab() === Enums.Screens.Mailbox && isCurrent() },  click: function () { if (isCurrent()) { App.Routing.setHash(Enums.Screens.Mailbox); } else { changeAccount(); } } "> <span class="text"  data-bind="text: email"></span> </span> <!-- /ko --> <!-- ko foreach: tabs --> <a data-bind="attr: {'class': 'item ' + name, href: hash}, css: {'current': $parent.currentTab() === name, 'recivedAnim': koRecivedAnim}"> <span class="text" data-bind="text: title"></span> </a> <!-- /ko --> <span class="item full_version" data-bind="click: switchToFullVersion"> <span class="text" data-i18n="HEADER/FULL_VERSION" data-bind="i18n: 'text'"></span> </span> <span class="item logout"> <span class="text" data-i18n="HEADER/LOGOUT" data-bind="i18n: 'text', click: logout"></span> </span> </span> </span> </span> </div></script><script id="Common_HeaderViewModel" type="text/html"><!-- ko if: appCustomLogo() !== '' --><span class="item logo"><img class="img_logo" data-bind="attr: {'src': appCustomLogo()}"/></span><!-- /ko --> <span class="item emails" data-bind="visible: !isMailboxTab(), dropdown: {}, css: {'current': isMailboxTab(), 'disabled': accounts().length <= 1, 'has_control': accounts().length > 1}"> <span class="helper" data-bind="text: email"></span> <a class="link" href="javascript: void(0);" data-bind="attr: {href: '#' + mailboxHash()}"> <span class="text" data-bind="text: email"></span> <span class="unseen" data-bind="text: mailUnseenCount, visible: mailUnseenVisible(), css: {one: mailUnseenCount() < 10, two: mailUnseenCount() > 9, three: mailUnseenCount() === '99+'}"></span> </a> <span class="control" data-bind="visible: accounts().length > 1"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content" data-bind="foreach: accounts"> <span class="item" data-bind="text: email, visible: !isCurrent(), click: changeAccount"></span> </span> </span> </span> </span> <span class="item emails" data-bind="visible: isMailboxTab(), dropdown: {control: false}, css: {'current': isMailboxTab(), 'disabled': accounts().length <= 1, 'has_control': accounts().length > 1}"> <span class="helper" data-bind="text: email, css: {'has_control': accounts().length > 1}"></span> <a class="link" href="javascript: void(0);"> <span class="text" data-bind="text: email"></span> </a> <span class="control" data-bind="visible: accounts().length > 1"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content" data-bind="foreach: accounts"> <span class="item" data-bind="text: email, visible: !isCurrent(), click: changeAccount"></span> </span> </span> </span> </span> <!-- ko foreach: tabs --> <span data-bind="attr: {'class': 'item ' + name}, css: {'current': $parent.currentTab() === name, 'recivedAnim': koRecivedAnim}, visible: koVisibleTab"> <span class="helper" data-bind="text: title"></span> <a class="link" href="javascript: void(0);" data-bind="attr: {href: hash}"> <span class="text" data-bind="text: title"></span> <!-- ko if: name === 'helpdesk' --> <span class="unseen" data-bind="text: $parent.helpdeskUnseenCount, visible: $parent.helpdeskUnseenVisible(), css: {one: $parent.helpdeskUnseenCount() < 10, two: $parent.helpdeskUnseenCount() > 9, three: $parent.helpdeskUnseenCount() > 99}"></span> <!-- /ko --> </a> </span> <!-- /ko --> <span class="item logout"> <span class="link" data-i18n="HEADER/LOGOUT" data-bind="i18n: 'text', click: logout"></span> </span> <span class="item settings" data-bind="css: {'current': currentTab() === Enums.Screens.Settings}"> <a class="link" href="javascript: void(0);" data-i18n="HEADER/SETTINGS" data-bind="i18n: 'text',     attr: {href: sSettingsHash}"></a> </span> <!-- ko if: !!App.Phone --> <!-- ko template: {name: 'Common_PhoneViewModel', data: oPhone} --><!-- /ko --> <!-- /ko --></script><script id="Common_HtmlEditorViewModel" type="text/html"><div class="html_editor" data-bind="css: {'inactive': inactive()}, onEsc: closeAllPopups"> <div class="disable_mask" data-bind="visible: disabled"></div> <!-- ko if: !mobileApp --> <div class="toolbar"> <div class="content"> <a href="javascript:void(0);" class="item undo" data-bind="click: function () { oCrea.undo(); return false; }"> <span class="icon" data-i18n="HTMLEDITOR/UNDO" data-bind="i18n: 'title'"></span> </a> <a href="javascript:void(0);" class="item redo" data-bind="click: function () { oCrea.redo(); return false; }"> <span class="icon" data-i18n="HTMLEDITOR/REDO" data-bind="i18n: 'title'"></span> </a> <a href="javascript:void(0);" class="item bold" data-bind="click: function () { oCrea.bold(); return false; }"> <span class="icon" data-i18n="HTMLEDITOR/BOLD" data-bind="i18n: 'title'"></span> </a> <a href="javascript:void(0);" class="item italic" data-bind="click: function () { oCrea.italic();  return false; }"> <span class="icon" data-i18n="HTMLEDITOR/ITALIC" data-bind="i18n: 'title'"></span> </a> <a href="javascript:void(0);" class="item underline" data-bind="click: function () { oCrea.underline(); return false; }"> <span class="icon" data-i18n="HTMLEDITOR/UNDERLINE" data-bind="i18n: 'title'"></span> </a> <a href="javascript:void(0);" class="item strike_through" data-bind="click: function () { oCrea.strikeThrough(); return false; }"> <span class="icon" data-i18n="HTMLEDITOR/STRIKETHROUGH" data-bind="i18n: 'title'"></span> </a> <span class="separator"></span> <div class="item select font"> <select class="input" data-bind="value: selectedFont, foreach: aFonts" style="height: 21px;"> <option data-bind="text: $data, value: $data, style: {'fontFamily': $data}"></option> </select> </div> <div class="item select font_size"> <select class="input" data-bind="value: selectedSize" style="height: 21px;"> <option value="2" data-i18n="HTMLEDITOR/TEXTSIZE_SMALL" data-bind="i18n: 'text'" style="font-size: 13px;"></option> <option value="3" data-i18n="HTMLEDITOR/TEXTSIZE_NORMAL" data-bind="i18n: 'text'" style="font-size: 16px;"></option> <option value="5" data-i18n="HTMLEDITOR/TEXTSIZE_LARGE" data-bind="i18n: 'text'" style="font-size: 24px;"></option> <option value="7" data-i18n="HTMLEDITOR/TEXTSIZE_HUGE" data-bind="i18n: 'text'" style="font-size: 48px;"></option> </select> </div> <a href="javascript:void(0);" class="item color" data-bind="click: textColor,     css: {'expand': visibleFontColorPopup}, initDom: colorPickerDropdownDom"> <span class="icon" data-i18n="HTMLEDITOR/TEXT_COLOR" data-bind="i18n: 'title'"></span> <span class="dropdown color"> <span class="dropdown_helper"> <span class="dropdown_content"> <!-- ko template: { name: 'Common_ColorPickerViewModel', data: oFontColorPicker } --><!-- /ko --> <!-- ko template: { name: 'Common_ColorPickerViewModel', data: oBackColorPicker } --><!-- /ko --> </span> </span> </span> </a> <span class="separator"></span> <a href="javascript:void(0);" class="item slist" data-bind="click: function () { oCrea.numbering(); }"> <span class="icon" data-i18n="HTMLEDITOR/NUMBERING" data-bind="i18n: 'title'"></span> </a> <a href="javascript:void(0);" class="item uslist" data-bind="click: function () { oCrea.bullets(); }"> <span class="icon" data-i18n="HTMLEDITOR/BULLETS" data-bind="i18n: 'title'"></span> </a> <span class="separator"></span> <a href="javascript:void(0);" class="item link" data-bind="click: insertLink,     css: {'expand': visibleInsertLinkPopup}, initDom: insertLinkDropdownDom"> <span class="icon" data-i18n="HTMLEDITOR/INSERT_LINK" data-bind="i18n: 'title'" title="Insert Link"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_content"> <span data-i18n="HTMLEDITOR/TITLE_URL" data-bind="i18n: 'text'"></span>: <input class="input" type="text" data-bind="value: linkForInsert,     hasfocus: linkFocused, onFocusSelect: true,     onEnter: insertLinkFromPopup" /> <span class="button" data-bind="click: insertLinkFromPopup, i18n: 'text'"    data-i18n="HTMLEDITOR/BUTTON_INSERT"></span> <span class="button" data-bind="click: closeInsertLinkPopup, i18n: 'text'"    data-i18n="HTMLEDITOR/BUTTON_CANCEL"></span> </span> </span> </span> </a> <a href="javascript:void(0);" class="item image" data-bind="click: insertImage,  visible: allowInsertImage, css: {'expand': visibleInsertImagePopup}, initDom: insertImageDropdownDom"> <span class="icon" data-i18n="HTMLEDITOR/INSERT_IMAGE" data-bind="i18n: 'title'"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_content"> <span data-bind="visible: bAllowFileUpload"> <span data-i18n="HTMLEDITOR/UPLOAD_SELECT_IMAGE" data-bind="i18n: 'text'"></span>: <br /> <span class="button" data-bind="initDom: imageUploaderButton, i18n: 'text'"    data-i18n="HTMLEDITOR/UPLOAD_BUTTON_CHOOSE_IMAGE"></span> <br /> <span data-i18n="HTMLEDITOR/UPLOAD_ENTER_IMAGE_URL" data-bind="i18n: 'text'"></span>: </span> <span data-bind="visible: !bAllowFileUpload, i18n: 'text'" data-i18n="HTMLEDITOR/UPLOAD_ENTER_IMAGE_URL_ONLY"></span> <br /> <input class="input" type="text" data-bind="value: imagePathFromWeb"     style="width: 200px;" /> <span class="button" data-bind="click: insertWebImageFromPopup, i18n: 'text'"    data-i18n="HTMLEDITOR/BUTTON_INSERT"></span> <span class="button" data-bind="click: closeInsertImagePopup, i18n: 'text'"    data-i18n="HTMLEDITOR/BUTTON_CANCEL"></span> </span> </span> </span> </a> <a href="javascript:void(0);" class="item clear" data-bind="click: function () { oCrea.removeFormat(); }"> <span class="icon" data-i18n="HTMLEDITOR/REMOVE_FORMAT" data-bind="i18n: 'title'"></span> </a> <a href="javascript:void(0);" class="item rtl" data-bind="visible: allowChangeInputDirection, click: function () { oCrea.setRtlDirection(); }"> <span class="icon" data-i18n="HTMLEDITOR/RTL_DIRECTION" data-bind="i18n: 'title'">rtl</span> </a> <a href="javascript:void(0);" class="item ltr" data-bind="visible: allowChangeInputDirection, click: function () { oCrea.setLtrDirection(); }"> <span class="icon" data-i18n="HTMLEDITOR/LTR_DIRECTION" data-bind="i18n: 'title'">ltr</span> </a> </div> </div> <!-- /ko --> <div class="workarea" data-bind="customScrollbar: {}, initDom: workareaDom"> <div class="scroll-inner" data-bind="attr: {'id': creaId}"></div> <div data-bind="initDom: uploaderAreaDom, css: {'active': editorUploaderBodyDragOver, 'progress': editorUploaderProgress}" class="uploader_mask"> <div class="inner"></div> </div> </div> <div class="inline_popup tooltip" data-bind="visible: imageSelected,  style: {'top': tooltipPopupTop() + 'px', 'left': tooltipPopupLeft() + 'px'},  text: tooltipText"></div> <div class="inline_popup" data-bind="visible: visibleLinkPopup,  style: {'top': linkPopupTop() + 'px', 'left': linkPopupLeft() + 'px'}"> <a target="_blank" data-bind="text: linkHref, attr: {'href': linkHref}"></a> <span class="button" data-i18n="HTMLEDITOR/URL_BUTTON_CHANGE" data-bind="i18n: 'text', click: showChangeLink"></span> <span class="button" data-i18n="HTMLEDITOR/URL_BUTTON_REMOVE" data-bind="i18n: 'text', click: function () { oCrea.removeCurrentLink(); }"></span> </div> <div class="inline_popup" data-bind="visible: visibleLinkHref,  style: {'top': linkPopupTop() + 'px', 'left': linkPopupLeft() + 'px'}"> <input type="text" spellcheck="false" data-bind="value: linkHref" /> <span class="button" data-i18n="HTMLEDITOR/URL_BUTTON_OK" data-bind="i18n: 'text', click: changeLink"></span> <span class="button" data-i18n="HTMLEDITOR/URL_BUTTON_CANCEL" data-bind="i18n: 'text', click: hideChangeLink"></span> </div> <div class="inline_popup" data-bind="visible: visibleImagePopup,  style: {'top': imagePopupTop() + 'px', 'left': imagePopupLeft() + 'px'}"> <span class="button" data-i18n="HTMLEDITOR/IMAGE_BUTTON_SMALL" data-bind="i18n: 'text', click: function () { resizeImage(Enums.HtmlEditorImageSizes.Small); }"></span> <span class="button" data-i18n="HTMLEDITOR/IMAGE_BUTTON_MEDIUM" data-bind="i18n: 'text', click: function () { resizeImage(Enums.HtmlEditorImageSizes.Medium); }"></span> <span class="button" data-i18n="HTMLEDITOR/IMAGE_BUTTON_LARGE" data-bind="i18n: 'text', click: function () { resizeImage(Enums.HtmlEditorImageSizes.Large); }"></span> <span class="button" data-i18n="HTMLEDITOR/IMAGE_BUTTON_ORIGINAL" data-bind="i18n: 'text', click: function () { resizeImage(Enums.HtmlEditorImageSizes.Original); }"></span> <span class="button" data-i18n="HTMLEDITOR/IMAGE_BUTTON_DELETE" data-bind="i18n: 'text', click: function () { oCrea.removeCurrentImage(); }"></span> </div> </div> </script><script id="Common_InformationViewModel" type="text/html"><div class="report_panel loading" data-bind="visible: loadingVisible(), css: {'hide': loadingHidden()}"> <span class="content"> <span class="icon"></span> <span class="text" data-bind="text: loadingMessage"></span> </span> </div> <div class="report_panel report" data-bind="visible: reportVisible(), css: {'hide': reportHidden()}"> <span class="content" > <span class="icon"></span> <span class="text" data-bind="text: reportMessage"></span> </span> </div> <div class="report_panel error" data-bind="visible: errorVisible(), css: {'hide': errorHidden(), 'gray': gray()}"> <span class="content"> <span class="icon"></span> <span class="text" data-bind="html: errorMessage, visible: isHtmlError"></span> <span class="text" data-bind="text: errorMessage, visible: !isHtmlError()"></span> <span class="close" data-bind="click: selfHideError"></span> </span> </div> </script><script id="Common_PageSwitcherViewModel" type="text/html"><span class="pagination" data-bind="visible: pages().length > 0"> <span class="item first" data-i18n="MAIN/FIRST_PAGE" data-bind="i18n: 'title', visible: visibleFirst, click: clickFirstPage"></span> <span class="item prev" data-i18n="MAIN/PREV_PAGE" data-bind="i18n: 'title', visible: visibleFirst, click: clickPreviousPage"></span> <span class="pages" data-bind="foreach: pages"> <span class="item" data-bind="text: number, css: {'current': current}, click: clickFunc"></span> </span> <span class="item next" data-i18n="MAIN/NEXT_PAGE" data-bind="i18n: 'title', visible: visibleLast, click: clickNextPage"></span> <span class="item last" data-i18n="MAIN/LAST_PAGE" data-bind="i18n: 'title', visible: visibleLast, click: clickLastPage"></span> </span></script><script id="Common_PhoneViewModel" type="text/html"><span class="item phone" data-bind="css: { 'init': (action() === Enums.PhoneAction.OfflineInit), 'offline': (action() === Enums.PhoneAction.Offline || action() === Enums.PhoneAction.OfflineActive || action() === Enums.PhoneAction.OfflineInit), 'online': !(action() === Enums.PhoneAction.Offline || action() === Enums.PhoneAction.OfflineActive || action() === Enums.PhoneAction.OfflineInit), 'inactive': (action() === Enums.PhoneAction.Offline || action() === Enums.PhoneAction.Online || action() === Enums.PhoneAction.OfflineInit), 'active': (action() === Enums.PhoneAction.OfflineActive || action() === Enums.PhoneAction.OnlineActive || action() === Enums.PhoneAction.Outgoing || action() === Enums.PhoneAction.OutgoingConnect || action() === Enums.PhoneAction.Incoming || action() === Enums.PhoneAction.IncomingConnect), 'outgoing': (action() === Enums.PhoneAction.Outgoing || action() === Enums.PhoneAction.OutgoingConnect), 'incoming': (action() === Enums.PhoneAction.Incoming || action() === Enums.PhoneAction.IncomingConnect), 'connect': (action() === Enums.PhoneAction.OutgoingConnect || action() === Enums.PhoneAction.IncomingConnect), 'ready': (action() === Enums.PhoneAction.OnlineActive && validateNumber()) }"> <span class="phone_inner"> <span class="text call_report empty" data-bind="text: report, css:{'empty': report() === ''}"></span> <span class="text direction" data-bind="">To:</span> <input class="input" spellcheck="false" data-bind="value: input, hasfocus: inputFocus, onEnter: multiAction, valueUpdate: ['blur', 'afterkeydown'], autocompleteSimple: {callback: autocompleteCallback.bind($data), dataAccessor: phoneAutocompleteItem}" /> <span class="buttons"> <span class="button" data-bind="title: tooltip, click: multiAction, css: {'hangup': action() === 'connected_out' || action() === 'connected_in'}"> <span class="icon"></span> </span> </span> <span class="indicator" data-bind="title: indicator, css: {'missed': missedCalls() && (action() === 'offline' || action() === 'online')}"></span> <span class="dropdown_helper" data-bind="css: {'expand': dropdownShow}"> <span class="dropdown_content" data-bind="customScrollbar: {x: false}"> <span class="scroll-inner" data-bind="visible: logsToShow().length"> <span data-bind="foreach: logsToShow"> <span class="item" data-bind="click: $parent.onLogItem.bind($parent)"> <span class="icon log_status" data-bind="css: UserStatus"></span> <span class="log_item" data-bind="text: phoneToShow"></span> </span> </span> <span class="item more" data-i18n="see more" data-bind="i18n: 'text', click: seeMore, visible: logsToShow().length !== logs().length"></span> </span> </span> <span class="spinner" data-bind="visible: spinner"> <span class="bounce1"></span> <span class="bounce2"></span> <span class="bounce3"></span> </span> </span> </span> </span></script><script id="Contacts_ContactList" type="text/html"><div class="panel_top"> <label class="custom_checkbox" data-bind="css: {'checked': checkAll, 'incomplete': checkAllIncomplite}"> <span class="icon"></span> <input type="checkbox" data-bind="checked: checkAll" /> </label> <span class="search_block"> <span class="input" data-bind="css: {'focus': isSearchFocused}"> <span class="icon search" data-i18n="CONTACTS/BUTTON_SEARCH" data-bind="i18n: 'text', click: searchSubmitCommand"></span> <input class="field" type="text" data-bind="value: searchInput, onEnter: searchSubmitCommand, hasfocus: isSearchFocused" /> </span> </span> </div> <div class="panel_center unselectable" data-bind="customScrollbar: {x: false}"> <div class="contact_list_scroll scroll-inner"> <div class="items_list contact_list"> <div data-bind="visible: isEmptyList() && !isLoading()"> <span class="list_notification" data-bind="visible: !isSearch() && !inGroup()"> <span class="description" data-i18n="CONTACTS/LABEL_NO_CONTACTS" data-bind="i18n: 'text'"></span> <span class="description" data-i18n="CONTACTS/LABEL_NO_CONTACTS_DESC" data-bind="i18n: 'text'"></span> </span> <span class="list_notification" data-bind="visible: !isSearch() && inGroup()"> <span class="description" data-i18n="CONTACTS/LABEL_NO_CONTACTS_IN_GROUP" data-bind="i18n: 'text'"></span> <!-- ko if: !$root.mobileApp --> <span class="description" data-i18n="CONTACTS/LABEL_NO_CONTACTS_IN_GROUP_DESC" data-bind="i18n: 'text'"></span> <!-- /ko --> </span> <span class="list_notification" data-bind="visible: isSearch()"> <span class="link" data-i18n="MAILBOX/LINK_CLEAR_SEARCH" data-bind="i18n: 'text', click: onClearSearchClick"></span> <span class="description" data-i18n="CONTACTS/LABEL_NO_CONTACTS_FOUND" data-bind="i18n: 'text'"></span> </span> </div> <span class="list_notification" data-bind="visible: isSearch() && !isEmptyList()"> <span class="link" data-i18n="MAILBOX/LINK_CLEAR_SEARCH" data-bind="i18n: 'text', click: onClearSearchClick"></span> <span class="description" data-bind="text: searchText"></span> </span> <div class="items_sub_list contact_sub_list" data-bind="foreach: collection,  draggablePlace: dragAndDropHelper"> <div class="item dragHandle nosubject" data-bind="css: {'checked': checked, 'selected': selected, 'deleted': deleted, 'noname': !Name(), 'noemail': !Email()}"> <div class="item_content"> <span class="me" data-i18n="CONTACTS/LABEL_ITS_ME" data-bind="visible: ItsMe(), i18n: 'text'"></span> <span class="controls"> <!-- <label class="custom_checkbox" data-bind="css: {'checked': checked}"> <span class="icon"></span> <input type="checkbox" data-bind="checked: checked" /> </label>--> <span class="custom_checkbox" data-bind="click: function () { checked(!checked()); }, css: {'checked': checked()}"> <span class="icon"></span> </span> </span> <span class="data fadeout"> <span class="name" data-bind="text: Name(), visible: !!Name()"></span> <span class="name" data-i18n="CONTACTS/NO_NAME" data-bind="i18n: 'text', visible: Name() === ''"></span> <span class="email" data-bind="text: Email(), visible: !!Email()"></span> <span class="email" data-i18n="CONTACTS/NO_EMAIL" data-bind="i18n: 'text', visible: Email() === ''"></span> </span> <div class="separator"></div> </div> </div> </div> </div> </div> </div> <div class="panel_bottom unselectable" data-bind="template: {name: 'Common_PageSwitcherViewModel', data: oPageSwitcher}"></div> </script><script id="Contacts_ContactsImportViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-i18n="CONTACTS/LABEL_IMPORT_CONTACTS" data-bind="i18n: 'text'"></h2> </div> <div class="decor"></div> <div class="panel_center"> <div class="contact_content"> <div class="contact_data_groups"> <div class="fields clearfix"> <div class="hint"> <span data-i18n="CONTACTS/IMPORT_DESC" data-bind="i18n: 'text'"></span> </div> <div class="row"> <span data-bind="visible: importing, i18n: 'text'" data-i18n="CONTACTS/IMPORTING"></span> <div class="buttons" data-bind="visible: !importing()"> <span id="jue_import_button" class="button import" data-i18n="CONTACTS/BUTTON_IMPORT_CONTACTS" data-bind="i18n: 'text'"></span> </div> </div> <div class="row" data-bind="visible: '' !== $root.importingHelpLink"> <a class="link" href="#" target="_blank" data-bind="attr: {href: $root.importingHelpLink}"> <span data-i18n="CONTACTS/LINK_LEARN_MORE" data-bind="i18n: 'text'"></span> </a> </div> </div> </div> </div> </div> <!-- ko if: $root.mobileApp --> <div class="panel_bottom"> <div class="toolbar"> <span class="content"> <span class="item close" href="javascript: void(0)" data-bind="click: function () {$root.gotoContactList();}"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="Close"></span> </span> </span> </div> </div> <!-- /ko --> </script><script id="Contacts_ContactsViewModel" type="text/html"><div class="panels" data-bind="splitter: {name: 'groups', sizeLeft: 200, minLeft: 20, minRight: 40, resizeToWidth: true}, css: {'groups': selectedPanel() === Enums.MobilePanel.Groups,  'list_active': selectedPanel() === Enums.MobilePanel.Items,  'viewer_active': selectedPanel() === Enums.MobilePanel.View}"> <div class="panel groups" data-splitter="groups"> <div class="resize_handler"></div> <div class="panel_content"> <div class="toolbar"> <span class="content"> <!-- ko if: mobileApp --> <span class="item new_group" data-bind="visible: showPersonalContacts, command: newGroupCommand"> <span class="icon" data-bind="i18n: 'title'" data-i18n="CONTACTS/TOOL_NEW_GROUP"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_NEW_GROUP"></span> </span> <!-- /ko --> </span> </div> <div class="middle_bar"> <!-- ko template: { name: 'Contacts_GroupList', data: $data} --><!-- /ko --> </div> </div> </div> <div class="panel_helper" data-bind="splitter: {name: 'contacts', sizeLeft: 450, minLeft: (allowContactsSharing ? 418 : 368), minRight: 10}"> <div class="panel contacts"> <div class="resize_handler"></div> <div class="panel_content"> <div class="toolbar" data-bind="template: { name: 'Contacts_Toolbar'}"></div> <div class="middle_bar" data-bind="template: {name: 'Contacts_ContactList'}"></div> </div> </div> <div class="panel item_viewer contact_viewer"> <div class="panel_content"> <div class="middle_bar contact" data-bind="visible: selectedContact() && !selectedContact().edited(), with: selectedContact"> <!-- ko template: { name: 'Contacts_ViewContactViewModel', data: $data} --><!-- /ko --> </div> <div class="middle_bar edit_contact" data-bind="visible: selectedContact() && selectedContact().edited(), with: selectedContact"> <!-- ko template: { name: 'Contacts_EditContactViewModel', data: $data } --><!-- /ko --> </div> <div class="middle_bar group" data-bind="visible: selectedGroup() && !selectedGroup().edited(), with: selectedGroup"> <!-- ko template: { name: 'Contacts_ViewGroupViewModel', data: $data } --><!-- /ko --> </div> <div class="middle_bar edit_group" data-bind="visible: selectedGroup() && selectedGroup().edited(), with: selectedGroup"> <!-- ko template: { name: 'Contacts_EditGroupViewModel', data: $data } --><!-- /ko --> </div> <div class="middle_bar import" data-bind="visible: oContactImportViewModel.visibility()"> <!-- ko template: { name: 'Contacts_ContactsImportViewModel', data: oContactImportViewModel } --><!-- /ko --> </div> </div> </div> </div> </div></script><script id="Contacts_EditContactViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-bind="visible: !edited() && !isNew(), i18n: 'text'" data-i18n="CONTACTS/LABEL_VIEW_CONTACT"></h2> <h2 class="title" data-bind="visible: edited() && !isNew(), i18n: 'text'" data-i18n="CONTACTS/LABEL_EDIT_CONTACT"></h2> <h2 class="title" data-bind="visible: isNew(), i18n: 'text'" data-i18n="CONTACTS/LABEL_NEW_CONTACT"></h2> </div> <div class="decor"></div> <div class="panel_center" data-bind="customScrollbar: {}"> <div class="contact_content scroll-inner"> <div class="contact_data_groups edit"> <div class="fields clearfix" data-bind="visible: !extented()"> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_DISPLAY_NAME"></span>: </span> <input class="value input" type="text" data-bind="value: displayName, hasfocus: displayNameFocused" /> </div> <div class="row" data-bind="visible: !itsMe()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_EMAIL"></span>: </span> <input class="value input" type="text" data-bind="value: email" /> </div> <div class="row" data-bind="visible: itsMe()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_EMAIL"></span>: </span> <span class="value" data-bind="text: email"></span> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PHONE"></span>: </span> <input class="value input" type="text" data-bind="value: phone" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_ADDRESS"></span>: </span> <input class="value input" type="text" data-bind="value: address" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_SKYPE"></span>: </span> <input class="value input" type="text" data-bind="value: skype" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FACEBOOK"></span>: </span> <input class="value input" type="text" data-bind="value: facebook" /> </div> <div class="clear"></div> <div class="fields_switcher"> <span class="link" data-bind="i18n: 'text', click: function () { extented(true); }" data-i18n="CONTACTS/BUTTON_SHOW_ADDITIONAL_FIELDS"></span> </div> </div> <div class="fields" data-bind="visible: extented()"> <div class="fieldset"> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_DISPLAY_NAME"></span>: </span> <input class="value input" type="text" data-bind="value: displayName" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_EMAIL"></span>: </span> <span class="value" data-bind="visible: 0 === emails().length"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_NOT_SPECIFIED_YET"></span> </span> <span class="value" data-bind="visible: 0 < emails().length"> <select data-bind="options: emails, optionsText: 'text', optionsValue: 'value', value: mainPrimaryEmail"></select> </span> </div> <!--<div class="row">--> <!--<span class="label">--> <!--<span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FIRST_NAME"></span>:--> <!--</span>--> <!--<input class="value input" type="text" data-bind="value: firstName" />--> <!--</div>--> <!--<div class="row">--> <!--<span class="label">--> <!--<span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_LAST_NAME"></span>:--> <!--</span>--> <!--<input class="value input" type="text" data-bind="value: lastName" />--> <!--</div>--> <!--<div class="row">--> <!--<span class="label">--> <!--<span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_NICK_NAME"></span>:--> <!--</span>--> <!--<input class="value input" type="text" data-bind="value: nickName" />--> <!--</div>--> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PHONE"></span>: </span> <span class="value" data-bind="visible: 0 === phones().length"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_NOT_SPECIFIED_YET"></span> </span> <span class="value" data-bind="visible: 0 < phones().length"> <select data-bind="options: phones, optionsText: 'text', optionsValue: 'value', value: mainPrimaryPhone"></select> </span> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_ADDRESS"></span>: </span> <span class="value" data-bind="visible: 0 === addresses().length"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_NOT_SPECIFIED_YET"></span> </span> <span class="value" data-bind="visible: 0 < addresses().length"> <select data-bind="options: addresses, optionsText: 'text', optionsValue: 'value', value: mainPrimaryAddress"></select> </span> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_SKYPE"></span>: </span> <input class="value input" type="text" data-bind="value: skype" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FACEBOOK"></span>: </span> <input class="value input" type="text" data-bind="value: facebook" /> </div> </div> <div class="clear"></div> <div class="fields_switcher"> <span class="link" data-bind="i18n: 'text', click: function () { extented(false); }" data-i18n="CONTACTS/BUTTON_HIDE_ADDITIONAL_FIELDS"></span> </div> <div class="fieldset" data-bind="css: {'collapsed': personalCollapsed}"> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FIRST_NAME"></span>: </span> <input class="value input" type="text" data-bind="value: firstName" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_LAST_NAME"></span>: </span> <input class="value input" type="text" data-bind="value: lastName" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_NICK_NAME"></span>: </span> <input class="value input" type="text" data-bind="value: nickName" /> </div> <h2 class="subtitle" data-bind="i18n: 'text', click: function () { personalCollapsed(!personalCollapsed()) }" data-i18n="CONTACTS/HEADER_HOME"></h2> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PERSONAL_EMAIL"></span>: </span> <input class="value input" type="text" data-bind="value: personalEmail" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STREET_ADDRESS"></span>: </span> <textarea class="value input" data-bind="value: personalStreetAddress"></textarea> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_CITY"></span>: </span> <input class="value input" type="text" data-bind="value: personalCity" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STATE_PROVINCE"></span>: </span> <input class="value input" type="text" data-bind="value: personalState" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_ZIP_CODE"></span>: </span> <input class="value input" type="text" data-bind="value: personalZipCode" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_COUNTRY_REGION"></span>: </span> <input class="value input" type="text" data-bind="value: personalCountry" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_WEB_PAGE"></span>: </span> <input class="value input" type="text" data-bind="value: personalWeb" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FAX"></span>: </span> <input class="value input" type="text" data-bind="value: personalFax" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PHONE"></span>: </span> <input class="value input" type="text" data-bind="value: personalPhone" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_MOBILE"></span>: </span> <input class="value input" type="text" data-bind="value: personalMobile" /> </div> </div> <div class="fieldset" data-bind="css: {'collapsed': businessCollapsed}"> <h2 class="subtitle" data-bind="i18n: 'text', click: function () { businessCollapsed(!businessCollapsed()) }" data-i18n="CONTACTS/HEADER_BUSINESS"></h2> <div class="row" data-bind="visible: !itsMe()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_BUSINESS_EMAIL"></span>: </span> <input class="value input" type="text" data-bind="value: businessEmail" /> </div> <div class="row" data-bind="visible: itsMe()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_BUSINESS_EMAIL"></span>: </span> <span class="value" data-bind="text: businessEmail"></span> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_COMPANY"></span>: </span> <input class="value input" type="text" data-bind="value: businessCompany" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_DEPARTMENT"></span>: </span> <input class="value input" type="text" data-bind="value: businessDepartment" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_JOB_TITLE"></span>: </span> <input class="value input" type="text" data-bind="value: businessJob" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_OFFICE"></span>: </span> <input class="value input" type="text" data-bind="value: businessOffice" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STREET_ADDRESS"></span>: </span> <textarea class="value input" data-bind="value: businessStreetAddress"></textarea> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_CITY"></span>: </span> <input class="value input" type="text" data-bind="value: businessCity" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STATE_PROVINCE"></span>: </span> <input class="value input" type="text" data-bind="value: businessState" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_ZIP_CODE"></span>: </span> <input class="value input" type="text" data-bind="value: businessZipCode" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_COUNTRY_REGION"></span>: </span> <input class="value input" type="text" data-bind="value: businessCountry" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_WEB_PAGE"></span>: </span> <input class="value input" type="text" data-bind="value: businessWeb" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FAX"></span>: </span> <input class="value input" type="text" data-bind="value: businessFax" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PHONE"></span>: </span> <input class="value input" type="text" data-bind="value: businessPhone" /> </div> </div> <div class="fieldset" data-bind="css: {'collapsed': otherCollapsed}"> <h2 class="subtitle" data-bind="i18n: 'text', click: function () { otherCollapsed(!otherCollapsed()) }"  data-i18n="CONTACTS/HEADER_OTHER"></h2> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_BIRTHDAY"></span>: </span> <span class="value"> <select data-bind="options: birthdayMonthSelect, optionsText: 'text', optionsValue: 'value', value: otherBirthdayMonth"></select> <select data-bind="options: birthdayDaySelect, optionsText: 'text', optionsValue: 'value', value: otherBirthdayDay"></select> <select data-bind="options: birthdayYearSelect, optionsText: 'text', optionsValue: 'value', value: otherBirthdayYear"></select> </span> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_OTHER_EMAIL"></span>: </span> <input class="value input" type="text" data-bind="value: otherEmail" /> </div> <div class="row"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_NOTES"></span>: </span> <textarea class="value input" data-bind="value: otherNotes"></textarea> </div> </div> <div class="fieldset" data-bind="visible: !global() && $root.groupFullCollection().length, css: {'collapsed': groupsCollapsed}"> <h2 class="subtitle" data-bind="click: function () { groupsCollapsed(!groupsCollapsed()) }" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_CONTACT_GROUPS"></h2> <div class="hint" data-bind="i18n: 'text'" data-i18n="CONTACTS/CONTACT_GROUPS_HINT"></div> <div class="row"> <div class="value" data-bind="foreach: $root.groupFullCollection()"><span data-bind="visible: $index() != 0">,</span> <label class="custom_checkbox" data-bind="css: {'checked': checked}"> <span class="icon"></span> <input type="checkbox" data-bind="checked: checked, attr: {'id': 'group'+$index()}" /> </label> <label data-bind="attr: {'for': 'group'+$index()}"> <span data-bind="text: Name()"></span> </label> </div> </div> </div> </div> </div> </div> </div> <div class="panel_bottom"> <div class="toolbar"> <span class="content"> <span class="item save" data-bind="click: function () { $root.saveCommand($data); }"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/BUTTON_SAVE_CONTACT"></span> </span> </span> <span class="item cancel" data-bind="click: function () { $root.executeCancel(); }"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/BUTTON_CANCEL_CONTACT"></span> </span> </span> </span> </div> </div></script><script id="Contacts_EditGroupViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-bind="visible: isNew(), i18n: 'text'" data-i18n="CONTACTS/LABEL_NEW_GROUP"></h2> <h2 class="title" data-bind="visible: !isNew(), i18n: 'text'" data-i18n="CONTACTS/LABEL_EDIT_GROUP"></h2> </div> <div class="decor"></div> <div class="panel_center" data-bind="customScrollbar: {}"> <div class="contact_content scroll-inner"> <div class="contact_data_groups edit"> <div class="fields clearfix"> <div class="row"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_NAME"></span>: </span> <input class="value input" type="text" data-bind="hasfocus: nameFocused, value: name, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row">  <span class="value offset">  <label class="custom_checkbox" data-bind="css: {'checked': isOrganization}">  <span class="icon"></span>  <input type="checkbox" id="isOrganization" data-bind="checked: isOrganization"> </label> <label for="isOrganization" data-i18n="CONTACTS/LABEL_GROUP_ORGANIZATION" data-bind="i18n: 'text'"></label> </span> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_EMAIL"></span>: </span> <input class="value input" type="text" data-bind="value: email, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_COMPANY"></span>: </span> <input class="value input" type="text" data-bind="value: company, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_COUNTRY"></span>: </span> <input class="value input" type="text" data-bind="value: country, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_STATE"></span>: </span> <input class="value input" type="text" data-bind="value: state, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_CITY"></span>: </span> <input class="value input" type="text" data-bind="value: city, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_STREET"></span>: </span> <input class="value input" type="text" data-bind="value: street, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_ZIP"></span>: </span> <input class="value input" type="text" data-bind="value: zip, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_PHONE"></span>: </span> <input class="value input" type="text" data-bind="value: phone, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_FAX"></span>: </span> <input class="value input" type="text" data-bind="value: fax, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isOrganization"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_WEB"></span>: </span> <input class="value input" type="text" data-bind="value: web, valueUpdate: 'afterkeydown', onEnter: $root.saveCommand" /> </div> <div class="row" data-bind="visible: isNew() && '' !== newContactsInGroupHint()"> <span data-bind="text: newContactsInGroupHint"></span> </div> </div> </div> </div> </div> <div class="panel_bottom"> <div class="toolbar"> <span class="content"> <span class="item save" data-bind="command: $root.saveCommand"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/BUTTON_SAVE_GROUP"></span> </span> <span class="item cancel" data-bind="click: function () { $root.executeCancel(); }"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/BUTTON_CANCEL_GROUP"></span> </span> </span> </div> </div></script><script id="Contacts_GroupList" type="text/html"><div class="panel_center" data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <div class="items_list"> <div class="item canSelect" data-bind="visible: showPersonalContacts,  css: {'selected': Enums.ContactsGroupListType.Personal === selectedGroupType()}, click: $parent.gotoContactList"> <a href="javascript: void(0);" class="title" data-bind=" css: {'recivedAnim': recivedAnimUnshare()}, droppable: {valueFunc: function (oEvent, oUi) { $root.contactsDropToGroupType(0, oEvent, oUi); }}, click: function () { changeGroupType(Enums.ContactsGroupListType.Personal); }"> <span class="name fadeout"> <span class="icon type1"></span> <span class="text animGoal" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_PERSONAL"></span> </span> </a> </div> <div class="item canSelect" data-bind="visible: showSharedToAllContacts,  css: {'selected': Enums.ContactsGroupListType.SharedToAll === selectedGroupType()}, click: $parent.gotoContactList"> <a href="javascript: void(0);" class="title" data-bind=" css: {'recivedAnim': recivedAnimShare()}, droppable: {valueFunc: function (oEvent, oUi) { $root.contactsDropToGroupType(3, oEvent, oUi); }}, click: function () { changeGroupType(Enums.ContactsGroupListType.SharedToAll); }"> <span class="name fadeout"> <span class="icon type3"></span> <span class="text animGoal" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_SHARED_TO_ALL"></span> </span> </a> </div> <div class="item canSelect" data-bind="visible: showGlobalContacts,  css: {'selected': Enums.ContactsGroupListType.Global === selectedGroupType()}, click: $parent.gotoContactList"> <a href="javascript: void(0);" class="title" data-bind="click: function () { changeGroupType(Enums.ContactsGroupListType.Global); }"> <span class="name fadeout"> <span class="icon type2"></span> <span class="text animGoal" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_GLOBAL"></span> </span> </a> </div> <div data-bind="visible: showPersonalContacts() && 0 < groupFullCollection().length"> <div class="section_title fadeout" data-i18n="CONTACTS/LABEL_GROUPS" data-bind="i18n: 'text'"></div> <div class="items_section" data-bind="foreach: groupFullCollection"> <div class="item canSelect" data-bind="css: {'selected': selected}"> <a href="javascript: void(0);" class="title" data-bind=" css: {'recivedAnim': recivedAnim()},  droppable: {valueFunc: function (oEvent, oUi) { $root.contactsDrop($data, oEvent, oUi); }, switchObserv: selected},  click: function () { $root.onViewGroupClick($data); } "> <span class="name fadeout"> <span class="icon type4"></span> <span class="text animGoal" data-bind="text: Name()"></span> </span> </a> </div> </div> </div> </div> </div> </div> </script><script id="Contacts_Toolbar" type="text/html"> <span class="content"> <!-- ko if: !mobileApp --> <span class="item checkmail command" data-bind="click: reload, checkmail: {'activeClass': 'process', 'state': loadingList(), 'duration': 800}"> <span class="icon"></span> </span> <!-- /ko --> <!-- ko if: mobileApp --> <span data-bind="click: function () {$root.gotoGroupList();}, i18n: 'title'" class="item back"    data-i18n="MAILBOX/TOOL_BACK_TO_LIST"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_BACK_TO_LIST"></span> </span> <!-- /ko --> <span class="item new_contact" data-bind="visible: showPersonalContacts() && selectedGroupType() !== Enums.ContactsGroupListType.Global, command: newContactCommand, i18n: 'title'"    data-i18n="CONTACTS/TOOL_NEW_CONTACT"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_NEW_CONTACT"></span> </span> <!-- ko if: !mobileApp --> <span class="item new_group" data-bind="visible: showPersonalContacts() && selectedGroupType() !== Enums.ContactsGroupListType.Global && selectedGroupType() !== Enums.ContactsGroupListType.SharedToAll, command: newGroupCommand, i18n: 'title'"    data-i18n="CONTACTS/TOOL_NEW_GROUP"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_NEW_GROUP"></span> </span> <!-- /ko --> <span class="item new_message" data-bind="command: newMessageCommand, i18n: 'title'"    data-i18n="CONTACTS/TOOL_NEW_MESSAGE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_NEW_MESSAGE"></span> </span> <span class="item add_to" data-bind="visible: showPersonalContacts, dropdown: {control: false}, command: addContactsCommand, i18n: 'title'"    data-i18n="CONTACTS/TOOL_ADD_CONTACT_TO"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_ADD_CONTACT_TO"></span> <span class="icon arrow"></span> <span class="dropdown" title=""> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content" data-bind="customScrollbar: {x: false}"> <span class="scroll-inner"> <!-- ko foreach: $root.groupFullCollection() --> <span class="item" data-bind="text: Name()"></span> <!-- /ko --> <span class="item new-group" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_DROPDOWN_NEW_GROUP"></span> </span> </span> </span> </span> </span> <span class="item delete" data-bind="visible: (showPersonalContacts() && selectedGroupType() === Enums.ContactsGroupListType.Personal || showSharedToAllContacts() && selectedGroupType() === Enums.ContactsGroupListType.SharedToAll), command: deleteCommand, i18n: 'title'"    data-i18n="CONTACTS/TOOL_DELETE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_DELETE"></span> </span> <span class="item remove_from" data-bind="visible: showPersonalContacts() && selectedGroupType() === Enums.ContactsGroupListType.SubGroup, command: removeFromGroupCommand, i18n: 'title'"    data-i18n="CONTACTS/TOOL_REMOVE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_REMOVE"></span> </span> <!-- ko if: !mobileApp --> <span class="item share-all" data-bind="visible: visibleShareCommand, command: shareCommand, i18n: 'title'" data-i18n="CONTACTS/TOOL_SHARE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_SHARE"></span> </span> <span class="item unshare-all" data-bind="visible: visibleUnshareCommand, command: shareCommand, i18n: 'title'" data-i18n="CONTACTS/TOOL_UNSHARE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/TOOL_UNSHARE"></span> </span> <span class="item control" data-bind="visible: showPersonalContacts() && selectedGroupType() === Enums.ContactsGroupListType.Personal, dropdown: {control: false}"> <span class="icon arrow"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> <span class="item export" data-bind="i18n: 'text', command: exportCSVCommand" data-i18n="CONTACTS/TOOL_EXPORT_CSV"></span> <span class="item export" data-bind="i18n: 'text', command: exportVCFCommand" data-i18n="CONTACTS/TOOL_EXPORT_VCF"></span> <span class="item import" data-bind="i18n: 'text', command: importCommand" data-i18n="CONTACTS/TOOL_IMPORT"></span> </span> </span> </span> </span> <!-- /ko --> </span> </script><script id="Contacts_ViewContactViewModel" type="text/html"><!-- ko if: $root.mobileApp --> <div class="toolbar"> <span class="content"> <span class="item close" data-bind="click: function () {$root.backToContactList();}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_BACK_TO_LIST"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_BACK_TO_LIST"></span> </span> <span class="item send_files command" data-bind="visible: hasEmails, click: sendThisContact"> <span class="icon" data-i18n="CONTACTS/BUTTON_SEND_THIS_CONTACT" data-bind="i18n: 'title'"></span> <span class="text" data-i18n="CONTACTS/BUTTON_SEND_THIS_CONTACT" data-bind="i18n: 'text'"></span> </span> <a class="item new_message command" href="javascript: void(0)" data-bind="visible: hasEmails, attr: {href: sendMailLink}"> <span class="icon" data-i18n="CONTACTS/BUTTON_EMAIL_TO_THIS_CONTACT" data-bind="i18n: 'title'"></span> <span class="text" data-i18n="CONTACTS/BUTTON_EMAIL_TO_THIS_CONTACT" data-bind="i18n: 'text'"></span> </a> </span> </div> <!-- /ko --> <div class="panel_top"> <!-- ko if: !$root.mobileApp --> <div class="toolbar"> <span class="content"> <a class="item mail_to" href="javascript: void(0)" data-bind="visible: hasEmails, click: sendThisContact"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/BUTTON_SEND_THIS_CONTACT"></span> </a> <a class="item mail_to" href="javascript: void(0)" data-bind="visible: hasEmails, attr: {href: sendMailLink}"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/BUTTON_EMAIL_TO_THIS_CONTACT"></span> </a> </span> </div> <!-- /ko --> <h2 class="title" data-bind="visibility: '' != displayName(), text: displayName()"></h2> <a class="item mail_to_title" href="javascript: void(0)" data-bind="attr: {href: sendMailLink}"> <span class="title email" data-bind="text: email()"></span> </a> </div> <div class="decor"></div> <div class="panel_center"> <div class="toolbar" data-bind="visible: !readOnly()"> <span class="content"> <span class="item edit" data-bind="click: function () { edited(true); }"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/BUTTON_EDIT_CONTACT"></span> </span> </span> </div> <div data-bind="customScrollbar: {}"> <div class="contact_content scroll-inner"> <div class="contact_data_groups"> <div class="fields"> <div class="fieldset"> <div class="row" data-bind="visible: '' !== firstName()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FIRST_NAME"></span>: </span> <span class="value" data-bind="text: firstName"></span> </div> <div class="row" data-bind="visible: '' !== lastName()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_LAST_NAME"></span>: </span> <span class="value" data-bind="text: lastName"></span> </div> <div class="row" data-bind="visible: '' !== skype()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_SKYPE"></span>: </span> <a href="javascript: void(0)" data-bind="attr: {href: 'skype:' + skype()}"> <span class="value" data-bind="text: skype"></span> </a> </div> <div class="row" data-bind="visible: '' !== facebook()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FACEBOOK"></span>: </span> <a href="javascript: void(0)" target="_blank" data-bind="visible: isStrLink(facebook()), attr: {href: facebook}"> <span class="value" data-bind="text: facebook"></span> </a> <span class="value" data-bind="visible: !isStrLink(facebook()), text: facebook"></span> </div> </div> </div> <div class="fields basic" data-bind="visible: !personalIsEmpty()"> <h2 class="subtitle" data-bind="i18n: 'text'" data-i18n="CONTACTS/HEADER_BASIC_INFO"></h2> <div class="fieldset"> <div class="row email" data-bind="visible: '' !== personalEmail()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PERSONAL_EMAIL"></span>: </span> <span class="value" data-bind="text: personalEmail"></span> </div> </div> <div class="fieldset address" data-bind="visible: personalStreetAddress() || personalCity() || personalState() || personalCountry() || personalZipCode()"> <span class="label address" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_ADDRESS"></span> <div class="row street" data-bind="visible: '' !== personalStreetAddress()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STREET_ADDRESS"></span>: </span> <span class="value" data-bind="text: personalStreetAddress"></span> </div> <div class="row city" data-bind="visible: '' !== personalCity()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_CITY"></span>: </span> <span class="value" data-bind="text: personalCity"></span> </div> <div class="row state" data-bind="visible: '' !== personalState()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STATE_PROVINCE"></span>: </span> <span class="value" data-bind="text: personalState"></span> </div> <div class="row country" data-bind="visible: '' !== personalCountry()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_COUNTRY_REGION"></span>: </span> <span class="value" data-bind="text: personalCountry"></span> </div> <div class="row zipcode" data-bind="visible: '' !== personalZipCode()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_ZIP_CODE"></span>: </span> <span class="value" data-bind="text: personalZipCode"></span> </div> </div> <div class="fieldset"> <div class="row webpage" data-bind="visible: '' !== personalWeb()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_WEB_PAGE"></span>: </span> <span class="value" data-bind="text: personalWeb"></span> </div> <div class="row fax" data-bind="visible: '' !== personalFax()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FAX"></span>: </span> <span class="value" data-bind="text: personalFax"></span> </div> <div class="row phone" data-bind="visible: '' !== personalPhone()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PHONE"></span>: </span> <span class="value" data-bind="text: personalPhone"></span> <span class="link call" data-i18n="call" data-bind="i18n: 'text', click: function() {onCallClick(personalPhone())}, visible: voiceApp"></span> </div> <div class="row mobile" data-bind="visible: '' !== personalMobile()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_MOBILE"></span>: </span> <span class="value" data-bind="text: personalMobile"></span> <span class="link call" data-i18n="call" data-bind="i18n: 'text', click: function() {onCallClick(personalMobile())}, visible: voiceApp"></span> </div> </div> </div> <div class="fields business" data-bind="visible: !businessIsEmpty()"> <h2 class="subtitle" data-bind="i18n: 'text'" data-i18n="CONTACTS/HEADER_BUSINESS_INFO"></h2> <div class="fieldset"> <div class="row email" data-bind="visible: '' !== businessEmail()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_BUSINESS_EMAIL"></span>: </span> <span class="value" data-bind="text: businessEmail"></span> </div> <div class="row company" data-bind="visible: '' !== businessCompany()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_COMPANY"></span>: </span> <span class="value" data-bind="text: businessCompany"></span> </div> <div class="row department" data-bind="visible: '' !== businessDepartment()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_DEPARTMENT"></span>: </span> <span class="value" data-bind="text: businessDepartment"></span> </div> <div class="row job" data-bind="visible: '' !== businessJob()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_JOB_TITLE"></span>: </span> <span class="value" data-bind="text: businessJob"></span> </div> <div class="row office" data-bind="visible: '' !== businessOffice()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_OFFICE"></span>: </span> <span class="value" data-bind="text: businessOffice"></span> </div> <div class="row street" data-bind="visible: '' !== businessStreetAddress()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STREET_ADDRESS"></span>: </span> <span class="value" data-bind="text: businessStreetAddress"></span> </div> <div class="row city" data-bind="visible: '' !== businessCity()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_CITY"></span>: </span> <span class="value" data-bind="text: businessCity"></span> </div> <div class="row state" data-bind="visible: '' !== businessState()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_STATE_PROVINCE"></span>: </span> <span class="value" data-bind="text: businessState"></span> </div> <div class="row zipcode" data-bind="visible: '' !== businessZipCode()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_ZIP_CODE"></span>: </span> <span class="value" data-bind="text: businessZipCode"></span> </div> <div class="row country" data-bind="visible: '' !== businessCountry()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_COUNTRY_REGION"></span>: </span> <span class="value" data-bind="text: businessCountry"></span> </div> <div class="row webpage" data-bind="visible: '' !== businessWeb()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_WEB_PAGE"></span>: </span> <span class="value" data-bind="text: businessWeb"></span> </div> <div class="row fax" data-bind="visible: '' !== businessFax()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_FAX"></span>: </span> <span class="value" data-bind="text: businessFax"></span> </div> <div class="row phone" data-bind="visible: '' !== businessPhone()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_PHONE"></span>: </span> <span class="value" data-bind="text: businessPhone"></span> <span class="link call" data-i18n="call" data-bind="i18n: 'text', click: function() {onCallClick(businessPhone())}, visible: voiceApp"></span> </div> </div> </div> <div class="fields other" data-bind="visible: !otherIsEmpty()"> <h2 class="subtitle" data-bind="i18n: 'text'" data-i18n="CONTACTS/HEADER_OTHER_INFO"></h2> <div class="fieldset"> <div class="row birthday" data-bind="visible: !birthdayIsEmpty()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_BIRTHDAY"></span>: </span> <span class="value"> <span data-bind="text: otherBirthday"></span> </span> </div> <div class="row email" data-bind="visible: '' !== otherEmail()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_OTHER_EMAIL"></span>: </span> <span class="value" data-bind="text: otherEmail"></span> </div> <div class="row notes" data-bind="visible: '' !== otherNotes()"> <span class="label"> <span class="text" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_NOTES"></span>: </span> <span class="value" data-bind="text: otherNotes"></span> </div> </div> </div> <div class="fields groups" data-bind="visible: !global() && 0 < $root.groupsInContactView($data).length"> <h2 class="subtitle" data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_CONTACTS_GROUPS"></h2> <div class="fieldset"> <div class="row" data-bind="foreach: $root.groupsInContactView($data)"><span data-bind="visible: $index() != 0">,</span> <span class="link" data-bind="text: Name(), click: function () { $root.onViewGroupClick($data); }"></span></div> </div> </div> </div> <div class="fields_switcher"> <span class="link" data-bind="visible: hasEmails, i18n: 'text', click: viewAllMails" data-i18n="CONTACTS/BUTTON_SEE_EMAILS_WITH_THIS_CONTACTS"></span> </div> </div> </div> </div> </script><script id="Contacts_ViewGroupViewModel" type="text/html"><div class="panel_top"> <div class="toolbar"> <span class="content"> <span class="item delete" data-bind=""> <span class="icon"></span> <span class="text" data-i18n="CONTACTS/BUTTON_DELETE_GROUP" data-bind="i18n: 'text', click: function() { $root.deleteGroup(idGroup()); }"></span> </span> <span class="item edit" data-bind=""> <span class="icon"></span> <span class="text" data-i18n="CONTACTS/BUTTON_EDIT_GROUP" data-bind="i18n: 'text', click: function (oItem) { $root.editGroup(oItem); }"></span> </span> <span class="item mail_to"> <span class="icon"></span> <span class="text" data-i18n="CONTACTS/BUTTON_EMAIL_TO_THIS_GROUP" data-bind="i18n: 'text', click: function() { $root.mailGroup($data); }"></span> </span> </span> </div> <h2 class="title" data-bind="i18n: 'text', visible: !isNew()" data-i18n="CONTACTS/LABEL_VIEW_GROUP"></h2> </div> <div class="decor"></div> <div class="panel_center" data-bind="customScrollbar: {}"> <div class="contact_content scroll-inner"> <div class="contact_data_groups"> <div class="fields clearfix"> <div class="row" data-bind="visible: '' !== name()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_NAME"></span>: </span> <span class="value" data-bind="text: name"></span> </div> <div data-bind="visible: '' !== isOrganization()"> <div class="row" data-bind="visible: '' !== email()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_EMAIL"></span>: </span> <span class="value" data-bind="text: email"></span> </div> <div class="row" data-bind="visible: '' !== company()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_COMPANY"></span>: </span> <span class="value" data-bind="text: company"></span> </div> <div class="row" data-bind="visible: '' !== country()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_COUNTRY"></span>: </span> <span class="value" data-bind="text: country"></span> </div> <div class="row" data-bind="visible: '' !== state()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_STATE"></span>: </span> <span class="value" data-bind="text: state"></span> </div> <div class="row" data-bind="visible: '' !== city()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_CITY"></span>: </span> <span class="value" data-bind="text: city"></span> </div> <div class="row" data-bind="visible: '' !== street()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_STREET"></span>: </span> <span class="value" data-bind="text: street"></span> </div> <div class="row" data-bind="visible: '' !== zip()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_ZIP"></span>: </span> <span class="value" data-bind="text: zip"></span> </div> <div class="row" data-bind="visible: '' !== phone()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_PHONE"></span>: </span> <span class="value" data-bind="text: phone"></span> </div> <div class="row" data-bind="visible: '' !== fax()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_FAX"></span>: </span> <span class="value" data-bind="text: fax"></span> </div> <div class="row" data-bind="visible: '' !== web()"> <span class="label"> <span data-bind="i18n: 'text'" data-i18n="CONTACTS/LABEL_GROUP_WEB"></span>: </span> <span class="value" data-bind="text: web"></span> </div> </div> </div> <div class="fields"> <div class="items_section" data-bind="foreach: events"> <div> <span class="value" data-bind="text: subject"></span> <br/> <span class="value" data-bind="text: '(' + start + ' - ' + end + ')'"></span> <br/><br/> </div> </div> </div> </div> <div class="fields_switcher"> <span class="link" data-bind="visible: $root.selectedGroupContactsList().length !== 0, i18n: 'text', click: function() { $root.viewAllMails(); }" data-i18n="CONTACTS/BUTTON_SEE_EMAILS_WITH_THIS_GROUP"></span> </div> </div> </div> </script><script id="FileStorage_FileList" type="text/html"><div class="panel_top pathway"> <!-- ko foreach: pathItems() --> <!-- ko if: $parent.iPathIndex() !== $index() || $index() === 0 || $parent.searchPattern() !== '' --> <!-- ko if: $index() > 0 -->&raquo;<!-- /ko --> <a data-bind="    text: displayName(),     click: function () { $parent.getFiles(storageType(), $parent.getPathItemByIndex($index())); },    droppable: {valueFunc: function (oEvent, oUi) {$root.filesDrop($data, oEvent, oUi);}}    "></a> <!-- /ko --> <!-- ko if: $parent.iPathIndex() === $index() && $index() > 0 &&  $parent.searchPattern() === '' --> &raquo; <b data-bind="text: displayName()"></b> <!-- /ko --> <!-- /ko --> <!-- ko if: searchPattern() !== '' --> &raquo; <b data-bind="i18n: 'text'" data-i18n="FILESTORAGE/SEARCH_RESULTS"></b> (<a class="text" data-bind="i18n: 'text', click: clearSearch" data-i18n="FILESTORAGE/SEARCH_CLEAR"></a>) <!-- /ko --> </div> <div class="panel_center unselectable" data-bind="customScrollbar: {x: false}, css: {dragover: dragover()}"> <div class="files_scroll scroll-inner"> <div class="items_list"> <span class="list_notification" data-bind="visible: fileListInfoText()!==''"> <span class="description" data-bind="text: fileListInfoText()"></span> </span> <div class="items_sub_list large attachments" data-bind="columnCalc: {'prop': columnCount, 'itemSelector': '.item.helper'}"> <!-- ko foreach: collection --> <!-- ko if: isFolder() --> <!-- ko template: {name: 'FileStorage_FolderItem'} --><!-- /ko --> <!-- /ko --> <!-- ko if: !isFolder() --> <!-- ko template: {name: 'Common_FileViewModel'} --><!-- /ko --> <!-- /ko --> <!-- /ko --> <div class="item helper"></div> </div> <div class="uploader_mask" data-bind="initDom: uploaderArea, css: {'active': bDragActiveComp}"> <div class="inner"></div> </div> </div> </div> </div></script><script id="FileStorage_FileStorageViewModel" type="text/html"><div class="panels" data-bind="splitter: {name: (isPublic ? 'file_storages_pub' : 'file_storages'), sizeLeft: (isPublic ? 0 : 200), minLeft: (isPublic ? 0 : 20), minRight: 572, resizeToWidth: true}"> <div class="panel storages" data-bind="visible: !isPublic"> <div class="resize_handler"></div> <div class="panel_content"> <div class="toolbar"> <span class="content">  <a class="item upload" data-bind="initDom: uploaderButton">  <span data-bind="i18n: 'text'" data-i18n="FILESTORAGE/BUTTON_UPLOAD_FILES"></span>  </a> </span> </div> <div class="middle_bar" data-bind=""> <!-- ko template: { name: 'FileStorage_StorageList'} --><!-- /ko --> <div class="panel_bottom"> <span class="volumer" data-bind="visible: -1 < quotaProc()"> <span class="volumer_conteiner" title="" data-bind="attr: {'title': quotaDesc}"> <span class="used" data-bind="style: {'width': '' + (-1 < quotaProc() ? quotaProc() : 0) + '%' }"></span> </span> </span> </div> </div> </div> </div> <div class="panel files"> <div class="panel_content"> <div class="toolbar" data-bind="template: { name: 'FileStorage_Toolbar'}"></div> <div class="middle_bar" data-bind="template: {name: 'FileStorage_FileList'}"></div> </div> </div> </div></script><script id="FileStorage_FolderItem" type="text/html"><div class="item dragHandle folder" draggable="true"  data-bind=" event: ($parent.isPopup) ? null : { 'dragstart': eventDragStart }, draggablePlace: $parent.dragAndDropHelperBinded, draggableDragStartCallback: function() {if (!$parent.isPopup) $root.dragover(true);}, draggableDragStopCallback: function() {if (!$parent.isPopup) $root.dragover(false);}, css: {'selected': selected(),    'checked': checked(),   'deleted': deleted(),   'incomplete': !uploaded(),   'shared': shared() && !$root.isPublic }" > <div class="item_content ui-droppable" data-bind="css: {'recivedAnim': recivedAnim()}"> <div class="image"> <span class="icon animGoal"></span> </div> <span class="shared_icon" data-bind="i18n: 'title', click: function (oItem) {$root.onShareIconClick(oItem)}" data-i18n="COMPOSE/FILES_SHARED"></span> <span class="name" data-bind="text: fileName(), visible: !edited()"></span> <input type="text" class="input" maxlength="30" data-bind="value: nameForEdit(), visible: edited, hasfocus: edited" /> <span class="progress" data-bind="visible: !uploaded()"> <span data-bind="style: {'width': progressPercent() + '%'}"></span> <span class="percent" data-bind="text: progressPercent() + '%'"></span> </span> <div class="separator"></div> </div> <div class="mask" data-bind="droppable: {valueFunc: function (oEvent, oUi) {$root.filesDrop($data, oEvent, oUi);}}"></div> </div> </script><script id="FileStorage_StorageList" type="text/html"><div class="panel_center" data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <div class="items_list"> <!-- ko foreach: storages --> <div class="item canSelect" data-bind="css: {'selected': storageType() === $parent.storageType()}"> <a href="javascript: void(0);" class="title" data-bind=" droppable: {valueFunc: function (oEvent, oUi) {$parent.filesDrop($data, oEvent, oUi);}}, click: function () { $parent.getFiles(storageType()); }"> <span class="name"> <span class="icon" data-bind="css: 'type' + (storageType() + 1)"></span> <span class="text" data-bind="text: displayName()"></span> </span> </a> </div> <!-- /ko --> </div> </div> </div> </script><script id="FileStorage_Toolbar" type="text/html"> <span class="content"> <span class="search_block" data-bind="visible: !isPublic"> <span class="input" data-bind="css: {'focus': isSearchFocused}"> <span class="icon search" data-i18n="CONTACTS/BUTTON_SEARCH" data-bind="i18n: 'text'"></span> <input class="field" spellcheck="false" type="text" data-bind="hasfocus: isSearchFocused, value: searchPattern, onEnter: onSearch" /> </span> </span> <span class="item new_folder" data-bind="visible: !isPublic, click: onCreateFolderClick, i18n: 'title'"   data-i18n="FILESTORAGE/NEW_FOLDER"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="FILESTORAGE/NEW_FOLDER"></span> </span> <span class="item new_link" data-bind="visible: !isPublic && !isCurrentStorageExternal(), click: onCreateLinkClick, i18n: 'title'"   data-i18n="FILESTORAGE/BUTTON_UPLOAD_FILE_AS_LINK"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="FILESTORAGE/BUTTON_UPLOAD_FILE_AS_LINK"></span> </span> <span class="item download" data-bind="command: downloadCommand, i18n: 'title'"   data-i18n="FILESTORAGE/BUTTON_DOWNLOAD_FILE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="FILESTORAGE/BUTTON_DOWNLOAD_FILE"></span> </span> <span class="item send_files command" data-bind="visible: !isPublic, command: sendCommand, i18n: 'title'"   data-i18n="FILESTORAGE/BUTTON_SEND_FILE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="FILESTORAGE/BUTTON_SEND_FILE"></span> </span> <span class="item edit" data-bind="visible: !isPublic, command: renameCommand, i18n: 'title'"   data-i18n="FILESTORAGE/BUTTON_RENAME"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="FILESTORAGE/BUTTON_RENAME"></span> </span> <span class="item publish" data-bind="visible: !isPublic, command: shareCommand, i18n: 'title'"   data-i18n="FILESTORAGE/BUTTON_PUBLIC_LINK"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="FILESTORAGE/BUTTON_PUBLIC_LINK"></span> </span> <span class="item delete" data-bind="visible: !isPublic, command: deleteCommand, i18n: 'title'"   data-i18n="FILESTORAGE/BUTTON_DELETE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="FILESTORAGE/BUTTON_DELETE"></span> </span> </span></script><script id="Helpdesk_Header" type="text/html"><span class="item helpdesk"> <span class="helper" data-bind="i18n: 'text'" data-i18n="HELPDESK/TITLE_WELCOME"></span> <a class="text" href="#" data-bind="attr: {href: sThreadsHash}, i18n: 'text'" data-i18n="HELPDESK/TITLE_WELCOME"></a> </span> <span class="item logout"> <a class="text" href="#" data-bind="click: logout, i18n: 'text'" data-i18n="HEADER/LOGOUT"></a> </span> <span class="item settings"> <a class="text" href="#" data-bind="attr: {href: sSettingsHash}, i18n: 'text'" data-i18n="HEADER/SETTINGS"></a> </span> </script><script id="Helpdesk_HelpdeskViewModel" type="text/html"><div class="panels" data-bind="css: {'AgentArea': bAgent, 'UserArea': !bAgent}"> <div class="panel_helper" data-bind="splitter: {name: 'helpdesk_sub_screens', sizeLeft: 350, minLeft: 250, minRight: 550, resizeToWidth: true}"> <div class="panel threads"> <div class="resize_handler"></div> <div class="panel_content"> <div class="toolbar" data-bind="if: !bAgent"> <span class="content"> <span class="item new_request" data-bind="click: openNewThread"> <span class="icon" data-bind="i18n: 'title'" data-i18n="HELPDESK/ACTION_NEW_REQUEST"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/ACTION_NEW_REQUEST"></span> </span> </span> </div> <div class="middle_bar" data-bind="visible: bAgent, template: {name: 'Helpdesk_ThreadsList'}"></div> <div class="middle_bar" data-bind="visible: !bAgent, template: {name: 'Helpdesk_ThreadsListExt'}"></div> </div> </div> <div class="panel item_viewer thread_viewer"> <div class="panel_content"> <div class="middle_bar" data-bind="visible: !visibleNewThread() && selectedItem(), css: {'own_thread': simplePreviewPane()}, heightAdjust: {'location': 'bottom', 'elements': [domQuickReply], 'triggers': [uploadedFiles(), isQuickReplyActive(), replySendingStarted(), isQuickReplyHidden()]}"> <!-- ko template: { name: simplePreviewPane() ? 'Helpdesk_ViewThreadExt' : 'Helpdesk_ViewThread' } --><!-- /ko --> <!-- ko template: { name: 'Helpdesk_QuickReply' } --><!-- /ko --> </div> <div class="middle_bar new_request" data-bind="visible: visibleNewThread()"> <!-- ko template: { name: 'Helpdesk_NewThread'} --><!-- /ko --> </div> </div> </div> </div> </div> </script><script id="Helpdesk_Login" type="text/html"><div class="panels"> <!-- loginCustomLogo --> <div class="login_panel" data-bind="css: {'flipForgot': gotoForgot(), 'flipRegister': gotoRegister(), 'flipSocialRegister': gotoSocialRegister(), 'flipChangepass': gotoChangepass()}"> <div class="login_panel_content"> <div class="header" data-bind="css: {'custom_logo': loginCustomLogo()}"> <!-- ko if: loginCustomLogo() === '' --><span class="icon"></span><!-- /ko --> <!-- ko if: loginCustomLogo() !== '' --><img data-bind="attr: {'src': loginCustomLogo()}"/><!-- /ko --> <span class="text" data-i18n="LOGIN/HEADING" data-bind="i18n: 'text'"></span> </div> <!--<div class="content clearfix" data-bind="css: {'flipIn': gotoForgot() && forgotAnimation(), 'flipOut': !gotoForgot() && forgotAnimation()}">--> <div class="col right"> <div class="content login clearfix"> <form class="form fields" action="#/" onsubmit="return false;"> <div class="fieldset"> <div class="row email" data-bind="css: {'focused': emailFocus(), 'filled': email().length > 0, shake: shake()}"> <label for="email" class="title placeholder"></label> <span class="value"> <input id="email" class="input check_autocomplete_input" data-i18n="LOGIN/LABEL_EMAIL" type="email" spellcheck="false" data-bind="value: email, hasfocus: emailFocus, valueUpdate: 'afterkeydown', i18n: 'placeholder'" /> </span> </div> <div class="row password" data-bind="css: {'focused': passwordFocus(), 'filled': password().length > 0, shake: shake()}"> <label for="password" class="title placeholder"></label> <span class="value"> <input id="password" class="input check_autocomplete_input" data-i18n="LOGIN/LABEL_PASSWORD" type="password" spellcheck="false" data-bind="value: password, hasfocus: passwordFocus, valueUpdate: 'afterkeydown', i18n: 'placeholder'" /> </span> </div> </div> <div class="row buttons"> <button type="submit" class="button login" data-bind="text: signInButtonText, command: loginCommand"></button> </div> <div class="row links"> <div class="forgot"> <span class="link" data-bind="click: function () {gotoForgot(true);}, i18n: 'text'"   data-i18n="HELPDESK/LINK_FORGOT"></span> </div> </div> <div class="row social links"> <div class="facebook" data-bind="visible: socialFacebook, click: function () {onSocialClick('facebook');}"> <span class="text" data-bind="i18n: 'text'" data-i18n="Log In"></span> </div> <div class="google" data-bind="visible: socialGoogle, click: function () {onSocialClick('google');}"> <span class="text" data-bind="i18n: 'text'" data-i18n="Log In"></span> </div> <div class="twitter" data-bind="visible: socialTwitter, click: function () {onSocialClick('twitter');}"> <span class="text" data-bind="i18n: 'text'" data-i18n="Log In"></span> </div> </div> </form> <div class="description" data-bind="visible: '' !== loginDescription(), html: loginDescription"></div> <div class="clear"></div> </div> <div class="content forgot clearfix"> <form class="form fields" action="#/" onsubmit="return false;"> <div class="fieldset"> <div class="row email forgot" data-bind="css: {'focused': forgotEmailFocus(), 'filled': forgotEmail().length > 0}"> <label for="forgot_email" class="title placeholder" data-i18n="LOGIN/LABEL_EMAIL" data-bind="i18n: 'text'"></label> <span class="value"> <input id="forgot_email" class="input" type="email" spellcheck="false" autocomplete="off" data-bind="value: forgotEmail, hasfocus: forgotEmailFocus, valueUpdate: 'afterkeydown'" /> </span> </div> </div> <div class="row buttons"> <button type="submit" class="button send" data-bind="command: forgotCommand, text: forgotButtonText()"></button> </div> <div class="row signme forgot"> <span class="link" data-bind="click: function () {gotoForgot(false);}, i18n: 'text'"   data-i18n="HELPDESK/BUTTON_BACK"></span> </div> </form> <div class="clear"></div> </div> </div> <div class="col left"> <div class="content send clearfix"> <form class="form fields" action="#/" onsubmit="return false;"> <span class="question_title" data-i18n="Ask your first question" data-bind="i18n: 'text'"></span> <div class="fieldset"> <textarea class="question" data-bind="hasfocus: helpdeskQuestionFocus, value: helpdeskQuestion, valueUpdate: 'afterkeydown'"></textarea> </div> <div class="row buttons"> <button type="submit" class="button send" data-bind="text: 'Send', command: sendCommand"></button> </div> <div class="row links"> <div class="register"> <span class="link" data-bind="click: function () {gotoRegister(true); gotoSignin(false);}, i18n: 'text'"   data-i18n="HELPDESK/LINK_REGISTER"></span> </div> </div> </form> </div> </div> <div class="content register clearfix"> <form class="form fields" action="#/" onsubmit="return false;"> <div class="fieldset"> <div class="row name" data-bind="css: {'focused': regNameFocus(), 'filled': regName().length > 0}"> <label for="name" class="title placeholder" data-i18n="Name" data-bind="i18n: 'text'"></label> <span class="value"> <input id="name" class="input" type="text" autocomplete="off" spellcheck="false" data-bind="value: regName, hasfocus: regNameFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <div class="row email" data-bind="css: {'focused': regEmailFocus(), 'filled': regEmail().length > 0}"> <label for="reg_email" class="title placeholder" data-i18n="Email" data-bind="i18n: 'text'"></label> <span class="value"> <input id="reg_email" class="input" type="text" autocomplete="off" spellcheck="false" data-bind="value: regEmail, hasfocus: regEmailFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <div class="row password" data-bind="css: {'focused': regPasswordFocus(), 'filled': regPassword().length > 0}"> <label for="reg_password" class="title placeholder" data-i18n="LOGIN/LABEL_PASSWORD" data-bind="i18n: 'text'"></label> <span class="value"> <input id="reg_password" class="input" type="password" autocomplete="off" spellcheck="false" data-bind="value: regPassword, hasfocus: regPasswordFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <div class="row password" data-bind="css: {'focused': regConfirmPasswordFocus(), 'filled': regConfirmPassword().length > 0}"> <label for="reg_confirm_password" class="title placeholder" data-i18n="HELPDESK/LABEL_CONFIRM_PASSWORD" data-bind="i18n: 'text'"></label> <span class="value"> <input id="reg_confirm_password" class="input" type="password" autocomplete="off" spellcheck="false" data-bind="value: regConfirmPassword, hasfocus: regConfirmPasswordFocus, valueUpdate: 'afterkeydown'" /> </span> </div> </div> <div class="row buttons"> <button type="submit" class="button send" data-bind="command: registerCommand, text: regButtonText()"></button> </div> <div class="row signme forgot"> <span class="link" data-bind="click: function () {gotoRegister(false);}, i18n: 'text'"   data-i18n="HELPDESK/BUTTON_BACK"></span> </div> <div class="row social links"> <div class="facebook" data-bind="visible: socialFacebook, click: function () {onSocialClick('facebook');}"> <span class="text" data-bind="i18n: 'text'" data-i18n="Log In"></span> </div> <div class="google" data-bind="visible: socialGoogle, click: function () {onSocialClick('google');}"> <span class="text" data-bind="i18n: 'text'" data-i18n="Log In"></span> </div> <div class="twitter" data-bind="visible: socialTwitter, click: function () {onSocialClick('twitter');}"> <span class="text" data-bind="i18n: 'text'" data-i18n="Log In"></span> </div> </div> </form> <div class="clear"></div> </div> <div class="content social_register clearfix"> <form class="form fields" action="#/" onsubmit="return false;"> <div class="fieldset"> <div class="row email" data-bind="css: {'focused': regSocialEmailFocus(), 'filled': regSocialEmail().length > 0}"> <label for="social_reg_email" class="title placeholder" data-i18n="Email" data-bind="i18n: 'text'"></label> <span class="value"> <input id="social_reg_email" class="input" type="text" spellcheck="false" autocomplete="off" data-bind="value: regSocialEmail, hasfocus: regSocialEmailFocus, valueUpdate: 'afterkeydown'" /> </span> </div> </div> <div class="row buttons"> <button type="submit" class="button send" data-bind="click: actionSocialRegister, text: regButtonText()"></button> </div> <div class="row signme forgot"> <span class="link" data-bind="click: function () {gotoSocialRegister(false);}, i18n: 'text'"   data-i18n="HELPDESK/BUTTON_BACK"></span> </div> </form> </div> <div class="content changepass clearfix"> <form class="form fields" action="#/" onsubmit="return false;"> <div class="fieldset"> <div class="row password" data-bind="css: {'focused': changepassNewpassFocus(), 'filled': changepassNewpass().length > 0}"> <label for="changepass_newpass" class="title placeholder" data-i18n="HELPDESK/LABEL_NEW_PASSWORD" data-bind="i18n: 'text'"></label> <span class="value"> <input id="changepass_newpass" class="input" type="password" spellcheck="false" autocomplete="off" data-bind="value: changepassNewpass, hasfocus: changepassNewpassFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <div class="row password" data-bind="css: {'focused': changepassConfirmpassFocus(), 'filled': changepassConfirmpass().length > 0}"> <label for="changepass_confirmpass" class="title placeholder" data-i18n="HELPDESK/LABEL_CONFIRM_PASSWORD" data-bind="i18n: 'text'"></label> <span class="value"> <input id="changepass_confirmpass" class="input" type="password" spellcheck="false" autocomplete="off" data-bind="value: changepassConfirmpass, hasfocus: changepassConfirmpassFocus, valueUpdate: 'afterkeydown'" /> </span> </div> </div> <div class="row buttons"> <button type="submit" class="button send" data-bind="click: actionChangepass, text: changepassButtonText()"></button> </div> <div class="row signme forgot"> <span class="link" data-bind="click: backToLogin, i18n: 'text'"   data-i18n="HELPDESK/LINK_BACK_TO_LOGIN"></span> </div> </form> <div class="clear"></div> </div> </div> </div> <div class="vhelper"></div> </div> </script><script id="Helpdesk_NewThread" type="text/html"><div class="panel_top"> <a class="link cancel" data-bind="click: cancelNewThread, i18n: 'text'" data-i18n="HELPDESK/BUTTON_CANCEL"></a> <h2 class="title" data-bind="i18n: 'text'" data-i18n="HELPDESK/TITLE_NEW_THREAD"></h2> </div> <div class="panel_center"> <div class="fields"> <div class="row" data-bind="css: { 'filled': newThreadText().length > 0 }"> <label class="title placeholder" data-bind="i18n: 'text'" data-i18n="HELPDESK/CREATE_FORM_PLACEHOLDER"></label> <span class="value"> <textarea class="input" data-bind="value: newThreadText, valueUpdate: 'afterkeydown', attr: {'disabled': newThreadCreating}"></textarea> </span> </div> <div class="row data attachments upload" data-bind="visible: uploadedFiles().length > 0"> <!-- ko template: {name: 'Common_FileViewModel', foreach: uploadedFiles} --><!-- /ko --> </div> <div class="buttons"> <span class="button upload" data-bind="visible: uploadedFiles().length < 5, i18n: 'text', initDom: uploaderButtonCompose, css: {'dragOver': bDragActive}" > <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/ACTION_ADD_ATTACHMENT"></span> </span> <button class="button create" data-bind="command: createThreadCommand, text: createThreadButtonText"></button> </div> </div> </div></script><script id="Helpdesk_QuickReply" type="text/html"><div class="quick_reply fields" data-bind="initDom: domQuickReply, quickReplyAnim: { 'sendAction': replySendingStarted(), 'activeAction': isQuickReplyActive() }, visible: replyPaneVisible(), css: { 'internal': internalNote(), 'hidden': isQuickReplyHidden() }"> <div class="status"> <div class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/INFO_SENDING"></div> </div> <div class="row" data-bind="css: {'focused': replyTextFocus(), 'filled': replyText().length > 0}"> <label for="reply_text" class="title placeholder" data-bind="i18n: 'text'" data-i18n="HELPDESK/REPLY_FORM_PLACEHOLDER"></label> <textarea id="reply_text" class="input" data-bind="value: replyText, hasfocus: replyTextFocus, onCtrlEnter: postCommand, valueUpdate: 'afterkeydown'"></textarea> </div> <div class="row data attachments upload" data-bind="visible: uploadedFiles().length > 0"> <div data-bind="css: 'count' + uploadedFiles().length"> <!-- ko template: {name: 'Common_FileViewModel', foreach: uploadedFiles} --><!-- /ko --> </div> </div> <div class="row data" data-bind="visible: allowInternalNote"> <span class="label"></span> <span class="value"> <label data-bind="css: {'checked': internalNote}" class="custom_checkbox"> <span class="icon"></span> <input type="checkbox" data-bind="checked: internalNote" id="internal" /> </label> <label for="internal" data-i18n="HELPDESK/REPLY_FORM_INTERNAL_NOTE" data-bind="i18n: 'text'"></label> </span> </div> <div class="buttons"> <span class="button upload" data-bind="visible: uploadedFiles().length < 5, i18n: 'text', initDom: uploaderButton, css: {'dragOver': bDragActive}" > <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/ACTION_ADD_ATTACHMENT"></span> </span> <span class="button send" data-bind="command: postCommand, i18n: 'text'" data-i18n="MAIN/BUTTON_SEND"></span> <span class="text hint" data-i18n="COMPOSE/QUICK_REPLY_HOTKEY" data-bind="i18n: 'text'"></span> </div> <!-- <div class="uploader_mask1" data-bind="initDom: uploaderArea, css: {'active': bDragActive}"> <div class="inner"></div> </div>--> </div></script><script id="Helpdesk_SettingsExt" type="text/html"><div class="panels settings"> <div class="panel_helper"> <div class="panel"> <div class="panel_content"> <div class="middle_bar common"> <div class="panel_top"> <h2 class="title" data-i18n="HELPDESK/SETTINGS_TITLE" data-bind="i18n: 'text'"></h2> </div> <div class="panel_center"> <div class="fields"> <div class="fieldset"> <div class="row" data-bind=""> <span class="label" data-i18n="HELPDESK/SETTINGS_YOURNAME" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" data-bind="value: name" /> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/COMMON_TIME_FORMAT" data-bind="i18n: 'text'"></span> <span class="value"> <label class="custom_radio" data-bind="css: {'checked': timeFormat() === Enums.TimeFormat.F12}"> <span class="icon"></span> <input type="radio" id="timeformat_12" data-bind="checked: timeFormat, attr: {'value': Enums.TimeFormat.F12}" /> </label> <label for="timeformat_12" data-i18n="SETTINGS/COMMON_TIME_FORMAT_12" data-bind="i18n: 'text'"></label> <label class="custom_radio" data-bind="css: {'checked': timeFormat() === Enums.TimeFormat.F24}"> <span class="icon"></span> <input type="radio" id="timeformat_24" data-bind="checked: timeFormat, attr: {'value': Enums.TimeFormat.F24}" /> </label> <label for="timeformat_24" data-i18n="SETTINGS/COMMON_TIME_FORMAT_24" data-bind="i18n: 'text'"></label> </span> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/COMMON_DATE_FORMAT" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: dateFormat, options: aDateFormats, optionsText: 'name', optionsValue: 'value'"></select> </div> <div class="buttons"> <span class="button" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_CHANGE_PASSWORD" data-bind="i18n: 'text', click: onChangePasswordClick"></span> </div> </div> <div class="buttons"> <span class="button" data-bind="click: backToHelpdesk"> <span data-i18n="HELPDESK/BUTTON_BACK" data-bind="i18n: 'text'"></span> </span> <span class="button" data-bind="click: save"> <span data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text'"></span> </span> </div> </div> </div> </div> </div> </div> </div> </div></script><script id="Helpdesk_ThreadItem" type="text/html"><div class="item" data-bind="css: { 'selected': selected(), 'checked': checked(), 'deleted': deleted(), 'unseen': unseen(), 'pending': state() === Enums.HelpdeskThreadStates.Pending, 'resolved': state() === Enums.HelpdeskThreadStates.Resolved, 'waiting': state() === Enums.HelpdeskThreadStates.Waiting, 'deferred': state() === Enums.HelpdeskThreadStates.Deferred, 'answered': state() === Enums.HelpdeskThreadStates.Answered  }"> <div class="item_content"> <span class="data"> <span class="state" data-bind="text: printableState()"></span> <span class="title from" data-bind="text: sFrom"></span> <span class="separator"></span> <span class="date" data-bind="text: sDate"></span> <span class="subtitle subject" data-bind="text: sSubject"></span> </span> <div class="separator"></div> </div> </div> </script><script id="Helpdesk_ThreadItemExt" type="text/html"><div class="item"  data-bind="css: { 'selected': selected(), 'checked': checked(), 'deleted': deleted(), 'unseen': unseen(), 'pending': state() === Enums.HelpdeskThreadStates.Pending, 'resolved': state() === Enums.HelpdeskThreadStates.Resolved, 'waiting': state() === Enums.HelpdeskThreadStates.Waiting, 'deferred': state() === Enums.HelpdeskThreadStates.Deferred, 'answered': state() === Enums.HelpdeskThreadStates.Answered  }"> <div class="item_content"> <span class="data"> <span class="state" data-bind="text: printableState()"></span> <span class="title from" data-bind="text: sFrom"></span> <span class="separator"></span> <span class="date" data-bind="text: sDate"></span> <span class="subtitle subject" data-bind="text: sSubject"></span> </span> <div class="separator"></div> </div> </div> </script><script id="Helpdesk_ThreadsList" type="text/html"><div class="panel_top"> <div class="toolbar" data-bind="style: {paddingLeft: bRtl ? '' : newThreadButtonWidth()+'px', paddingRight: bRtl ? newThreadButtonWidth()+'px' : ''}"> <span class="content"> <span class="item new_request" data-bind="click: openNewThread, watchWidth: newThreadButtonWidth, style: {marginLeft: bRtl ? '' : '-' + newThreadButtonWidth()+'px', marginRight: bRtl ? '-' + newThreadButtonWidth()+'px' : ''}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="HELPDESK/ACTION_NEW_REQUEST"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/ACTION_NEW_REQUEST"></span> </span> <span class="search_block"> <span class="input" data-bind="css: {'focus': isSearchFocused}"> <span class="icon search" data-i18n="HEPLDESK/BUTTON_SEARCH" data-bind="i18n: 'text'"></span> <input class="field" type="text" spellcheck="false" data-bind="value: search, onEnter: searchSubmitCommand, hasfocus: isSearchFocused" /> </span> </span> <span class="item checkmail" data-bind="command: checkCommand, checkmail: {'activeClass': 'process', 'state': checkStarted(), 'duration': 800}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="HELPDESK/TOOL_CHECK"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/TOOL_CHECK"></span> </span> </span> </div> </div> <div class="panel_center unselectable" data-bind="customScrollbar: {x: false}"> <div class="threads_scroll scroll-inner"> <div class="items_list"> <span class="list_notification" data-bind="visible: isSearch() && !isEmptyList()"> <span class="link" data-i18n="HELPDESK/LINK_CLEAR_SEARCH" data-bind="i18n: 'text', click: onClearSearchClick"></span> <span class="description" data-bind="text: searchText"></span> </span> <div class="items_sub_list"> <!-- ko template: {name: 'Helpdesk_ThreadItem', foreach: threads} --><!-- /ko --> <div class="item helper"></div> </div> <span class="list_notification" data-bind="visible: loadingList() && isEmptyList()"> <span class="description" data-i18n="HELPDESK/INFO_LOADING_THREAD_LIST" data-bind="i18n: 'text'" ></span> </span> <span class="list_notification" data-bind="visible: !loadingList() && isEmptyList()"> <span class="description" data-bind="text: dynamicEmptyListInfo"></span> </span> </div> </div> </div> <div class="panel_bottom unselectable"> <!-- ko template: {name: 'Common_PageSwitcherViewModel', data: oPageSwitcher} --><!-- /ko --> <a href="javascript: void(0);" data-bind="css: {'selected': listFilter() === Enums.HelpdeskFilters.All}, click: function () { listFilter(Enums.HelpdeskFilters.All); }, i18n: 'text'" data-i18n="HELPDESK/THREADS_LIST_FILTER_ALL"></a> <a href="javascript: void(0);" data-bind="css: {'selected': listFilter() === Enums.HelpdeskFilters.Open}, click: function () { listFilter(Enums.HelpdeskFilters.Open); }, i18n: 'text'" data-i18n="HELPDESK/THREADS_LIST_FILTER_OPEN"></a> </div> </script><script id="Helpdesk_ThreadsListExt" type="text/html"><div class="panel_center unselectable" data-bind="customScrollbar: {x: false}"> <div class="threads_scroll scroll-inner"> <div class="items_list"> <div class="details" data-bind="visible: !clientDetailsVisible() && '' !== externalContentUrl()"> <div class="details_content"> <span class="link details_show" data-i18n="HELPDESK/ACTION_SHOW_DETAILS"  data-bind="i18n: 'text', click: showClientDetails"></span> </div> </div> <div class="details" data-bind="visible: clientDetailsVisible() && '' !== externalContentUrl()"> <div class="details_content"> <span class="link details_hide" data-i18n="HELPDESK/ACTION_HIDE_DETAILS" data-bind="i18n: 'text', click: hideClientDetails"></span> <!-- ko if: '' !== externalContentUrl() --> <iframe class="external_content" src="javascript:void(0);" data-bind="attr: { 'src': externalContentUrl }"></iframe> <!-- /ko --> </div> </div> <span class="list_notification" data-bind="visible: isSearch() && !isEmptyList()"> <span class="link" data-i18n="MAILBOX/LINK_CLEAR_SEARCH" data-bind="i18n: 'text', click: onClearSearchClick"></span> <span class="description" data-bind="text: searchText"></span> </span> <div class="items_sub_list"> <!-- ko template: {name: 'Helpdesk_ThreadItemExt', foreach: threads} --><!-- /ko --> <div class="item helper"></div> </div> <span class="list_notification" data-bind="visible: loadingList()"> <span class="description" data-i18n="HELPDESK/INFO_LOADING_THREAD_LIST" data-bind="i18n: 'text'" ></span> </span> <span class="list_notification" data-bind="visible: !loadingList() && isEmptyList()"> <span class="description" data-bind="text: dynamicEmptyListInfo"></span> </span> </div> </div> </div></script><script id="Helpdesk_ViewThread" type="text/html"><div class="panel_top clearfix"> <div class="toolbar"> <span class="content"> <!-- ko foreach: watchers --> <!-- ko if: $index() < 5 --> <span class="item watcher" data-bind="attr: {title: $data.text}"> <span class="icon" data-bind="attr: {title: $data.text}, visible: $data.icon"></span> <span class="text_icon" data-bind="text: $data.initial, visible: !$data.icon"></span> <span class="text" data-bind="text: $data.text"></span> </span> <!-- /ko --> <!-- /ko --> <!-- ko if: watchers().length > 5 --> <span class="item control" data-bind="dropdown: {control: false}"> <span class="icon arrow"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> <!-- ko foreach: watchers --> <!-- ko if: $index() >= 5 --> <span class="item" data-bind="text: $data"></span> <!-- /ko --> <!-- /ko --> </span> </span> </span> </span> <!-- /ko --> <span class="group resolve" data-bind="dropdown: {}"> <span class="item" data-bind="command: closeCommand"> <span class="icon" data-bind="i18n: 'title'" data-i18n="HELPDESK/TOOL_CLOSE"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/TOOL_CLOSE"></span> </span> <span class="item control"> <span class="icon arrow"></span> </span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> <span class="item allread" data-bind="command: pendingCommand, i18n: 'text'"   data-i18n="HELPDESK/THREAD_STATE_PENDING"></span> <span class="item unread" data-bind="command: deferCommand, i18n: 'text'"   data-i18n="HELPDESK/THREAD_STATE_DEFERRED"></span> <span class="item unread" data-bind="command: answerCommand, i18n: 'text'"   data-i18n="HELPDESK/THREAD_STATE_ANSWERED"></span> </span> </span> </span> </span> <span class="item wait_client" data-bind="command: waitCommand"> <span class="icon" data-bind="i18n: 'title'" data-i18n="HELPDESK/TOOL_WAITING"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/TOOL_WAITING"></span> </span> <span class="item delete" data-bind="command: deleteCommand, visible: !singleMode"> <span class="icon" data-bind="i18n: 'title'" data-i18n="HELPDESK/TOOL_DELETE"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/TOOL_DELETE"></span> </span> <span class="item new_window" data-bind="command: openNewWindowCommand, visible: !singleMode"> <span class="icon" data-bind="i18n: 'title'" data-i18n="HELPDESK/TOOL_NEW_WINDOW"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/TOOL_NEW_WINDOW"></span> </span> </span> </div> <div class="title" data-bind="contactcard: {'trigger': hasOwnerContact, 'controlWidth': contactCardWidth}, css: {'has_contactcard': hasOwnerContact}"> <span class="text"> <span class="owner control" data-bind="text: subject(), css: {'founded': hasOwnerContact}"></span> <span class="add_contact" data-i18n="MESSAGE/ACTION_ADD_TO_CONTACTS" data-bind="i18n: 'title', click: addToContacts, visible: visibleAddToContacts()"></span> </span> <span class="dropdown control contact_card" data-bind="visible: hasOwnerContact, if: hasOwnerContact"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content" data-bind="template: {name: 'Common_ContactCard', data: ownerContact}, style: {'width': contactCardWidth()+'px'}"></span> </span> </span> </div> <a class="link" href="javascript:void(0);" data-bind="i18n: 'text', click: showThreadsByOwnerCommand,    visible: !singleMode" data-i18n="HELPDESK/SHOW_ALL_THREADS"></a> </div> <div class="panel_center" data-bind="customScrollbar: {'scrollToBottomTrigger': scrollToBottomTrigger,  'scrollToTopTrigger': scrollToTopTrigger}"> <div class="thread_content scroll-inner"> <div class="details" data-bind="visible: !clientDetailsVisible() && '' !== externalContentUrl()"> <div class="details_content"> <span class="link details_show" data-i18n="HELPDESK/ACTION_SHOW_DETAILS" data-bind="i18n: 'text', click: showClientDetails"></span> </div> </div> <div class="details" data-bind="visible: clientDetailsVisible() && '' !== externalContentUrl()"> <div class="details_content"> <span class="link details_hide" data-i18n="HELPDESK/ACTION_HIDE_DETAILS" data-bind="i18n: 'text', click: hideClientDetails"></span> <!-- ko if: '' !== externalContentUrl() --> <iframe class="external_content" src="javascript:void(0);" data-bind="attr: { 'src': externalContentUrl }"></iframe> <!-- /ko --> </div> </div> <div class="notification" data-bind="visible: loadingViewPane, i18n: 'text'"  data-i18n="HELPDESK/INFO_LOADING"></div> <div class="link more" data-bind="visible: hasMorePosts() && !loadingMoreMessages() && !loadingViewPane(),   click: commandGetOlderPosts, i18n: 'text'" data-i18n="HELPDESK/THREAD_MORE_MESSAGES"></div> <div class="link more" data-bind="visible: loadingMoreMessages() && !loadingViewPane(), i18n: 'text'"  data-i18n="HELPDESK/THREAD_LOADING_MESSAGES"></div> <div class="posts" data-bind="foreach: posts(), quoteText: {actionHandler: quoteText}"> <div class="post request" data-bind="css: { 'request': bThreadOwner, 'response': !bThreadOwner, 'internal': iType === 1 }"> <div class="header"> <span class="close" data-bind="css: {'canBeDeleted': canBeDeleted}, click: function (oPost) { $root.deletePost(oPost); }"></span> <span class="date" data-bind="text: sDate"></span> <span class="icon"></span> <span class="name" data-bind="text: sFrom"></span> </div> <div class="content" data-bind="html: sText, visible: !collapsed()"></div> <div class="attachments large" data-bind="visible: attachments().length > 0 && !collapsed()"> <!-- ko template: {name: 'Common_FileViewModel', foreach: attachments} --><!-- /ko --> </div> </div> </div> </div> </div> </script><script id="Helpdesk_ViewThreadExt" type="text/html"><div class="panel_top"> <div class="toolbar"> <span class="content"> <!-- ko foreach: watchers --> <!-- ko if: $index() < 5 --> <span class="item watcher"> <span class="icon" data-bind="attr: {title: $data}"></span> <span class="text" data-bind="text: $data"></span> </span> <!-- /ko --> <!-- /ko --> <!-- ko if: watchers().length > 5 --> <span class="item control" data-bind="dropdown: {control: false}"> <span class="icon arrow"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> <!-- ko foreach: watchers --> <!-- ko if: $index() >= 5 --> <span class="item" data-bind="text: $data"></span> <!-- /ko --> <!-- /ko --> </span> </span> </span> </span> <!-- /ko --> <span class="item delete" data-bind="command: deleteCommand"> <span class="icon" data-bind="i18n: 'title'" data-i18n="HELPDESK/TOOL_DELETE"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="HELPDESK/TOOL_DELETE"></span> </span> <span class="item resolve" data-bind="command: closeCommand, i18n: 'title'"    data-i18n="HELPDESK/THREAD_BUTTON_CLOSE_ISSUE"> <span class="icon"></span> <span class="text" data-i18n="HELPDESK/THREAD_BUTTON_CLOSE_ISSUE"    data-bind="i18n: 'text'"></span> </span> </span> </div> <h2 class="title" data-bind="text: subject()"></h2> </div> <div class="panel_center" data-bind="customScrollbar: {'scrollToBottomTrigger': scrollToBottomTrigger,   'scrollToTopTrigger': scrollToTopTrigger}"> <div class="thread_content scroll-inner"> <div class="notification" data-bind="visible: loadingViewPane, i18n: 'text'"   data-i18n="HELPDESK/INFO_LOADING"></div> <div class="link more" data-bind="visible: hasMorePosts() && !loadingMoreMessages() && !loadingViewPane(),   click: commandGetOlderPosts, i18n: 'text'" data-i18n="HELPDESK/THREAD_MORE_MESSAGES"></div> <div class="link more" data-bind="visible: loadingMoreMessages() && !loadingViewPane(), i18n: 'text'"  data-i18n="HELPDESK/THREAD_LOADING_MESSAGES"></div> <div class="posts" data-bind="foreach: posts(), quoteText: {actionHandler: quoteText}"> <div class="post request" data-bind="css: { 'request': bThreadOwner, 'response': !bThreadOwner }"> <div class="header"> <span class="close" data-bind="css: {'canBeDeleted': canBeDeleted}, click: function (oPost) { $root.deletePost(oPost); }"></span> <span class="date" data-bind="text: sDate"></span> <span class="icon"></span> <span class="name" data-bind="text: sFrom"></span> </div> <div class="content" data-bind="html: sText, visible: !collapsed()"></div> <div class="attachments large" data-bind="visible: attachments().length > 0 && !collapsed()"> <!-- ko template: {name: 'Common_FileViewModel', foreach: attachments} --><!-- /ko --> </div> </div> </div> <!--<div class="buttons" data-bind="visible: posts().length > 0">--> <div class="buttons" data-bind="css: {'no_posts': posts().length == 0}"> <!--<span class="button new_post" data-bind="click: function () { iHaveMoreToSay(); },   visible: isQuickReplyHidden(), i18n: 'text'" data-i18n="HELPDESK/THREAD_BUTTON_SAY_MORE"></span>--> <span class="button new_post" data-bind="click: function () { iHaveMoreToSay(); },   visible: !isQuickReplyActive(), i18n: 'text'" data-i18n="HELPDESK/THREAD_BUTTON_SAY_MORE"></span> <span class="button resolve" data-bind="command: closeCommand, i18n: 'text'"   data-i18n="HELPDESK/THREAD_BUTTON_CLOSE_ISSUE"></span> </div> </div> </div> </script><script id="Helpdesk_ViewThreadInNewWindow" type="text/html"><div class="panel item_viewer thread_viewer"> <div class="panel_content"> <div class="middle_bar" data-bind="heightAdjust: {'elements': [domQuickReply], 'triggers': [uploadedFiles(), isQuickReplyActive(), replySendingStarted(), isQuickReplyHidden()]}"> <!-- ko template: { name: simplePreviewPane() ? 'Helpdesk_ViewThreadExt' : 'Helpdesk_ViewThread' } --><!-- /ko --> <!-- ko template: { name: 'Helpdesk_QuickReply' } --><!-- /ko --> </div> </div> </div> </script><script id="Login_ForgotViewModel" type="text/html"> <form class="form fields" action="#/" onsubmit="return false;" data-bind="visible: visibleEmailForm, command: getQuestionCommand"> <div class="fieldset"> <div class="row email" data-bind="css: {'focused': emailFocus(), 'filled': email().length > 0}"> <label for="forgot_email" class="title placeholder" data-i18n="LOGIN/LABEL_EMAIL" data-bind="i18n: 'text'"></label> <span class="value"> <input id="forgot_email" class="input" type="email" spellcheck="false" autocomplete="off" data-bind="value: email, hasfocus: emailFocus, valueUpdate: 'afterkeydown'" /> </span> </div> </div> <div class="row buttons"> <button type="submit" class="button login" data-bind="text: getQuestionButtonText, command: getQuestionCommand"></button> </div> </form> <form class="form fields" action="#/" onsubmit="return false;" data-bind="visible: visibleQuestionForm, command: validateAnswerCommand"> <div class="fieldset"> <div class="subtitle hint" data-bind="text: question"></div> <div class="row answer" data-bind="css: {'focused': answerFocus(), 'filled': answer().length > 0}"> <label for="forgot_answer" class="title placeholder" data-i18n="LOGIN/LABEL_ANSWER_QUESTION" data-bind="i18n: 'text'"></label> <span class="value"> <input id="forgot_answer" class="input" autocomplete="off" spellcheck="false" type="text" data-bind="value: answer, hasfocus: answerFocus, valueUpdate: 'afterkeydown'" /> </span> </div> </div> <div class="row buttons"> <button type="submit" class="button login" data-bind="text: validateAnswerButtonText, command: validateAnswerCommand"></button> </div> </form> <form class="form fields" action="#/" onsubmit="return false;" data-bind="visible: visiblePasswordForm, command: changePasswordCommand"> <div class="fieldset"> <div class="row password" data-bind="css: {'focused': passwordFocus(), 'filled': password().length > 0}"> <label for="forgot_password" class="title placeholder" data-i18n="LOGIN/LABEL_NEW_PASSWORD" data-bind="i18n: 'text'"></label> <span class="value"> <input id="forgot_password" class="input" autocomplete="off" spellcheck="false" type="password" data-bind="value: password, hasfocus: passwordFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <div class="row password" data-bind="css: {'focused': confirmPasswordFocus(), 'filled': confirmPassword().length > 0}"> <label for="forgot_confirm_password" class="title placeholder" data-i18n="LOGIN/LABEL_CONFIRM_PASSWORD" data-bind="i18n: 'text'"></label> <span class="value"> <input id="forgot_confirm_password" class="input" autocomplete="off" spellcheck="false" type="password" data-bind="value: confirmPassword, hasfocus: confirmPasswordFocus, valueUpdate: 'afterkeydown'" /> </span> </div> </div> <div class="row buttons"> <button type="submit" class="button login" data-bind="text: changePasswordButtonText, command: changePasswordCommand"></button> </div> </form> <div class="row links"> <div class="forgot"> <span class="link" data-bind="click: function () {gotoForgot(false);}, i18n: 'text'"   data-i18n="LOGIN/LINK_BACK"></span> </div> </div> </script><script id="Login_LoginViewModel" type="text/html"><form class="form fields" action="#" autocomplete="on" onsubmit="return false;" data-bind="command: loginCommand"> <div class="fieldset"> <div class="row email" data-bind="visible: emailVisible, css: {'focused': emailFocus(), 'filled': email().length > 0, shake: shake()}"> <label for="email" class="title placeholder"></label> <span class="value"> <input id="email" class="input check_autocomplete_input" name="email" data-i18n="LOGIN/LABEL_EMAIL" type="email" spellcheck="false" data-bind="value: email, hasfocus: emailFocus, valueUpdate: 'afterkeydown', initDom: emailDom, i18n: 'placeholder'" /> </span> </div> <!-- ko if: loginVisible --> <!-- for correctly browser save passwords --> <div class="row login" data-bind="visible: loginVisible, css: {'focused': loginFocus(), 'filled': login().length > 0, shake: shake()}"> <label for="login" class="title placeholder"></label> <span class="value"> <input id="login" class="input check_autocomplete_input" data-i18n="LOGIN/LABEL_LOGIN" type="text" spellcheck="false" data-bind="value: login, hasfocus: loginFocus, valueUpdate: 'afterkeydown', initDom: loginDom, i18n: 'placeholder'" /> </span> <span class="value suffix"> <span class="text" data-bind="text: loginAtDomainValueWithAt"></span> </span> </div> <!-- /ko --> <div class="row password" data-bind="css: {'focused': passwordFocus(), 'filled': password().length > 0, shake: shake()}"> <label for="password" class="title placeholder"></label> <span class="value"> <input id="password" class="input check_autocomplete_input"  data-i18n="LOGIN/LABEL_PASSWORD" name="password" type="password" spellcheck="false" data-bind="value: password, hasfocus: passwordFocus, valueUpdate: 'afterkeydown', initDom: passwordDom, i18n: 'placeholder'" /> </span> </div> </div> <div class="row buttons"> <button type="submit" class="button login" data-bind="text: signInButtonText, command: loginCommand"></button> </div> <div class="row signme" data-bind="visible: signMeType() !== Enums.LoginSignMeType.Unuse"> <span> <label class="custom_checkbox" data-bind="css: {'checked': signMe}"> <span class="icon"></span> <input id="signme" type="checkbox" data-bind="checked: signMe" /> </label> <label class="title" for="signme" data-i18n="LOGIN/LABEL_REMEMBER_ME" data-bind="i18n: 'text'"></label> </span> </div> <div class="row links"> <div class="forgot" data-bind="visible: allowPasswordReset"> <span class="link" data-bind="click: function () {$parent.gotoForgot(true);}, i18n: 'text'"   data-i18n="LOGIN/LINK_FORGOT"></span> </div> <div class="register" data-bind="visible: allowRegistration"> <span class="link" data-bind="click: function () {$parent.gotoRegister(true);}, i18n: 'text'"   data-i18n="LOGIN/LINK_REGISTER"></span> </div> </div> </form></script><script id="Login_RegisterViewModel" type="text/html"><form class="form fields" action="#/" onsubmit="return false;" data-bind="command: registerCommand"> <div class="fieldset"> <div class="row name" data-bind="css: {'focused': nameFocus(), 'filled': name().length > 0}"> <label for="name" class="title placeholder" data-i18n="LOGIN/LABEL_NAME" data-bind="i18n: 'text'"></label> <span class="value"> <input id="name" class="input" type="text" spellcheck="false" autocomplete="off" data-bind="value: name, hasfocus: nameFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <div class="row login" data-bind="css: {'focused': loginFocus(), 'filled': login().length > 0}"> <label for="reg_login" class="title placeholder" data-i18n="LOGIN/LABEL_LOGIN" data-bind="i18n: 'text'"></label> <span class="value"> <input id="reg_login" class="input" autocomplete="off" spellcheck="false" type="text" data-bind="value: login, hasfocus: loginFocus, valueUpdate: 'afterkeydown'" /> </span> <span class="value suffix" data-bind="visible: domains().length > 0"> <span class="text">@</span> <span class="text" data-bind="text: domain, visible: domains().length === 1"></span> <select data-bind="visible: domains().length > 1, options: domains, value: selectedDomain"></select> </span> </div> <div class="row password" data-bind="css: {'focused': passwordFocus(), 'filled': password().length > 0}"> <label for="reg_password" class="title placeholder" data-i18n="LOGIN/LABEL_NEW_PASSWORD" data-bind="i18n: 'text'"></label> <span class="value"> <input id="reg_password" class="input" autocomplete="off" spellcheck="false" type="password" data-bind="value: password, hasfocus: passwordFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <div class="row password" data-bind="css: {'focused': confirmPasswordFocus(), 'filled': confirmPassword().length > 0}"> <label for="reg_confirm_password" class="title placeholder" data-i18n="LOGIN/LABEL_CONFIRM_PASSWORD" data-bind="i18n: 'text'"></label> <span class="value"> <input id="reg_confirm_password" class="input" autocomplete="off" spellcheck="false" type="password" data-bind="value: confirmPassword, hasfocus: confirmPasswordFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <!-- ko if: allowQuestionPart --> <div class="row question" data-bind="css: {'focused': questionFocus(), 'filled': question().length > 0}"> <label class="title placeholder" data-i18n="LOGIN/LABEL_SELECT_QUESTION" data-bind="i18n: 'text'"></label> <span class="value"> <span class="custom_selector input" data-bind="customSelect: {'control': false, 'expand': 'expand', 'expandState': questionFocus, 'options': registrationQuestions, value: question, optionsText: 'text', optionsValue: 'value'}"> <span class="name" data-bind="text: question"></span> <span class="control"> <span class="icon"></span> </span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> </span> </span> </span> </span> </span> </div> <div class="row answer" data-bind="visible: visibleYourQuestion, css: {'focused': yourQuestionFocus(), 'filled': yourQuestion().length > 0}"> <label for="reg_your_question" class="title placeholder" data-i18n="LOGIN/LABEL_YOUR_QUESTION" data-bind="i18n: 'text'"></label> <span class="value"> <input id="reg_your_question" class="input" autocomplete="off" spellcheck="false" type="text" data-bind="value: yourQuestion, hasfocus: yourQuestionFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <div class="row answer" data-bind="css: {'focused': answerFocus(), 'filled': answer().length > 0}"> <label for="reg_answer" class="title placeholder" data-i18n="LOGIN/LABEL_ANSWER_QUESTION" data-bind="i18n: 'text'"></label> <span class="value"> <input id="reg_answer" class="input" autocomplete="off" spellcheck="false" type="text" data-bind="value: answer, hasfocus: answerFocus, valueUpdate: 'afterkeydown'" /> </span> </div> <!-- /ko --> </div> <div class="row buttons"> <button type="submit" class="button login" data-bind="text: registerButtonText, command: registerCommand"></button> </div> <div class="row links"> <div class="forgot"> <span class="link" data-bind="click: function () {$parent.gotoRegister(false);}, i18n: 'text'"   data-i18n="LOGIN/LINK_BACK"></span> </div> </div> </form> </script><script id="Login_WrapLoginViewModel" type="text/html"><div class="login_panel" data-bind="css: {'email': emailVisible, 'login': loginVisible, 'flipForgot': gotoForgot(), 'flipRegister': gotoRegister()}"> <div class="login_panel_content"> <div class="header" data-bind="css: {'custom_logo': loginCustomLogo()}"> <!-- ko if: loginCustomLogo() === '' --><span class="icon"></span><!-- /ko --> <!-- ko if: loginCustomLogo() !== '' --><img data-bind="attr: {'src': loginCustomLogo()}"/><!-- /ko --> <span class="text" data-i18n="LOGIN/HEADING" data-bind="i18n: 'text'"></span> </div> <div class="content login clearfix"> <!-- ko template: {name: 'Login_LoginViewModel', data: oLoginViewModel} --><!-- /ko --> <div class="clear"></div> </div> <div class="content register clearfix" data-bind="if: allowRegistration"> <!-- ko template: {name: 'Login_RegisterViewModel', data: oRegisterViewModel} --><!-- /ko --> <div class="clear"></div> </div> <div class="content forgot clearfix" data-bind="if: allowPasswordReset"> <!-- ko template: {name: 'Login_ForgotViewModel', data: oForgotViewModel} --><!-- /ko --> <div class="clear"></div> </div> <div class="description" data-bind="visible: '' !== loginDescription(), html: loginDescription"></div> <div class="clear"></div> <div class="languages demo" data-bind="visible: allowLanguages() && !viewLanguagesAsDropdown()"> <div class="title" data-i18n="LOGIN/LANGUAGE_SELECTOR_TITLE" data-bind="i18n: 'text'"></div> <div data-bind="foreach: aLanguages"> <span class="item" data-bind="css: value + ($parent.currentLanguage() === value ? ' selected' : ''), click: function () { $parent.changeLanguage(value); }"> <span class="item_content"> <span class="icon"></span> <span class="text" data-bind="text: name"></span> </span> </span> </div> </div> </div> <div class="languages" data-bind="visible: allowLanguages() && viewLanguagesAsDropdown()"> <span class="custom_selector" data-bind="dropdown: {'control': false}, css: {'right': rtl()}"> <span class="name" data-bind="css: currentLanguage"> <span class="icon"></span> <span class="text" data-bind="text: currentLanguage"></span> </span> <span class="control"> <span class="icon"></span> </span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content" data-bind="foreach: aLanguages"> <span class="item" data-bind="css: value + ($parent.currentLanguage() === value ? ' selected' : ''), click: function () { $parent.changeLanguage(value); }"> <span class="icon"></span> <span class="text" data-bind="text: name"></span> </span> </span> </span> </span> </span> </div> </div> <div class="vhelper"></div></script><script id="Mail_AppointmentViewModel" type="text/html"><div class="fields"> <div class="row fluid calendar" data-bind="visible: visibleCalendarRow"> <span class="label" data-i18n="MESSAGE/APPOINTMENT_CALENDAR" data-bind="i18n: 'text'"></span>: <span class="value"> <select class="value input" data-bind="visible: visibleCalendarDropdown, options: calendars, optionsValue: 'id', optionsText: 'name', value: selectedCalendar"></select> <span data-bind="visible: visibleCalendarName, text: chosenCalendarName"></span> <span data-bind="visible: visibleFirstCalendarName, text: firstCalendarName()"></span> </span> </div> <div class="row fluid location" data-bind="visible: location() !== ''"> <span class="label" data-i18n="MESSAGE/APPOINTMENT_LOCATION" data-bind="i18n: 'text'"></span>: <span class="value" data-bind="text: location"></span> </div> <div class="row fluid when"> <span class="label" data-i18n="MESSAGE/APPOINTMENT_WHEN" data-bind="i18n: 'text'"></span>: <span class="value" data-bind="text: when"></span> </div> <div class="row fluid description" data-bind="visible: description() !== ''"> <span class="label" data-i18n="MESSAGE/APPOINTMENT_DESCRIPTION" data-bind="i18n: 'text'"></span>: <span class="value" data-bind="html: description"></span> </div> <div class="row"> <div class="buttons" data-bind="visible: visibleRequestButtons,   css: {'touched': isAccepted() || isTentative() || isDeclined(), 'animation': animation}"> <span class="button" data-i18n="MESSAGE/APPOINTMENT_BUTTON_ACCEPT"     data-bind="i18n: 'text', css: {'state': isAccepted}, click: acceptAppointment"></span> <span class="button" data-i18n="MESSAGE/APPOINTMENT_BUTTON_TENTATIVE"     data-bind="i18n: 'text', css: {'state': isTentative}, click: tentativeAppointment"></span> <span class="button" data-i18n="MESSAGE/APPOINTMENT_BUTTON_DECLINE"     data-bind="i18n: 'text', css: {'state': isDeclined}, click: declineAppointment"></span> </div> <span data-bind="text: cancelDecision, visible: isCancelType"></span> <span data-bind="text: replyDecision, visible: isReplyType"></span> <div class="buttons" data-bind="visible: isSaveType() && !calendarIsChosen()"> <span class="button" data-i18n="MESSAGE/ICAL_BUTTON_ADD" data-bind="i18n: 'text', click: addEvent"></span> </div> <span data-bind="visible: isSaveType() && calendarIsChosen()"> <span data-i18n="MESSAGE/ICAL_INFO_SAVED" data-bind="i18n: 'text', visible: isJustSaved"></span> <span data-i18n="MESSAGE/ICAL_INFO_EXISTS" data-bind="i18n: 'text', visible: !isJustSaved()"></span> </span> </div> </div> </script><script id="Mail_ComposeViewModel" type="text/html"><div class="panels"> <div class="panel compose"> <div class="panel_content"> <div class="toolbar"> <span class="content"> <!-- ko if: !mobileApp --> <span class="item new_window" data-bind="i18n: 'title', click: openInNewWindow, visible: !singleMode()"  data-i18n="COMPOSE/LINK_OPEN_IN_NEW_WINDOW"> <span class="icon"></span> </span> <!-- /ko --> <span class="item back" data-bind="command: backToListCommand, visible: !singleMode()"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_BACK_TO_LIST"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_BACK_TO_LIST"></span> </span> <span class="item send" data-bind="command: sendCommand, css: {'disabled': !isEnableSending()}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/TOOL_SEND"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/TOOL_SEND"></span> </span> <span class="item save" data-bind="command: saveCommand, css: {'disabled': !isEnableSaving()}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/TOOL_SAVE"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/TOOL_SAVE"></span> </span> <!-- ko if: !mobileApp --> <span class="item importance" data-bind="dropdown: {'control': false}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/TOOL_IMPORTANCE"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/TOOL_IMPORTANCE"></span> <span class="icon arrow"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> <span class="item importance_low" data-bind="click: function () {selectedImportance(Enums.Importance.Low);},    i18n: 'text',    css: {'selected': selectedImportance() === Enums.Importance.Low}" data-i18n="COMPOSE/TOOL_LOW_IMPORTANCE"></span> <span class="item importance_normal" data-bind="click: function () {selectedImportance(Enums.Importance.Normal);},    i18n: 'text',    css: {'selected': selectedImportance() === Enums.Importance.Normal}" data-i18n="COMPOSE/TOOL_NORMAL_IMPORTANCE"></span> <span class="item importance_high" data-bind="click: function () {selectedImportance(Enums.Importance.High);},    i18n: 'text',    css: {'selected': selectedImportance() === Enums.Importance.High}" data-i18n="COMPOSE/TOOL_HIGH_IMPORTANCE"></span> </span> </span> </span> </span> <span class="item sensitivity" data-bind="dropdown: {'control': false}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/TOOL_SENSIVITY"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/TOOL_SENSIVITY"></span> <span class="icon arrow"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> <span class="item sensivity_nothing" data-bind="click: function () {selectedSensitivity(Enums.Sensivity.Nothing);},    i18n: 'text',    css: {'selected': selectedSensitivity() === Enums.Sensivity.Nothing}" data-i18n="COMPOSE/TOOL_NOTHING_SENSIVITY"></span> <span class="item sensivity_confidential" data-bind="click: function () {selectedSensitivity(Enums.Sensivity.Confidential);},    i18n: 'text',    css: {'selected': selectedSensitivity() === Enums.Sensivity.Confidential}" data-i18n="COMPOSE/TOOL_CONFIDENTIAL_SENSIVITY"></span> <span class="item sensivity_private" data-bind="click: function () {selectedSensitivity(Enums.Sensivity.Private);},    i18n: 'text',    css: {'selected': selectedSensitivity() === Enums.Sensivity.Private}" data-i18n="COMPOSE/TOOL_PRIVATE_SENSIVITY"></span> <span class="item sensivity_personal" data-bind="click: function () {selectedSensitivity(Enums.Sensivity.Personal);},    i18n: 'text',    css: {'selected': selectedSensitivity() === Enums.Sensivity.Personal}" data-i18n="COMPOSE/TOOL_PERSONAL_SENSIVITY"></span> </span> </span> </span> </span> <label class="item confirmation"> <span class="custom_checkbox" data-bind="css: {'checked': readingConfirmation}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/LINK_READING_CONFIRMATION"></span> <input type="checkbox" data-bind="checked: readingConfirmation" /> </span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/LINK_READING_CONFIRMATION"></span> </label> <span class="item pgp" data-bind="command: openPgpCommand, visible: visibleDoPgpButton"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/TOOL_OPENPGP"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/TOOL_OPENPGP"></span> </span> <span class="item pgp" data-bind="click: undoPgp, visible: visibleUndoPgpButton"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/TOOL_UNDOPGP"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/TOOL_UNDOPGP"></span> </span> <!-- /ko --> <!--<span class="item"> <label class="custom_checkbox" data-bind="css: {'checked': saveMailInSentItems}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/LINK_SAVE_IN_SENT_ITEMS"></span> <input type="checkbox" id="chSaveMailInSentItems" data-bind="checked: saveMailInSentItems" /> </label> <label for="chSaveMailInSentItems" data-bind="i18n: 'text'" data-i18n="COMPOSE/LINK_SAVE_IN_SENT_ITEMS"></label> </span>--> </span> </div> <div class="panels" data-bind="splitter: {name: 'compose_attachments', sizeRight: 250, minLeft: 590, minRight: 250, resizeToWidth: true}"> <div class="panel left_panel"> <div class="resize_handler"></div> <div class="panel_content"> <div class="middle_bar" data-bind="heightAdjust: {'location': 'bottom', 'delay': '0', 'elements': [messageFields, bottomPanel], 'triggers': [visibleBcc(), visibleCc(), toAddr(), toAddr(), bccAddr(), notInlineAttachments(), senderList()]}"> <div class="panel_top" data-bind="initDom: messageFields"> <div class="notice" data-bind="visible: isDemo, i18n: 'text'" data-i18n="DEMO/WARNING_SEND_EMAIL_TO_DEMO_ONLY"></div> <table class="fields"> <tr class="first_row from" data-bind="visible: visibleFrom"> <td class="label"> <span data-bind="i18n: 'text'" data-i18n="COMPOSE/HEADER_FROM"></span>: </td> <td class="value"> <select class="input" tabindex="1" data-bind="foreach: senderList, value: selectedSender"> <option data-bind="text: fullEmail, value: id"></option> </select> </td> </tr> <tr class="to"> <td class="label"> <span data-bind="i18n: 'text'" data-i18n="COMPOSE/HEADER_TO"></span>: </td> <td class="value"> <table class="fields"> <tr> <td class="value" style="width: 100%;"> <div class="input inputosaurus"> <div class="disable_mask" data-bind="visible: pgpEncrypted"></div> <div data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <input type="text" spellcheck="false" tabindex="2" data-bind="initDom: toAddrDom" /> </div> </div> </div> </td> <td class="value"> <!-- ko if: !mobileApp --> <span class="link show_cc" data-bind="i18n: 'text', visible: !visibleCc() && !pgpEncrypted(), click: changeCcVisibility" data-i18n="COMPOSE/LINK_SHOW_CC"></span> <span class="link show_bcc" data-bind="i18n: 'text', visible: !visibleBcc() && !pgpEncrypted(), click: changeBccVisibility" data-i18n="COMPOSE/LINK_SHOW_BCC"></span> <!-- /ko --> </td> </tr> </table> </td> </tr> <!-- ko if: mobileApp --> <tr class="cc" data-bind="visible: !visibleCc() || !visibleBcc()"> <td class="label"></td> <td class="value"> <span class="link show_cc" data-bind="i18n: 'text', visible: !visibleCc(), click: changeCcVisibility" data-i18n="COMPOSE/LINK_SHOW_CC"></span> <span class="link show_bcc" data-bind="i18n: 'text', visible: !visibleBcc(), click: changeBccVisibility" data-i18n="COMPOSE/LINK_SHOW_BCC"></span> </td> </tr> <!-- /ko --> <tr class="cc" data-bind="visible: visibleCc"> <td class="label"> <span data-bind="i18n: 'text'" data-i18n="COMPOSE/HEADER_CC"></span>: </td> <td class="value"> <div class="input inputosaurus"> <div class="disable_mask" data-bind="visible: pgpEncrypted"></div> <div data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <input type="text" spellcheck="false" tabindex="3" data-bind="initDom: ccAddrDom" /> </div> </div> </div> <span class="link hide_cc" data-bind="i18n: 'text', visible: visibleCc, click: changeCcVisibility" data-i18n="COMPOSE/LINK_HIDE_CC"></span> </td> </tr> <tr class="bcc" data-bind="visible: visibleBcc"> <td class="label"> <span data-bind="i18n: 'text'" data-i18n="COMPOSE/HEADER_BCC"></span>: </td> <td class="value"> <div class="input inputosaurus"> <div class="disable_mask" data-bind="visible: pgpEncrypted"></div> <div data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <input type="text" spellcheck="false" tabindex="4" data-bind="initDom: bccAddrDom" /> </div> </div> </div> <span class="link hide_bcc" data-bind="i18n: 'text', visible: visibleBcc, click: changeBccVisibility" data-i18n="COMPOSE/LINK_HIDE_BCC"></span> </td> </tr> <tr class="last_row subject"> <td class="label"> <span data-bind="i18n: 'text'" data-i18n="COMPOSE/HEADER_SUBJECT"></span>: </td> <td class="value"> <input type="text" class="input" maxlength="255" tabindex="5" data-bind="value: subject, hasfocus: subjectFocused, valueUpdate: 'afterkeydown'"/> </td> </tr> <tr class="counter" data-bind="visible: visibleCounter"> <td class="label"> <span data-bind="i18n: 'text'" data-i18n="COMPOSE/HEADER_COUNTER"></span>: </td> <td class="value"> <input type="text" class="input" size="3" value="600" disabled="" tabindex="6"    data-bind="value: counter"/> </td> </tr> </table> <!-- ko if: mobileApp --> <div class="attachments upload large"> <span class="uploader_button" data-bind="initDom: composeUploaderButton"> <span data-bind="i18n: 'text'" data-i18n="COMPOSE/ATTACH_CLICK"></span> </span> <div class="items_list" data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <div class="attachments_container" data-bind="template: {name: 'Common_FileViewModel', foreach: notInlineAttachments}"></div> </div> </div> </div> <!-- /ko --> </div> <div class="panel_center"> <!-- ko template: { name: 'Common_HtmlEditorViewModel', data: oHtmlEditor} --><!-- /ko --> </div> <div class="panel_bottom" data-bind="initDom: bottomPanel"> <!-- ko if: !mobileApp --> <!--<span class="button send special" data-bind="command: sendCommand, css: {'disabled': !isEnableSending()}">--> <!--<span data-bind="i18n: 'text'" data-i18n="COMPOSE/TOOL_SEND"></span>--> <!--</span>--> <span class="text hint"> <span class="hotkey_value">Ctrl+Enter</span> <span class="hotkey_action" data-i18n="COMPOSE/HOTKEY_SEND" data-bind="i18n: 'text'"></span> <span class="hotkey_value">Ctrl+S</span> <span class="hotkey_action" data-i18n="COMPOSE/HOTKEY_SAVE" data-bind="i18n: 'text'"></span> <span class="hotkey_value">Ctrl+Z</span> <span class="hotkey_action" data-i18n="COMPOSE/HOTKEY_UNDO" data-bind="i18n: 'text'"></span> <span class="hotkey_value">Ctrl+Y</span> <span class="hotkey_action" data-i18n="COMPOSE/HOTKEY_REDO" data-bind="i18n: 'text'"></span> <span class="hotkey_value">Ctrl+K</span> <span class="hotkey_action" data-i18n="COMPOSE/HOTKEY_LINK" data-bind="i18n: 'text'"></span> <span class="hotkey_value">Ctrl+B</span> <span class="hotkey_action" data-i18n="COMPOSE/HOTKEY_BOLD" data-bind="i18n: 'text'"></span> <span class="hotkey_value">Ctrl+I</span> <span class="hotkey_action" data-i18n="COMPOSE/HOTKEY_ITALIC" data-bind="i18n: 'text'"></span> <span class="hotkey_value">Ctrl+U</span> <span class="hotkey_action" data-i18n="COMPOSE/HOTKEY_UNDERLINE" data-bind="i18n: 'text'"></span> </span> <!-- /ko --> </div> </div> </div> </div> <!-- ko if: !mobileApp --> <div class="panel right_panel attachments upload large"> <div class="panel_content"> <div class="middle_bar"> <div class="panel_top"> <span class="uploader_button desktop" data-bind="initDom: composeUploaderButton, i18n: 'title'" data-i18n="COMPOSE/ATTACH_CLICK"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/ATTACH_CLICK"></span> </span> <span class="uploader_button files" data-bind="visible: allowFiles, click: onShowFilesPopupClick"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/ATTACH_FROM_FILES_CLICK"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/ATTACH_FROM_FILES_CLICK"></span> </span> <span class="uploader_button google_drive" data-bind="visible: allowGoogle, click: onShowGoogleDriveClick"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/ATTACH_FROM_GOOGLE_DRIVE_CLICK"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/ATTACH_FROM_GOOGLE_DRIVE_CLICK"></span> </span> <span class="uploader_button dropbox" data-bind="visible: allowDropbox, click: onShowDropBoxClick"> <span class="icon" data-bind="i18n: 'title'" data-i18n="COMPOSE/ATTACH_FROM_DROPBOX_CLICK"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="COMPOSE/ATTACH_FROM_DROPBOX_CLICK"></span> </span> </div> <div class="panel_center" data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <!--<div class="items_list" data-bind="customScrollbar: {x: false}, visible: notInlineAttachments().length > 0">--> <div class="items_list"> <span class="list_notification" data-bind="i18n: 'text', visible: allowDragNDrop && notInlineAttachments().length === 0" data-i18n="COMPOSE/ATTACH_HINT"></span> <div class="attachments_container" data-bind="template: {name: 'Common_FileViewModel', foreach: notInlineAttachments}"></div> </div> </div> </div> </div> <div class="uploader_mask" data-bind="initDom: composeUploaderDropPlace,  css: { 'over': uploaderDragOver, 'active': uploaderBodyDragOver }"> <div class="inner"></div> </div> </div> </div> <!-- /ko --> </div> </div> </div> </div> </script><script id="Mail_FolderListViewModel" type="text/html"><div class="panel_center" data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <div class="items_list collapsible"> <!-- ko if: mobileApp --> <div class="accounts" data-bind="visible: accounts().length > 1, foreach: accounts"> <div class="item" data-bind="css: {'selected': isCurrent()}, click: changeAccount"> <label class="custom_radio" data-bind="css: {'checked': isCurrent()}"> <span class="icon"></span> <input type="radio" id="account_text" data-bind="checked: isCurrent()" /> </label> <label for="account_text" class="text" data-bind="text: email"></label> </div> </div> <!-- /ko --> <div class="folders"> <!-- ko template: {name: 'Mail_FolderViewModel', foreach: folderList().collection} --><!-- /ko --> <!-- ko if: mobileApp --> <span class="volumer" data-bind="visible: -1 < quotaProc(), click: $parent.onVolumerClick"> <span class="volumer_conteiner" title="" data-bind="attr: {'title': quotaDesc}"> <span class="used" data-bind="style: {'width': '' + (-1 < quotaProc() ? quotaProc() : 0) + '%' }"></span> </span> </span> <!-- /ko --> </div> </div> </div> </div> <!-- ko if: !mobileApp --> <div class="panel_bottom"> <div class="manage_folders"> <a href="javascript: void(0)" data-i18n="MAILBOX/LINK_MANAGE_FOLDERS" data-bind="i18n: 'text', attr: {href: manageFoldersHash}"></a> </div> <span class="volumer" data-bind="visible: -1 < quotaProc()"> <span class="volumer_conteiner" title="" data-bind="attr: {'title': quotaDesc}"> <span class="used" data-bind="style: {'width': '' + (-1 < quotaProc() ? quotaProc() : 0) + '%' }"></span> </span> </span> </div> <!-- /ko --></script><script id="Mail_FolderViewModel" type="text/html"><div class="item" data-bind="visible: visible(),  css: { 'selected': selected, 'canSelect': selectable, 'existen': existen, 'subscribed': subscribed, 'system': isSystem, 'user': !isSystem(), 'virtualEmpty': virtualEmpty, 'accordion': subfolders().length !== 0, 'expanded': expanded(), 'collapsed': !expanded()}"> <a class="title" href="javascript: void(0);" data-bind=" css: {'recivedAnim': recivedAnim()}, attr: {href: routingHash}, visible: canBeSelected, droppable: {valueFunc: virtual() ? false : function (oEvent, oUi) { $root.messagesDrop($data, oEvent, oUi); }, switchObserv: selected} "> <span class="count" data-bind="visible: messageCountToShow() > 0, text: messageCountToShow(),   css: {'unseen': showUnseenMessages}, click: executeUnseenFilter, title: unseenMessagesTitle"></span> <span class="name"> <span class="icon" data-bind="css: 'type' + type()"></span> <span class="collapse_handler" data-bind="visible: isCollapseHandler, css: {'expanded': expanded(), 'collapsed': !expanded()}, click: onAccordion"></span> <span class="text animGoal" data-bind="text: displayName"></span> </span> </a> <span class="title" data-bind="visible: !canBeSelected()"> <span class="count" data-bind="visible: messageCountToShow() > 0, text: messageCountToShow(),   css: {'unseen': showUnseenMessages}"></span> <span class="name"> <span class="icon" data-bind="css: 'type' + type()"></span> <span class="collapse_handler" data-bind="visible: isCollapseHandler, css: {'expanded': expanded(), 'collapsed': !expanded()}, click: onAccordion"></span> <span class="text animGoal" data-bind="text: displayName"></span> </span> </span> <!-- ko if: !isNamespace() --> <div class="children" data-bind="template: { name: 'Mail_FolderViewModel', foreach: subfolders }"></div> <!-- /ko --> </div> <!-- ko if: isNamespace --> <!-- ko template: {name: 'Mail_FolderViewModel', foreach: subfolders} --><!-- /ko --> <!-- /ko --> </script><script id="Mail_MessageListItemViewModel" type="text/html"><div class="item dragHandle" data-bind="css: { 'unseen': !seen(), 'selected': selected(), 'checked': checked(), 'forwarded': forwarded(), 'answered': answered(), 'deleted': deleted() || threadHideAnimation(), 'nosubject': emptySubject(), 'threaded':  threadPart(), 'show': threadShowAnimation() }"> <div class="item_content"> <span class="controls"> <!-- <label class="custom_checkbox" data-bind="css: {'checked': checked()}"> <span class="icon"></span> <input type="checkbox" data-bind="checked: checked" /> </label>--> <span class="custom_checkbox" data-bind="click: function () { checked(!checked()); }, css: {'checked': checked()}"> <span class="icon"></span> </span> <span class="separator"></span> <span class="flag" data-bind="css: {'flagged': flagged(), 'partial': partialFlagged()}"></span> </span> <span class="data"> <span class="size" data-bind="text: friendlySize()"></span> <span class="date" data-bind="text: date"></span> <span class="attachments has_attachments" data-bind="visible: hasAttachments(), css: {'has_ical_attachment': showCalendarIcon(), 'has_vcard_attachment': hasVcardAttachment()}"></span> <span class="marker"></span> <span class="from fadeout" data-bind="text: fromOrToText()"></span> <span class="separator"></span> <span class="thread" data-bind="text: threadCount(), visible: threadCountVisible(), click: openThread, css: {'unreed': threadUnreedCount() > 0}"></span> <span class="thread loading" data-i18n="MAILBOX/THREAD_LOADING" data-bind="i18n: 'text', visible: threadLoadingVisible()"></span> <span class="subject fadeout"> <span class="importance" data-bind="visible: importance() === Enums.Importance.High"></span> <span data-bind="text: subjectForDisplay()"></span> </span> </span> <div class="separator"></div> </div> </div> <!-- ko if: threadNextLoadingVisible() --> <div class="item threaded thread_more_messages" data-bind="css:{'show': threadShowAnimation(), 'deleted': threadHideAnimation()}"> <div class="item_content"> <span class="link" data-i18n="MAILBOX/LINK_LOAD_NEXT_THREAD_MESSAGES" data-bind="i18n: 'text', click: loadNextMessages, visible: threadNextLoadingLinkVisible()"></span> <span style="color: #999999; font-size: 15px;" data-i18n="MAILBOX/THREAD_LOADING" data-bind="i18n: 'text', visible: !threadNextLoadingLinkVisible()"></span> </div> </div> <!-- /ko --></script><script id="Mail_MessageListViewModel" type="text/html"><div class="middle_bar" data-bind="css: {'advanced_search': bAdvancedSearch}"> <div class="panel_top" data-bind="initDom: panelTopDom"> <label class="custom_checkbox" data-bind="css: {'checked': checkAll, 'incomplete': checkAllIncomplite}"> <span class="icon"></span> <input type="checkbox" data-bind="checked: checkAll" /> </label> <!-- ko if: $parent.mobileApp --> <span class="search_block"> <span class="input" data-bind="css: {'focus': isFocused}"> <span class="icon search" data-i18n="MAILBOX/BUTTON_SEARCH" data-bind="i18n: 'text'"></span> <input class="field" spellcheck="false"  type="text" data-bind="value: searchInput, onEnter: onSearchClick" /> </span> </span> <!-- /ko --> <!-- ko if: !$parent.mobileApp --> <span class="search_block"> <span class="input" data-bind="css: {'focus': isFocused, 'expand': bAdvancedSearch}"> <span class="icon search"></span> <input class="field hide" spellcheck="false" type="text" data-bind="value: searchInput" /> <div class="field" contenteditable="true" spellcheck="false" data-bind="highlighter: {valueObserver: searchInput, highlighterValueObserver: searchSpan, highlightTrigger: highlightTrigger}, onEnter: onSearchClick, hasfocus: isFocused" ></div> <div class="fields extended" data-bind="initDom: extendedDom"> <span class="search_fieldset"> <span class="section"> <span class="row text" data-bind="css: {'focused': searchFromFocus(), 'filled': searchInputFrom().length > 0}"> <label for="search_from" class="label placeholder" data-i18n="MAILBOX/SEARCH_FIELD_FROM" data-bind="i18n: 'text'"></label> <input id="search_from" class="value input" spellcheck="false"  type="text" data-bind="hasfocus: searchFromFocus, value: searchInputFrom, valueUpdate: 'afterkeydown', onEnter: onSearchClick" /> </span> <span class="row text" data-bind="css: {'focused': searchSubjectFocus(), 'filled': searchInputSubject().length > 0}"> <label for="search_subject" class="label placeholder" data-i18n="MAILBOX/SEARCH_FIELD_SUBJECT" data-bind="i18n: 'text'"></label> <input id="search_subject" class="value input" spellcheck="false"  type="text" data-bind="hasfocus: searchSubjectFocus, value: searchInputSubject, valueUpdate: 'afterkeydown', onEnter: onSearchClick" /> </span> <span class="row text"> <span class="row date since" data-bind="css: {'focused': searchDateStartFocus(), 'filled': searchDateStart().length > 0}"> <label for="search_date_start" class="label placeholder" data-i18n="MAILBOX/SEARCH_FIELD_SINCE" data-bind="i18n: 'text'"></label> <input id="search_date_start" class="date input" spellcheck="false" type="text" data-bind="initDom: searchDateStartDom, value: searchDateStart, hasfocus: searchDateStartFocus, valueUpdate: 'afterkeydown', onEnter: onSearchClick" /> </span> </span> <!--<span class="row attachments" data-bind="css: {'focused': searchAttachmentsFocus(), 'filled': searchAttachments().length > 0}"> <label class="custom_checkbox" data-bind="css: {'checked': searchAttachmentsCheckbox}"> <span class="icon"></span> <input id="attachments" type="checkbox" data-bind="checked: searchAttachmentsCheckbox"> </label> <span class="attachment_name"> <label for="search_attachments" class="label placeholder" data-bind="text: attachmentsPlaceholder"></label> <input id="search_attachments" disabled class="value input" type="text" data-bind="hasfocus: searchAttachmentsFocus, value: searchAttachments, valueUpdate: 'afterkeydown', onEnter: onSearchClick" /> </span> </span>--> </span> <span class="section"> <span class="row text" data-bind="css: {'focused': searchToFocus(), 'filled': searchInputTo().length > 0}"> <label for="search_to" class="label placeholder" data-i18n="MAILBOX/SEARCH_FIELD_TO" data-bind="i18n: 'text'"></label> <input id="search_to" class="value input" spellcheck="false"  type="text" data-bind="hasfocus: searchToFocus, value: searchInputTo, valueUpdate: 'afterkeydown', onEnter: onSearchClick" /> </span> <span class="row text" data-bind="css: {'focused': searchTextFocus(), 'filled': searchInputText().length > 0}"> <label for="search_text" class="label placeholder" data-i18n="MAILBOX/SEARCH_FIELD_TEXT" data-bind="i18n: 'text'"></label> <input id="search_text" class="value input" spellcheck="false"  type="text" data-bind="hasfocus: searchTextFocus, value: searchInputText, valueUpdate: 'afterkeydown', onEnter: onSearchClick" /> </span> <span class="row text"> <span class="row date till" data-bind="css: {'focused': searchDateEndFocus(), 'filled': searchDateEnd().length > 0}"> <label for="search_date_end" class="label placeholder" data-i18n="MAILBOX/SEARCH_FIELD_TILL" data-bind="i18n: 'text'"></label> <input id="search_date_end" class="date input" spellcheck="false"  type="text" data-bind="initDom: searchDateEndDom, value: searchDateEnd, hasfocus: searchDateEndFocus, valueUpdate: 'afterkeydown', onEnter: onSearchClick" /> </span> </span> </span> <span class="section attachments"> <span class="row attachments" data-bind="css: {'focused': searchAttachmentsFocus(), 'filled': searchAttachments().length > 0}"> <label class="custom_checkbox" data-bind="css: {'checked': searchAttachmentsCheckbox}"> <span class="icon"></span> <input id="attachments" type="checkbox" data-bind="checked: searchAttachmentsCheckbox"> </label> <span class="attachment_name"> <!--<label for="search_attachments" class="label placeholder" data-bind="text: attachmentsPlaceholder"></label>--> <!--<input id="search_attachments" class="value input" type="text" data-bind="hasfocus: searchAttachmentsFocus, value: searchAttachments, valueUpdate: 'afterkeydown', onEnter: onSearchClick" />--> <label for="search_attachments" style="cursor: pointer" class="label placeholder" data-bind="text: attachmentsPlaceholder, click: function() {searchAttachmentsCheckbox(!searchAttachmentsCheckbox())}"></label> <input id="search_attachments" disabled class="value input" spellcheck="false" type="text" data-bind="hasfocus: searchAttachmentsFocus, value: searchAttachments, valueUpdate: 'afterkeydown', onEnter: onSearchClick" /> </span> </span> </span> <div class="section buttons"> <span class="button" data-i18n="MAILBOX/BUTTON_SEARCH" data-bind="i18n: 'text', click: onSearchClick"></span> </div> </span> </div> </span> <span class="control"> <span class="icon" data-bind="click: onAdvancedSearchClick, css: {'expand': bAdvancedSearch()}"></span> </span> </span> <!-- /ko --> </div> <div class="panel_center unselectable" data-bind="customScrollbar: {'reset': listChangedThrottle(), x: false}"> <div class="scroll-inner message_list_scroll"> <div class="items_list message_list" data-bind="initDom: messagesContainer"> <span class="list_notification" data-bind="visible: visibleInfoSearchLoading"> <span class="link" data-i18n="MAILBOX/LINK_STOP_SEARCH" data-bind="i18n: 'text', click: onStopSearchClick"></span> <span class="description" data-bind="html: searchText"></span> </span> <span class="list_notification search_results" data-bind="visible: visibleInfoSearchList"> <span class="link" data-i18n="MAILBOX/LINK_CLEAR_SEARCH" data-bind="i18n: 'text', click: onClearSearchClick"></span> <span class="description" data-bind="html: searchText"></span> </span> <span class="list_notification" data-bind="visible: visibleInfoSearchEmpty"> <span class="link" data-i18n="MAILBOX/LINK_CLEAR_SEARCH" data-bind="i18n: 'text', click: onClearSearchClick"></span> <span class="description" data-i18n="MAILBOX/INFO_SEARCH_EMPTY" data-bind="i18n: 'text'"></span> </span> <span class="list_notification" data-bind="visible: visibleInfoSearchError"> <span class="link" data-i18n="MAILBOX/LINK_RETRY" data-bind="i18n: 'text', click: onRetryClick"></span> <span class="link" data-i18n="MAILBOX/LINK_SWITCH_TO_MESSAGE_LIST" data-bind="i18n: 'text', click: onClearSearchClick"></span> <span class="description" data-i18n="MAILBOX/INFO_SEARCH_ERROR" data-bind="i18n: 'text'"></span> </span> <span class="list_notification search_results" data-bind="visible: visibleInfoUnseenFilterList"> <span class="link" data-i18n="MAILBOX/LINK_CLEAR_FILTER" data-bind="i18n: 'text', click: onClearFilterClick"></span> <span class="description" data-bind="html: unseenFilterText"></span> </span> <span class="list_notification" data-bind="visible: visibleInfoUnseenFilterEmpty"> <span class="link" data-i18n="MAILBOX/LINK_CLEAR_FILTER" data-bind="i18n: 'text', click: onClearFilterClick"></span> <span class="description" data-bind="text: unseenFilterEmptyText"></span> </span> <span class="list_notification" data-bind="visible: visibleInfoMessageListEmpty"> <span class="description" data-i18n="MAILBOX/INFO_MESSAGE_LIST_EMPTY" data-bind="i18n: 'text'"></span> </span> <span class="list_notification" data-bind="visible: visibleInfoStarredFolderEmpty"> <span class="description" data-i18n="MAILBOX/INFO_STARRED_FOLDER_EMPTY" data-bind="i18n: 'text'"></span> </span> <span class="list_notification" data-bind="visible: visibleInfoMessageListError"> <span class="link" data-i18n="MAILBOX/LINK_RETRY" data-bind="i18n: 'text', click: onRetryClick"></span> <span class="description" data-i18n="MAILBOX/INFO_MESSAGE_LIST_ERROR" data-bind="i18n: 'text'"></span> </span> <div class="items_sub_list message_sub_list" data-bind="foreach: collection,   draggablePlace: function (oMessage) {return $root.dragAndDropHelper(oMessage);},  css: {'not_use_threads': !useThreads(), 'use_threads': useThreads}"> <!-- ko template: {name: 'Mail_MessageListItemViewModel'} --><!-- /ko --> </div> <span class="list_notification" data-bind="visible: visibleInfoLoading()"> <span class="description" data-i18n="MAILBOX/INFO_LOADING_MESSAGE_LIST" data-bind="i18n: 'text'"></span> </span> <span class="list_notification" data-bind="visible: visibleInfoSearchLoading()"> <span class="description" data-i18n="MAILBOX/INFO_SEARCHING_FOR_MESSAGES" data-bind="i18n: 'text'"></span> </span> </div> </div> </div> <div class="panel_bottom unselectable" data-bind="template: {name: 'Common_PageSwitcherViewModel', data: oPageSwitcher}"></div> </div></script><script id="Mail_MoveToFolderItem" type="text/html"><span class="item" data-bind="visible: visible() && !virtual(), css: {'system': isSystem, 'user': !isSystem()}"> <span class="folder" data-bind="attr: {'data-folder': fullName},    css: {'disabled': selected, 'unselectable': !canBeSelected()}"> <span class="title" data-bind="text: displayName"></span> </span> <!-- ko if: !isNamespace() --> <span class="children" data-bind="template: { name: 'Mail_MoveToFolderItem', foreach: subfolders }"></span> <!-- /ko --> </span> <!-- ko if: isNamespace --> <!-- ko template: {name: 'Mail_MoveToFolderItem', foreach: subfolders} --><!-- /ko --> <!-- /ko --> </script><script id="Mail_PrintMessageViewModel" type="text/html"><div style="display: none;" data-bind="initDom: domMessageForPrint"> <style> blockquote {/*while editing see also style.css*/ border-left: solid 2px #000000; margin: 4px 2px; padding-left: 6px; } .wm_print { border-collapse: collapse; width: 96%; } .wm_print_title, .wm_print_value, .wm_print_body { padding: 4px; border: solid #666666; font: normal 11px Tahoma, Arial, Helvetica, sans-serif; text-align: left; } .wm_print_title { border-width: 0px 1px 1px 0px !important; } .wm_print_value { border-width: 0px 0px 1px 1px !important; } .wm_print_body { border-width: 1px 0px 0px 0px !important; } span.comma:first-child { display: none; } </style> <div align="center" style="padding-top: 10px"> <table class="wm_print"> <tbody> <tr> <td width="60px" class="wm_print_title"> <span data-i18n="MESSAGE/HEADER_FROM" data-bind="i18n: 'text'"></span>:  </td> <td class="wm_print_value" data-bind="text: fullFrom"></td> </tr> <tr> <td width="60px" class="wm_print_title"> <span data-i18n="MESSAGE/HEADER_TO" data-bind="i18n: 'text'"></span>:  </td> <td class="wm_print_value" data-bind="text: to"></td> </tr> <tr data-bind="visible: cc() !== ''"> <td width="60px" class="wm_print_title"> <span data-i18n="MESSAGE/HEADER_CC" data-bind="i18n: 'text'"></span>:  </td> <td class="wm_print_value" data-bind="text: cc"></td> </tr> <tr data-bind="visible: bcc() !== ''"> <td width="60px" class="wm_print_title"> <span data-i18n="MESSAGE/HEADER_BCC" data-bind="i18n: 'text'"></span>:  </td> <td class="wm_print_value" data-bind="text: bcc"></td> </tr> <tr> <td width="60px" class="wm_print_title"> <span data-i18n="MESSAGE/HEADER_DATE" data-bind="i18n: 'text'"></span>:  </td> <td class="wm_print_value" data-bind="text: fullDate"></td> </tr> <tr> <td width="60px" class="wm_print_title"> <span data-i18n="MESSAGE/HEADER_SUBJECT" data-bind="i18n: 'text'"></span>:  </td> <td class="wm_print_value" data-bind="text: subject"></td> </tr> <tr data-bind="visible: attachments().length > 0"> <td width="60px" class="wm_print_title"> <span data-i18n="MESSAGE/HEADER_ATTACHMENTS" data-bind="i18n: 'text'"></span>:  </td> <!-- ko if: usesAttachmentString --> <td class="wm_print_value"> <span data-bind="text: attachmentsInString"></span> </td> <!-- /ko --> <!-- ko if: !usesAttachmentString --> <td class="wm_print_value"> <!-- ko foreach: attachments --> <span class="comma">, </span> <a href="javascript: void(0);" data-bind="text: fileName,     attr: {'data-hash': 'download-' + hash()}"></a> <span data-bind="visible: visibleViewLink"> (<a href="javascript: void(0);" data-bind="i18n: 'text',  attr: {'data-hash': 'view-' + hash()}"  data-i18n="MESSAGE/ATTACHMENT_VIEW"></a>) </span> <!-- ko if: isMessageType() && messagePart() --> <!-- ko template: {name: 'Mail_PrintMessageViewModel', data: messagePart} --><!-- /ko --> <!-- /ko --> <!-- /ko --> </td> <!-- /ko --> </tr> <tr> <td class="wm_print_body" colspan="2"> <div style="text-align: left; padding-top: 10px;" data-bind="html: textBodyForNewWindow"></div> </td> </tr> </tbody> </table> </div> </div> </script><script id="Mail_VcardAttachmentViewModel" type="text/html"><div class="fields"> <div class="row"> <span class="label" data-i18n="MESSAGE/VCARD_NAME" data-bind="i18n: 'text'"></span>: <span data-bind="text: name"></span> </div> <div class="row"> <span class="label" data-i18n="MESSAGE/VCARD_EMAIL" data-bind="i18n: 'text'"></span>: <span data-bind="text: email"></span> </div> <div class="row"> <div class="buttons" data-bind="visible: !isExists()"> <span class="button" data-i18n="MESSAGE/VCARD_BUTTON_ADD" data-bind="i18n: 'text', click: addContact"></span> </div> <span data-bind="visible: isExists"> <span data-i18n="MESSAGE/VCARD_INFO_ADDED" data-bind="i18n: 'text', visible: isJustSaved"></span> <span data-i18n="MESSAGE/VCARD_INFO_EXISTS" data-bind="i18n: 'text', visible: !isJustSaved()"></span> </span> </div> </div> </script><script id="Mail_LayoutSidePane_MailViewModel" type="text/html"><div class="panels" data-bind="splitter: {name: 'folders', sizeLeft: 200, minLeft: 20, minRight: 40, resizeToWidth: true},  css: {'folder_active': selectedPanel() === Enums.MobilePanel.Groups,  'list_active': selectedPanel() === Enums.MobilePanel.Items, 'viewer_active': selectedPanel() === Enums.MobilePanel.View}"> <div class="panel folders"> <div class="resize_handler"></div> <div class="panel_content"> <!-- ko if: !mobileApp --> <div class="toolbar"> <span class="content"> <a href="javascript: void(0)" class="item compose" data-bind="attr: {href: composeLink}, visible: bVisibleComposeMessage"> <span data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_NEW_MESSAGE"></span> </a> </span> </div> <!-- /ko --> <div class="middle_bar" data-bind="template: {name: 'Mail_FolderListViewModel', data: oFolderList},  css: {'quota_visible': -1 < oFolderList.quotaProc()}, click: gotoMessageList"></div> </div> </div> <div class="panel_helper" data-bind="splitter: {name: 'messages', sizeLeft: 400, minLeft: 396, minRight: 10}"> <div class="panel messages"> <div class="resize_handler"></div> <div class="panel_content"> <!-- ko template: { name: 'Mail_LayoutSidePane_Toolbar'} --><!-- /ko --> <!-- ko template: { name: 'Mail_MessageListViewModel', data: oMessageList} --><!-- /ko --> </div> </div> <div class="panel item_viewer message_viewer"> <div class="panel_content"> <div class="middle_bar" data-bind="template: {name: 'Mail_LayoutSidePane_MessagePaneViewModel', data: oMessagePane}"></div> </div> </div> </div> </div></script><script id="Mail_LayoutSidePane_MessagePaneViewModel" type="text/html"><!-- ko if: mobileApp --> <div class="toolbar"> <span class="content"> <span class="item close" data-bind="click: function () {$parent.gotoMessageList(); return true;}"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_BACK_TO_LIST"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_BACK_TO_LIST"></span> </span> <span class="item reply" data-bind="command: replyCommand, visible: isVisibleReplyTool"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_REPLY"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_REPLY"></span> </span> <span class="item replyall" data-bind="command: replyAllCommand, visible: isVisibleReplyTool"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_REPLY_TO_ALL"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_REPLY_TO_ALL"></span> </span> <span class="item forward" data-bind="command: forwardCommand, visible: isVisibleForwardTool"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_FORWARD"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_FORWARD"></span> </span> <span class="item delete" data-bind="command: deleteCommand"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_DELETE"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_DELETE"></span> </span> </span> </div> <!-- /ko --> <div class="panel_center" data-bind="heightAdjust: {'elements': [domMessageHeader, domQuickReply], 'triggers': [detailsVisible(), currentMessage(), replyPaneVisible(), replyTextFocusThrottled()]}"> <div class="message_header" data-bind="initDom: domMessageHeader, visible: isCurrentMessage"> <span class="resizer_top" data-bind="event: { 'dblclick': resizeDblClick}, visible: fakeHeader"></span> <span class="resizer_bottom" data-bind="event: { 'dblclick': resizeDblClick}"></span> <div class="notice" data-bind="visible: visiblePicturesControl"> <span class="item"> <span data-i18n="MESSAGE/INFO_MESSAGE_BLOCKED" data-bind="i18n: 'text'"></span> <span class="link" data-i18n="MESSAGE/ACTION_SHOW_PICTURES"     data-bind="i18n: 'text', click: showPictures, visible: visibleShowPicturesLink"></span> </span> <span class="item"> <span class="link" data-i18n="MESSAGE/ACTION_ALWAYS_SHOW_PICTURE_THIS_SENDER"     data-bind="i18n: 'text', click: alwaysShowPictures"></span> </span> </div> <div class="notice" data-bind="visible: visibleConfirmationControl"> <span data-i18n="MESSAGE/INFO_SENDER_ASKED_NOTIFY" data-bind="i18n: 'text'"></span> <span class="link" data-i18n="MESSAGE/ACTION_NOTIFY_SENDER" data-bind="i18n: 'text', click: notifySender"></span> </div> <div class="notice" data-bind="visible: visibleDecryptControl"> <span data-i18n="OPENPGP/INFO_ENCRYPTED_MESSAGE" data-bind="i18n: 'text'"></span> <span data-i18n="OPENPGP/INFO_ENTER_YOUR_PASSWORD" data-bind="i18n: 'text'"></span> <input type="password" data-bind="value: decryptPassword, onEnter: onDecryptMessageClick" /> <span class="link" data-i18n="OPENPGP/ACTION_DECRYPT" data-bind="i18n: 'text', click: onDecryptMessageClick"></span> </div> <div class="notice" data-bind="visible: visibleVerifyControl"> <span data-i18n="OPENPGP/INFO_SIGNED_MESSAGE" data-bind="i18n: 'text'"></span> <span class="link" data-i18n="OPENPGP/ACTION_VERIFY" data-bind="i18n: 'text', click: onVerifyMessageClick"></span> </div> <div class="notice" data-bind="visible: sensitivityText() !== ''"> <span data-bind="text: sensitivityText"></span> </div> <div class="header_content clearfix"> <div class="header_row"> <!-- ko if: !mobileApp --> <div class="toolbar"> <span class="content"> <span class="item delete" data-bind="command: deleteCommand, visible: singleMode, i18n: 'title'"   data-i18n="MAILBOX/TOOL_DELETE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_DELETE"></span> </span> <span class="item prev" data-bind="command: nextMessageCommand, visible: singleMode"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_NEXT_MESSAGE"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_NEXT_MESSAGE"></span> </span> <span class="item next" data-bind="command: prevMessageCommand, visible: singleMode"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_PREV_MESSAGE"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_PREV_MESSAGE"></span> </span> <span class="item reply" data-bind="command: replyCommand, visible: isVisibleReplyTool"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_REPLY"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_REPLY"></span> </span> <span class="item replyall" data-bind="command: replyAllCommand, visible: isVisibleReplyTool"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_REPLY_TO_ALL"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_REPLY_TO_ALL"></span> </span> <span class="item resend" data-bind="command: resendCommand, visible: isVisibleResendTool"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_RESEND"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_RESEND"></span> </span> <span class="item forward" data-bind="command: forwardCommand, visible: isVisibleForwardTool"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MAILBOX/TOOL_FORWARD"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_FORWARD"></span> </span> <a class="item new_window" href="javascript: void(0);"  data-bind="click: openInNewWindow, visible: !singleMode()"> <span class="icon" data-bind="i18n: 'title'" data-i18n="MESSAGE/ACTION_OPEN_IN_NEW_WINDOW"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MESSAGE/ACTION_OPEN_IN_NEW_WINDOW"></span> </a> <span class="item more" data-bind="dropdown: {control: false}, command: moreCommand"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_SHOW_MORE"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"> <span></span> </span> <span class="dropdown_content"> <span class="item print" data-bind="command: printCommand"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_PRINT"></span> </span> <span class="item save" data-bind="command: saveCommand"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_SAVE"></span> </span> <span class="item save_as_pdf" data-bind="visible: allowSaveAsPdf, command: saveAsPdfCommand"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_SAVE_AS_PDF"></span> </span> <span class="item headers" data-bind="visible: currentMessage() && currentMessage().completelyFilled(), click: showSourceHeaders"> <span class="icon"></span> <span class="text" data-i18n="MESSAGE/LINK_VIEW_MESSAGE_HEADERS" data-bind="i18n: 'text'"></span> </span> <span class="item" data-bind="visible: false && currentMessage() && currentMessage().completelyFilled(), click: testFunction"> <span class="icon"></span> Custom menu item (for tests) </span> </span> </span> </span> </span> </span> </div> <!-- /ko --> <span class="link details_show" data-i18n="MESSAGE/ACTION_SHOW_DETAILS"  data-bind="i18n: 'title', click: showDetails, visible: !detailsVisible()"></span> <span class="link details_hide" data-i18n="MESSAGE/ACTION_HIDE_DETAILS" data-bind="i18n: 'title', click: hideDetails, visible: detailsVisible()"></span> <div class="message_info" data-bind="visible: !detailsVisible()"> <div class="message_info_line"> <span class="from control" data-bind="text: currentAccountEmail() === fromEmail() ? meSender : from, event: {'mouseover': fromMouseoverEvent, 'mouseout': fromMouseoutEvent}, css: {'link founded': oFromAddr() && oFromAddr().founded()}"> </span><span class="add_contact" data-i18n="MESSAGE/ACTION_ADD_TO_CONTACTS"    data-bind="i18n: 'title', click: function () {addToContacts(oFromAddr().sEmail, oFromAddr().sName);}, visible: isCurrentNotDraftOrSent() && oFromAddr() && oFromAddr().loaded() && !oFromAddr().founded()"></span> <span data-i18n="MESSAGE/SHORT_LINE_TO" data-bind="i18n: 'text', visible: aAllRecipients().length > 0"></span> <span data-bind="foreach: aAllRecipients"> <span data-bind="text: $parent.currentAccountEmail() === sEmail ? $parent.meRecipient : sDisplay,  event: {'mouseover': mouseoverEvent, 'mouseout': mouseoutEvent}, css: {'link founded': founded}"> </span><span class="add_contact" data-i18n="MESSAGE/ACTION_ADD_TO_CONTACTS"  data-bind="i18n: 'title', click: function () {$parent.addToContacts(sEmail, sName);}, visible: loaded() && !founded() && $parent.currentAccountEmail() !== sEmail"> </span><span data-bind="visible: $parent.aAllRecipients().length > $index() + 1">, </span> </span> </div> </div> <div class="message_info message_detail_info" data-bind="visible: detailsVisible()"> <div class="message_info_line"> <span class="title" data-i18n="MESSAGE/HEADER_FROM" data-bind="i18n: 'text'"></span>:  <span class="from control" data-bind="text: fullFrom,  event: {'mouseover': fromMouseoverEvent, 'mouseout': fromMouseoutEvent},   css: {'link founded': oFromAddr() && oFromAddr().founded()}"></span> <span class="add_contact" data-i18n="MESSAGE/ACTION_ADD_TO_CONTACTS"    data-bind="i18n: 'title', click: function () {addToContacts(oFromAddr().sEmail, oFromAddr().sName);}, visible: isCurrentNotDraftOrSent() && oFromAddr() && oFromAddr().loaded() && !oFromAddr().founded()"></span> </div> <div class="message_info_line" data-bind="visible: aToAddr().length > 0"> <span class="title" data-i18n="MESSAGE/HEADER_TO" data-bind="i18n: 'text'"></span>:  <!-- ko foreach: aToAddr --> <span data-bind="text: sFull, event: {'mouseover': mouseoverEvent, 'mouseout': mouseoutEvent},   css: {'link founded': founded}"> </span><span class="add_contact" data-i18n="MESSAGE/ACTION_ADD_TO_CONTACTS"  data-bind="i18n: 'title', click: function () {$parent.addToContacts(sEmail, sName);}, visible: loaded() && !founded()"> </span><span data-bind="visible: $parent.aToAddr().length > $index() + 1">, </span> <!-- /ko --> </div> <div class="message_info_line" data-bind="visible: aCcAddr().length > 0"> <span class="title" data-i18n="MESSAGE/HEADER_CC" data-bind="i18n: 'text'"></span>:  <!-- ko foreach: aCcAddr --> <span data-bind="text: sFull, event: {'mouseover': mouseoverEvent, 'mouseout': mouseoutEvent},   css: {'link founded': founded}"> </span><span class="add_contact" data-i18n="MESSAGE/ACTION_ADD_TO_CONTACTS"  data-bind="i18n: 'title', click: function () {$parent.addToContacts(sEmail, sName);}, visible: loaded() && !founded()"> </span><span data-bind="visible: $parent.aCcAddr().length > $index() + 1">, </span> <!-- /ko --> </div> <div class="message_info_line" data-bind="visible: aBccAddr().length > 0"> <span class="title" data-i18n="MESSAGE/HEADER_BCC" data-bind="i18n: 'text'"></span>:  <!-- ko foreach: aBccAddr --> <span data-bind="text: sFull, event: {'mouseover': mouseoverEvent, 'mouseout': mouseoutEvent},   css: {'link founded': founded}"> </span><span class="add_contact" data-i18n="MESSAGE/ACTION_ADD_TO_CONTACTS"  data-bind="i18n: 'title', click: function () {$parent.addToContacts(sEmail, sName);}, visible: loaded() && !founded()"> </span><span data-bind="visible: $parent.aBccAddr().length > $index() + 1">, </span> <!-- /ko --> </div> <div class="message_info_line"> <span class="title" data-i18n="MESSAGE/HEADER_DATE" data-bind="i18n: 'text'"></span>:  <span data-bind="text: fullDate"></span> </div> <!--<div class="message_info_line" data-bind="visible: currentMessage() && currentMessage().completelyFilled()"> <span class="link" data-i18n="MESSAGE/LINK_VIEW_MESSAGE_HEADERS" data-bind="i18n: 'text', click: showSourceHeaders"></span> </div>--> </div> </div> <div class="header_row"> <span class="date" data-bind="text: midDate, visible: !detailsVisible()"></span> <span class="icon importance" data-bind="visible: importance() === Enums.Importance.High"></span> <span class="icon attachments" data-bind="visible: hasNotInlineAttachments, click: function() { scrollToAttachment.valueHasMutated(); }"></span> <h2 class="subject" data-bind="text: subject"></h2> </div> </div> <!-- ko if: mobileApp --> <div class="body_parts_switcher" data-bind="visible: hasNotInlineAttachments, css: {'view_attachments': visibleAttachments}"> <span class="item show_message" data-i18n="MESSAGE/VIEW_BODY" data-bind="i18n: 'text', click: showMessage"></span> <span class="item show_attachments" data-bind="click: showAttachments"> <span data-i18n="MESSAGE/VIEW_ATTACHMENTS" data-bind="i18n: 'text'"></span> <span data-bind="text: notInlineAttachments().length"></span> </span> </div> <!-- /ko --> </div> <div class="panels" data-bind="css: {'has_attachments': hasNotInlineAttachments, 'view_attachments': visibleAttachments}"> <div class="panel right_panel" data-bind="visible: hasNotInlineAttachments, customScrollbar: {x: false, 'reset': currentMessage()}"> <div class="scroll-inner"> <div class="attachments large"> <div class="download_menu"> <span class="link hover" data-bind="visible: visibleExtendedDownload"> <span class="icon"></span> <span class="text" data-i18n="MESSAGE/ATTACHMENT_DOWNLOAD_ALL" data-bind="i18n: 'text'"></span> </span> <div class="content"> <span class="link all" data-bind="click: downloadAllAttachments, visible: visibleDownloadAllAttachments"> <span class="icon"></span> <span class="text" data-i18n="MESSAGE/ATTACHMENT_DOWNLOAD_AS_ZIP" data-bind="i18n: 'text'"></span> </span> <span class="link separately"    data-bind="click: downloadAllAttachmentsSeparately, visible: visibleDownloadAllAttachmentsSeparately"> <span class="icon"></span> <span class="text" data-i18n="MESSAGE/ATTACHMENT_DOWNLOAD_ALL_SEPARATELY" data-bind="i18n: 'text'"></span> </span> <span class="link to_filestorage" data-bind="click: saveAttachmentsToFiles, visible: visibleSaveAttachmentsToFiles"> <span class="icon"></span> <span class="text" data-i18n="MESSAGE/ATTACHMENT_SAVE_TO_FILES" data-bind="i18n: 'text'"></span> </span> </div> </div> <div data-bind="template: {name: 'Common_FileViewModel', foreach: notInlineAttachments}"></div> </div> </div> </div> <div class="panel left_panel"> <div class="message" data-bind="customScrollbar: {'reset': displayedMessageUid(), scrollTo: scrollToAttachment}, css: {'has_bodytext': hasBodyText, 'has_attachments': hasNotInlineAttachments}"> <div class="message_content scroll-inner" data-bind="hasfocus: contentHasFocus"> <!-- ko if: visibleAppointmentInfo --> <div class="appointment" data-bind="template: {name: 'Mail_AppointmentViewModel', data: ical}"></div> <!-- /ko --> <!-- ko if: visibleVcardInfo --> <div class="appointment" data-bind="template: {name: 'Mail_VcardAttachmentViewModel', data: vcard}"></div> <!-- /ko --> <div class="message_body_info" data-bind="visible: visibleNoMessageSelectedText"> <div data-i18n="MESSAGE/INFO_NO_MESSAGE_SELECTED"   data-bind="i18n: 'text'"></div> <div class="message_body_secondary_info" data-i18n="MESSAGE/INFO_SINGLE_DOUBLE_CLICK"   data-bind="i18n: 'text'"></div> </div> <div class="message_body_info" data-i18n="MESSAGE/INFO_LOADING"   data-bind="visible: isLoading, i18n: 'text'"></div> <div class="message_body html" data-bind="initDom: domTextBody, attr: {'dir': rtlMessage() ? 'rtl' : 'ltr'}"></div> <!--<div class="bodyparts_separator"></div>--> </div> </div> </div> </div> <!-- ko if: !mobileApp --> <div class="quick_reply fields" data-bind="initDom: domQuickReply,  quickReplyAnim: { 'sendAction': replySendingStarted(),  'saveAction': replySavingStarted(),  'activeAction': isQuickReplyActive() }, visible: replyPaneVisible() && isVisibleReplyTool()"> <div class="status"> <div class="text" data-bind="text: replyLoadingText"></div> </div> <div class="row" data-bind="css: {'focused': replyTextFocus(),  'filled': replyText().length > 0}"> <label for="reply_text" class="title placeholder"     data-i18n="COMPOSE/QUICK_REPLY_PLACEHOLDER" data-bind="i18n: 'text'"></label> <textarea id="reply_text" class="input" data-bind="value: replyText,  hasfocus: replyTextFocus, onCtrlEnter: executeSendQuickReplyCommand,  valueUpdate: 'afterkeydown', style: {'fontFamily': defaultFontName}"></textarea> </div> <div class="buttons"> <span class="button send special" data-bind="i18n: 'text', command: sendQuickReplyCommand" data-i18n="COMPOSE/TOOL_SEND"></span> <span class="button save" data-bind="text: saveButtonText, command: saveQuickReplyCommand"></span> <span class="text hint" data-i18n="COMPOSE/QUICK_REPLY_HOTKEY" data-bind="i18n: 'text'"></span> <a class="link full_form" href="javascript: void(0);"     data-bind="i18n: 'text', command: replyAllCommand"     data-i18n="COMPOSE/QUICK_REPLY_OPEN_FULL"></a> </div> </div> <!-- /ko --> </div> <!-- ko foreach: recipientsContacts --> <div class="item_viewer" style="position: absolute;" data-bind="attr: {'data-email': email}"> <span class="dropdown control contact_card"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content" data-bind="template: {name: 'Common_ContactCard', data: $data}"> </span> </span> </span> </div> <!-- /ko --> <!-- ko template: {name: 'Mail_PrintMessageViewModel'} --><!-- /ko --> </script><script id="Mail_LayoutSidePane_Toolbar" type="text/html"><div class="toolbar"> <span class="resizer_top" data-bind="event: { 'dblclick': resizeDblClick}"></span> <span class="resizer_bottom" data-bind="event: { 'dblclick': resizeDblClick}"></span> <span class="content"> <!-- ko if: mobileApp --> <span data-bind="click: gotoFolderList, i18n: 'title'" class="item back"   data-i18n="MAILBOX/TOOL_BACK_TO_LIST"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_BACK_TO_LIST"></span> </span> <a href="javascript: void(0)" class="item new_message" data-bind="attr: {href: composeLink}, visible: bVisibleComposeMessage, i18n: 'title'"    data-i18n="MAILBOX/TOOL_NEW_MESSAGE"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_NEW_MESSAGE"></span> </a> <!-- /ko --> <!-- ko if: !mobileApp --> <span class="item checkmail" data-bind="command: checkMailCommand, checkmail: {'activeClass': 'process', 'state': checkMailStarted(), 'duration': 800}, i18n: 'title'"   data-i18n="MAILBOX/TOOL_CHECK_MAIL"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_CHECK_MAIL"></span> </span> <!-- /ko --> <span class="group mark" data-bind="dropdown: {}, css: {disabled: oMessageList.isEmptyList()}, i18n: 'title'"   data-i18n="MAILBOX/TOOL_MARK_AS_READ"> <span class="item" data-bind="command: markAsReadCommand"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_MARK_AS_READ"></span> </span><span class="item control" title=""> <span class="icon arrow"></span> </span> <span class="dropdown" title=""> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> <span class="item allread" data-bind="command: markAllReadCommand, i18n: 'text'" data-i18n="MAILBOX/TOOL_MARK_ALL_READ"></span> <span class="item unread" data-bind="command: markAsUnreadCommand, i18n: 'text'" data-i18n="MAILBOX/TOOL_MARK_AS_UNREAD"></span> </span> </span> </span> </span> <!-- ko if: !mobileApp --> <span class="item move" data-bind="dropdown: {control: false, scrollToTopContainer: '.scroll-inner'}, command: moveToFolderCommand, i18n: 'title'"   data-i18n="MAILBOX/TOOL_MOVE_TO_FOLDER"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_MOVE_TO_FOLDER"></span> <span class="icon arrow"></span> <span class="dropdown" data-bind="initDom: domFolderList" title=""> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="folders dropdown_content" data-bind="customScrollbar: {x: false}"> <span class="scroll-inner"> <!-- ko template: {name: 'Mail_MoveToFolderItem', foreach: folderList().collection} --><!-- /ko --> </span> </span> </span> </span> </span> <!-- /ko --> <span class="item delete" data-bind="dropdown: {}, command: deleteCommand, i18n: 'title'"   data-i18n="MAILBOX/TOOL_DELETE"> <span class="icon"></span> <span class="hint" data-bind="text: selectedCount, visible: selectedCount() > 0"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_DELETE"></span> </span> <!-- ko if: !mobileApp --> <span class="item empty_trash" data-bind="command: emptyTrashCommand, visible: isTrashFolder(), i18n: 'title'"   data-i18n="MAILBOX/TOOL_EMPTY_TRASH"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_EMPTY_TRASH"></span> </span> <span class="item empty_spam" data-bind="command: emptySpamCommand, visible: isSpamFolder(), i18n: 'title'"   data-i18n="MAILBOX/TOOL_EMPTY_SPAM"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_EMPTY_SPAM"></span> </span> <!-- /ko --> <span class="item spam" data-bind="command: spamCommand, visible: allowedSpamAction, i18n: 'title'"   data-i18n="MAILBOX/TOOL_SPAM"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_SPAM"></span> </span> <span class="item notspam" data-bind="command: notSpamCommand, visible: allowedNotSpamAction, i18n: 'title'"   data-i18n="MAILBOX/TOOL_NOT_SPAM"> <span class="icon"></span> <span class="text" data-bind="i18n: 'text'" data-i18n="MAILBOX/TOOL_NOT_SPAM"></span> </span> </span> </div></script><script id="Popups_AccountCreateIdentityPopupViewModel" type="text/html"><div class="mask" data-bind="click: cancel"></div> <div class="popup_panel"> <span class="close" data-bind="click: cancel"></span> <span class="title" data-i18n="SETTINGS/ACCOUNTS_TITLE_CREATE_IDENTITY" data-bind="i18n: 'text'"></span> <!-- ko template: {name: 'Settings_IdentityPropertiesViewModel', data: oIdentityPropertiesViewModel} --><!-- /ko --> </div> <span class="helper"></span></script><script id="Popups_AccountCreatePopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel" data-bind="css: {'step_first': isFirstStep(), 'step_last': !isFirstStep()}"> <span class="close" data-bind="click: onCancelClick"></span> <span class="title" data-i18n="SETTINGS/ACCOUNTS_ADD_NEW_ACCOUNT_TITLE" data-bind="i18n: 'text', visible: isFirstStep()"></span> <span class="title" data-i18n="SETTINGS/ACCOUNTS_ADD_NEW_ACCOUNT_TITLE_LAST_STEP" data-bind="i18n: 'text', visible: !isFirstStep()"></span> <div class="fields"> <div class="fieldset"> <div class="row name"> <span class="label" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_YOUR_NAME" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false"  type="text" maxlength="65" data-bind="value: friendlyName, hasfocus: friendlyNameFocus, valueUpdate: 'afterkeydown', onEnter: onSaveClick"/> </div> <div class="row email"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_EMAIL" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false"  type="text" maxlength="65" data-bind="value: email, hasfocus: emailFocus, onEnter: onSaveClick"/> </div> <div class="row login" data-bind="visible: !isFirstStep()"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_LOGIN" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false"  type="text" maxlength="255" data-bind="value: incomingMailLogin, hasfocus: incomingLoginFocused, onEnter: onSaveClick"/> </div> <div class="row password"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PASSWORD" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false"  type="password" maxlength="255" data-bind="value: incomingMailPassword, hasfocus: incomingPasswordFocus, onEnter: onSaveClick"/> </div> <div class="row incoming" data-bind="visible: !isFirstStep()"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_INCOMING_MAIL" data-bind="i18n: 'text'"></span> <input class="value input server" spellcheck="false"  type="text" maxlength="255" data-bind="value: incomingMailServer, hasfocus: incomingServerFocused, onEnter: onSaveClick"/> <span class="label required" style="width: auto; margin-left: 10px;" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PORT" data-bind="i18n: 'text'"></span> <input class="value input port" spellcheck="false"  type="text" maxlength="5" data-bind="value: incomingMailPort, onEnter: onSaveClick"/> </div> <div class="row outgoing" data-bind="visible: !isFirstStep()"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_OUTGOING_MAIL" data-bind="i18n: 'text'"></span> <input class="value input server" spellcheck="false" type="text" maxlength="255"  data-bind="value: outgoingMailServer, hasfocus: outServerFocused, onEnter: onSaveClick"/> <span class="label required" style="width: auto; margin-left: 10px;" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PORT" data-bind="i18n: 'text'"></span> <input  class="value input port" spellcheck="false"  type="text" maxlength="5"  data-bind="value: outgoingMailPort, onEnter: onSaveClick"/> </div> <div class="row smtp_authentication" data-bind="visible: !isFirstStep()"> <div> <label class="custom_checkbox" data-bind="css: {'checked': useSmtpAuthentication}"> <span class="icon"></span> <input type="checkbox" id="add_new_account_mail_out_auth" data-bind="checked: useSmtpAuthentication" /> </label> <label for="add_new_account_mail_out_auth" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_USE_SMTP_AUTHENTICATION" data-bind="i18n: 'text'"></label> </div> </div> </div> <div class="buttons"> <span class="button save" data-i18n="SETTINGS/BUTTON_ADD" data-bind="i18n: 'text', click: onFirstSaveClick, visible: !loading() && isFirstStep()"></span> <span class="button save" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onSecondSaveClick, visible: !loading() && !isFirstStep()"></span> <span class="button save" data-i18n="SETTINGS/BUTTON_ADDING" data-bind="i18n: 'text', visible: loading() && isFirstStep()"></span> <span class="button save" data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading() && !isFirstStep()"></span> <span class="button cancel" data-i18n="SETTINGS/BUTTON_CANCEL" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> </div> <span class="helper"></span></script><script id="Popups_AlertPopupViewModel" type="text/html"><div class="mask"></div> <span class="popup_panel"> <span class="close" data-bind="click: close"></span> <span class="title" data-bind="visible: (title() !== ''), ttext: title"></span> <span class="text" data-bind="text: alertDesc"></span> <div class="buttons"> <span class="button success" data-bind="click: close, text: okButtonText"></span> </div> </span> <span class="helper"></span> </script><script id="Popups_ChangePasswordPopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <div class="fields"> <div class="fieldset"> <div class="row"> <span class="label" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_CURRENT_PASSWORD" data-bind="i18n: 'text'"></span> <input class="value input" type="password" spellcheck="false" maxlength="255" data-bind="value: currentPassword" /> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_NEW_PASSWORD" data-bind="i18n: 'text'"></span> <input class="value input" type="password" spellcheck="false" maxlength="255" data-bind="value: newPassword" /> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_CONFIRM_NEW_PASSWORD" data-bind="i18n: 'text'"></span> <input class="value input" type="password" spellcheck="false" maxlength="255" data-bind="value: confirmPassword" /> </div> </div> <div class="buttons"> <span class="button save" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onOKClick"></span> <span class="button cancel" data-i18n="SETTINGS/BUTTON_CANCEL" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_ConfirmPopupViewModel" type="text/html"><div class="mask"></div> <div class="popup_panel"> <span class="close" data-bind="click: noClick"></span> <span class="title" data-bind="visible: (title() !== ''), ttext: title"></span> <span class="text" data-bind="text: confirmDesc"></span> <div class="buttons"> <span class="button success" data-bind="click: yesClick, text: okButtonText"></span> <span class="button" data-bind="click: noClick, text: cancelButtonText"></span> </div> </div> <span class="helper"></span></script><script id="Popups_FetcherAddPopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <span class="title" data-i18n="SETTINGS/ACCOUNTS_ADD_NEW_FETCHER_TITLE" data-bind="i18n: 'text'"></span> <div class="fields"> <div class="fieldset"> <div class="row incoming"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_FETCHER_POP3_SERVER" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="65" data-bind="value: incomingMailServer, onEnter: onSaveClick, hasFocus: serverIsSelected"/> <span class="label required" style="width: auto; margin-left: 10px;" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PORT" data-bind="i18n: 'text'"></span> <input class="value input port" spellcheck="false" type="text" maxlength="5" data-bind="value: incomingMailPort, onEnter: onSaveClick"/> </div> <div class="row login"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_FETCHER_LOGIN" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="255" data-bind="value: incomingMailLogin, onEnter: onSaveClick, hasFocus: loginIsSelected"/> </div> <div class="row password"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_FETCHER_PASSWORD" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="password" maxlength="255" data-bind="value: incomingMailPassword, onEnter: onSaveClick, hasFocus: passwordIsSelected"/> </div> <div class="row hint"> <span class="" data-i18n="SETTINGS/ACCOUNT_FETCHER_POP3_STORE_TARGET_CLARIFICATION" data-bind="i18n: 'text'"></span> </div> <div class="row folder"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_FETCHER_POP3_STORE_TARGET_FOLDER" data-bind="i18n: 'text'"></span> <span class="" data-i18n="SETTINGS/ACCOUNT_FETCHER_WAITING_FOLDER_LIST" data-bind="i18n: 'text', visible: options().length == 1"></span> <select class="value input" data-bind="visible: options().length > 1, value: folder, options: options, optionsText: 'name', optionsValue: 'id',  optionsAfterRender: defaultOptionsAfterRender, valueUpdate: ['blur', 'afterkeydown'] "></select> <span class="link" data-i18n="SETTINGS/ACCOUNT_FOLDERS_BUTTON_ADD_NEW_FOLDER" data-bind="i18n: 'text', command: addNewFolderCommand"></span> </div> <div class="row"> <div> <label class="custom_checkbox" data-bind="css: {'checked': leaveMessagesOnServer}"> <span class="icon"></span> <input type="checkbox" id="popup_leave_essages_on_server" data-bind="checked: leaveMessagesOnServer" /> </label> <label for="popup_leave_essages_on_server" data-i18n="SETTINGS/ACCOUNT_FETCHER_POP3_LAVE_MESSAGES_ON_SERVER" data-bind="i18n: 'text'"></label> </div> </div> </div> <div class="buttons"> <span class="button save" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick, visible: !loading()"></span> <span class="button save" data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> <span class="button cancel" data-i18n="SETTINGS/BUTTON_CANCEL" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> </div> <span class="helper"></span></script><script id="Popups_FolderCreatePopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <span class="title" data-i18n="SETTINGS/ACCOUNT_FOLDERS_NEW_FOLDER" data-bind="i18n: 'text'"></span> <div class="fields"> <div class="row"> <span class="label" data-i18n="SETTINGS/ACCOUNT_FOLDERS_PARENT_FOLDER" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: parentFolder, options: options, optionsText: 'name', optionsValue: 'id', optionsAfterRender: defaultOptionsAfterRender, valueUpdate: ['blur', 'afterkeydown']"> </select> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/ACCOUNT_FOLDERS_FOLDER_NAME" data-bind="i18n: 'text'"></span> <input type="text" class="value input" spellcheck="false" maxlength="30" data-bind="value: folderName, hasfocus: folderNameFocus" /> </div> <div class="buttons"> <span class="button" data-i18n="SETTINGS/ACCOUNT_FOLDERS_BUTTON_OK" data-bind="i18n: 'text', click: onOKClick, visible: !loading()"></span> <span class="button" data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', click: onOKClick, visible: loading()"></span> <span class="button" data-i18n="MAIN/BUTTON_CANCEL" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_FolderSystemPopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <span class="title" data-i18n="SETTINGS/ACCOUNT_FOLDERS_SETUP_SPECIAL_FOLDERS" data-bind="i18n: 'text'"></span> <div class="fields"> <div class="hint" data-i18n="SETTINGS/ACCOUNT_FOLDERS_INFO_PREDEFINED_FOLDERS" data-bind="i18n: 'text'"></div> <div class="row"> <span class="label" data-i18n="MAIN/FOLDER_SENT" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: sentFolderFullName, options: options, optionsText: 'name', optionsValue: 'id', optionsAfterRender: defaultOptionsAfterRender"> </select> </div> <div class="row"> <span class="label" data-i18n="MAIN/FOLDER_DRAFTS" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: draftsFolderFullName, options: options, optionsText: 'name', optionsValue: 'id', optionsAfterRender: defaultOptionsAfterRender"> </select> </div> <div class="row"> <span class="label" data-i18n="MAIN/FOLDER_TRASH" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: trashFolderFullName, options: options, optionsText: 'name', optionsValue: 'id', optionsAfterRender: defaultOptionsAfterRender"> </select> </div> <div class="row" data-bind="visible: allowSpamFolderEditing"> <span class="label" data-i18n="MAIN/FOLDER_SPAM" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: spamFolderFullName, options: options, optionsText: 'name', optionsValue: 'id', optionsAfterRender: defaultOptionsAfterRender"> </select> </div> <div class="buttons"> <span class="button" data-i18n="SETTINGS/ACCOUNT_FOLDERS_BUTTON_OK" data-bind="i18n: 'text', click: onOKClick"></span> <span class="button" data-i18n="MAIN/BUTTON_CANCEL" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_GenerateOpenPgpKeyPopupViewModel" type="text/html"><div class="mask" data-bind="command: closeCommand"></div> <div class="popup_panel"> <span class="close" data-bind="command: closeCommand"></span> <span class="title" data-i18n="OPENPGP/POPUP_TITLE_GENERATE_NEW_KEY" data-bind="i18n: 'text'"></span> <div class="fields"> <div class="row"> <span class="label" data-i18n="OPENPGP/LABEL_EMAIL" data-bind="i18n: 'text'"></span> <select class="input" data-bind="options: emails, value: selectedEmail"></select> </div> <div class="row"> <span class="label" data-i18n="OPENPGP/LABEL_PASSWORD" data-bind="i18n: 'text'"></span> <input type="password" class="value input" data-bind="value: password" /> </div> <div class="row"> <span class="label" data-i18n="OPENPGP/LABEL_KEY_LENGTH" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: selectedKeyLength, options: keyLengthOptions"></select> </div> <div class="buttons"> <span class="button" data-i18n="OPENPGP/BUTTON_GENERATE" data-bind="visible: !process(), i18n: 'text', click: generate"></span> <span class="button" data-i18n="OPENPGP/BUTTON_GENERATING" data-bind="visible: process, i18n: 'text'"></span> <span class="button" data-i18n="MAIN/BUTTON_CANCEL" data-bind="visible: !process(), i18n: 'text', command: closeCommand"></span> </div> </div> </div> <span class="helper"></span></script><script id="Popups_GooglePickerPopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div></script><script id="Popups_ImportOpenPgpKeyPopupViewModel" type="text/html"><div class="mask" data-bind="command: closeCommand"></div> <div class="popup_panel"> <span class="close" data-bind="command: closeCommand"></span> <span class="title" data-i18n="OPENPGP/POPUP_TITLE_IMPORT_KEY" data-bind="i18n: 'text'"></span> <div class="fields"> <div class="row" data-bind="visible: keys().length === 0"> <textarea class="input import_pgp_key_area" data-bind="value: keyArmor, hasfocus: keyArmorFocused"></textarea> </div> <div class="row import_pgp_key_area" data-bind="visible: keys().length > 0"> <div class="headline" data-bind="text: headlineText"></div> <div data-bind="foreach: keys"> <div class="key_item" data-bind="css: {'disabled': disabled}"> <label data-bind="css: {'checked': needToImport, 'disabled': disabled}" class="custom_checkbox checked"> <span class="icon"></span> <input type="checkbox" data-bind="checked: needToImport, attr: {'id': 'need_to_import_' + id}, disable: disabled"> </label> <label data-bind="attr: {'for': 'need_to_import_' + id}"> <span class="key_email" data-bind="text: email"></span> <span data-bind="text: addInfo"></span> </label> </div> </div> <div class="hint" data-i18n="OPENPGP/HINT_EXISTING_KEYS_GREYED" data-bind="i18n: 'text', visible: hasExistingKeys"></div> </div> <div class="buttons"> <span class="button" data-i18n="OPENPGP/BUTTON_CHECK" data-bind="i18n: 'text', click: checkArmor, visible: keys().length === 0"></span> <span class="button" data-i18n="OPENPGP/BUTTON_IMPORT" data-bind="i18n: 'text', click: importKey, visible: keys().length > 0"></span> <span class="button" data-i18n="MAIN/BUTTON_CANCEL" data-bind="i18n: 'text', command: closeCommand"></span> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_OpenPgpEncryptPopupViewModel" type="text/html"><div class="mask" data-bind="click: cancel"></div> <div class="popup_panel"> <span class="close" data-bind="click: cancel"></span> <span class="title" data-i18n="OPENPGP/POPUP_TITLE_ENCRYPT" data-bind="i18n: 'text'"></span> <div class="fields"> <div class="row"> <div> <label data-bind="css: {'checked': sign}" class="custom_checkbox checked"> <span class="icon"></span> <input type="checkbox" data-bind="checked: sign" id="openpgp-sign" /> </label> <label data-bind="i18n: 'text'" data-i18n="OPENPGP/LABEL_SIGN" for="openpgp-sign"></label> <span class="label pgp_password" data-i18n="OPENPGP/LABEL_PASSWORD" data-bind="i18n: 'text'"></span> <input type="password" class="value input" data-bind="value: password, hasfocus: passwordFocused" /> </div> </div> <div class="row"> <div> <label data-bind="css: {'checked': encrypt}" class="custom_checkbox checked"> <span class="icon"></span> <input type="checkbox" data-bind="checked: encrypt" id="openpgp-encrypt" /> </label> <label data-bind="i18n: 'text'" data-i18n="OPENPGP/LABEL_ENCRYPT" for="openpgp-encrypt"></label> </div> </div> <div class="buttons"> <span class="button" data-bind="text: signEncryptButtonText, command: signEncryptCommand, visible: isEnableSignEncrypt"></span> <span class="button" data-i18n="MAIN/BUTTON_CANCEL" data-bind="i18n: 'text', click: cancel"></span> </div> </div> </div> <span class="helper"></span></script><script id="Popups_PhonePopupViewModel" type="text/html"><div class="mask"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <!--<span class="title" data-i18n="SETTINGS/ACCOUNT_FOLDERS_NEW_FOLDER" data-bind="i18n: 'text'"></span>--> <div class="fields"> <div class="row" data-bind="visible: action() === Enums.PhoneAction.Settings"> <span class="title" data-i18n="Providing access to your microphone" data-bind="i18n: 'text'"></span> <div id="fake_flash" style="margin-bottom: 10px"></div> <span class="hint" data-i18n='Click "Allow" and then "close". We also recommend that you tick the box to "remember" that would further the dialog box does not interfere with your work comfortably.' data-bind="i18n: 'text'"></span> </div> <div class="row" data-bind="visible: action() === Enums.PhoneAction.Incoming"> <span class="text call_report" data-bind="text: report"></span> </div> <div class="buttons"> <span class="button" data-i18n="SETTINGS/ACCOUNT_FOLDERS_BUTTON_OK" data-bind="i18n: 'text', visible: action() === Enums.PhoneAction.Settings, click: onOKClick"></span> <span class="button answer" data-i18n="PHONE/BUTTON_ANSWER" data-bind="i18n: 'text', visible: action() === Enums.PhoneAction.Incoming, click: answer"></span> <span class="button hangup" data-i18n="PHONE/BUTTON_END_CALL" data-bind="i18n: 'text', visible: action() === Enums.PhoneAction.Incoming, click: hangup"></span> </div> </div> </div> <span class="helper"></span></script><script id="Popups_ShowOpenPgpKeyArmorPopupViewModel" type="text/html"><div class="mask" data-bind="command: closeCommand"></div> <div class="popup_panel"> <span class="close" data-bind="command: closeCommand"></span> <span class="title" data-bind="text: titleText"></span> <div class="fields"> <div class="row view_pgp_key_area" data-bind="customScrollbar: {x: false, 'reset': htmlArmor()}"> <div class="scroll-inner"> <pre data-bind="text: htmlArmor, initDom: domKey"></pre> </div> </div> <div class="buttons"> <span class="button" data-i18n="MAIN/BUTTON_SEND" data-bind="i18n: 'text', click: send"></span> <a class="button" data-i18n="OPENPGP/BUTTON_DOWNLOAD" data-bind="i18n: 'text', attr: {'href': downloadLinkHref, 'download': downloadLinkFilename}, visible: downloadLinkHref() !== '#'"></a> <span class="button" data-i18n="OPENPGP/BUTTON_SELECT" data-bind="i18n: 'text', click: select"></span> <span class="button" data-i18n="MAIN/BUTTON_CLOSE" data-bind="i18n: 'text', command: closeCommand"></span> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_Calendar_CalendarPopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <span class="title" data-bind="style: {backgroundColor: selectedColor}, text: popupTitle()"></span> <div class="fields"> <div class="fieldset"> <div class="row name" data-bind="css: {'focused': calendarNameFocus(), 'filled': (calendarName()) ? calendarName().length : false}"> <label for="calendar_name" class="label placeholder" data-i18n="CALENDAR/TITLE_CALENDAR_NAME" data-bind="i18n: 'text'"></label> <input id="calendar_name" class="value input" type="text" spellcheck="false"  maxlength="200" data-bind="value: calendarName, hasfocus: calendarNameFocus" /> </div> <div class="row description" data-bind="css: {'focused': calendarDescriptionFocus(), 'filled': (calendarDescription()) ? calendarDescription().length : false}"> <label for="calendar_description" class="label placeholder" data-i18n="CALENDAR/TITLE_CALENDAR_DESCRIPTION" data-bind="i18n: 'text'"></label> <input id="calendar_description" class="value input" spellcheck="false"  type="text" maxlength="200" data-bind="value: calendarDescription, hasfocus: calendarDescriptionFocus" /> </div> </div> <div class="buttons"> <span class="button save" data-i18n="CALENDAR/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick"></span> <span class="colors" data-bind="foreach: colors"> <span class="item color_pick" data-bind="style: {backgroundColor: $data}, css: {'selected': $parent.selectedColor() === $data},  click: function () {$parent.selectedColor($data)}"></span> </span> </div> </div> </div> <span class="helper"></span></script><script id="Popups_Calendar_CalendarSelectCalendarsPopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <div class="fields"> <div class="fieldset"> <div class="row name"> </div> </div> <div class="buttons"> <span class="button save" data-i18n="CALENDAR/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick"></span> </div> </div> </div> <span class="helper"></span></script><script id="Popups_Calendar_EditRecurrenceEventPopupViewModel" type="text/html"><div class="mask" data-bind="click: cancelButtonClick"></div> <span class="popup_panel"> <span class="close" data-bind="click: cancelButtonClick"></span> <span class="text" data-bind="text: confirmDesc"></span> <div class="buttons"> <span class="button success" data-bind="click: onlyThisInstanceButtonClick, text: onlyThisInstanceButtonText"></span> <span class="button success" data-bind="click: allEventsButtonClick, text: allEventsButtonText"></span> <span class="button" data-bind="click: cancelButtonClick, text: cancelButtonText"></span> </div> </span> <span class="helper"></span></script><script id="Popups_Calendar_EventPopupViewModel" type="text/html"><div class="mask clear" data-bind="visible: dateEdit(), click: onMainPanelClick"></div> <div class="mask" data-bind="click: closePopup"></div> <div class="popup_panel" data-bind="css: {'show_side_panel': calendarAppointments && (guestsEdit() || attendees().length > 0), 'editable': isEditable, 'offset': dateEdit()}"> <div class="panel_wrap clearfix"> <div class="side_panel fields"> <div class="fieldset"> <div class="row"> <span class="label" data-i18n="CALENDAR/LABEL_EVENT_HOST" data-bind="i18n: 'text'"></span> <span class="value" data-bind="attr: {title: owner}, text: ownerDisplay, css: {'recivedAnim': recivedAnim() && owner() === whomAnimate()}"></span> </div> <div class="row attendees" data-bind="foreach: attendees"> <div class="attender" data-bind="css: { 'pending': status === 0, 'accepted': status === 1, 'declined': status === 2, 'tentative': status === 3  }"> <span class="control remove" data-i18n="CALENDAR/EVENT_GUESTS_REMOVE" data-bind="visible: $parent.isEditable(), click: $parent.removeGuest.bind($parent), i18n: 'title'"></span> <!--<span class="name" data-bind="css: {'recivedAnim': $parent.recivedAnim}">--> <span class="name" data-bind="css: {'recivedAnim': $parent.recivedAnim() && email === $parent.whomAnimate()}"> <span class="icon status" data-bind="title: function () {return $parent.getAttenderTextStatus(status)}"></span> <span class="text" data-bind="title: email, text: name, visible: name !== ''"></span> <span class="text" data-bind="text: email, visible: name === ''"></span> </span> </div> </div> <div class="row add_attender" data-bind="visible: isEditable(), css: {'focused': guestEmailFocus()}"> <span class="control add" data-i18n="CALENDAR/EVENT_ADD_GUEST" data-bind="i18n: 'title', click: onAddGuestClick"></span> <label for="add_attender_input" class="label placeholder" data-i18n="CALENDAR/LABEL_WEB_EMAIL_OR_NAME" data-bind="i18n: 'text', visible: guestAutocomplete() === ''"></label> <input id="add_attender_input" class="value input" spellcheck="false"  type="text" autocomplete="on" data-bind="value: guestAutocomplete, hasfocus: guestEmailFocus, valueUpdate: ['blur', 'afterkeydown'], autocompleteSimple: {callback: autocompleteCallback.bind($data), dataAccessor: guestAutocompleteItem}" /> </div> <div class="row" data-bind="visible: appointment() && selectedCalendarIsEditable()"> <div class="buttons"> <span class="button" data-i18n="MESSAGE/APPOINTMENT_BUTTON_ACCEPT"   data-bind="i18n: 'text', css: {'state': attenderStatus() === Enums.IcalConfigInt.Accepted}, click: function(){doAppointmentAction(Enums.IcalConfig.Accepted)}"></span> <span class="button" data-i18n="MESSAGE/APPOINTMENT_BUTTON_TENTATIVE"   data-bind="i18n: 'text', css: {'state': attenderStatus() === Enums.IcalConfigInt.Tentative}, click: function(){doAppointmentAction(Enums.IcalConfig.Tentative)}"></span> <span class="button" data-i18n="MESSAGE/APPOINTMENT_BUTTON_DECLINE"   data-bind="i18n: 'text', css: {'state': attenderStatus() === Enums.IcalConfigInt.Declined}, click: function(){doAppointmentAction(Enums.IcalConfig.Declined)}"></span> </div> </div> </div> </div> <div class="main_panel"> <!--<span class="icon repeat" data-bind="visible: repeatPeriod() !== 0"></span>--> <span class="icon appointment" data-bind="visible: attendees().length !== 0"></span> <span class="close" data-bind="click: closePopup"></span> <span class="title" data-bind="dropdown: {'control': false}, style: {backgroundColor: calendarColor}, css: {'calendar_selector': calendarsList().length > 1 && selectedCalendarIsEditable()}"> <span class="current"> <span data-bind="text: selectedCalendarName, fade: {color: calendarColor}"></span> </span> <span class="dropdown" data-bind="visible: calendarsList().length > 1 && selectedCalendarIsEditable()"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content" data-bind="foreach: calendarsList()"> <span class="item" data-bind="visible: $parent.selectedCalendar() !== id, text: name, style: { backgroundColor: color }, click: function () { $parent.selectedCalendar(id) }"></span> </span> </span> </span> </span> <div class="fields"> <div class="fieldset"> <div class="row dates" data-bind="click: isEditable() ? showDates : '', css: {'editable': isEditable()}"> <span class="value" data-bind="text: startDate()"></span>, <span class="value" data-bind="text: !allDay() ? ', ' : ' '"></span> <span class="value" data-bind="text: startTime, visible: !allDay()"></span> <span data-bind="visible: allDay() && !isEvOneDay() || !allDay() && (!isEvOneDay() || !isEvOneTime())">&nbsp;&ndash;&nbsp;</span> <span class="value" data-bind="text: endDate(), visible: !isEvOneDay()"></span> <span class="value" data-bind="text: !allDay() ? ', ' : ' ', visible: !isEvOneDay()"></span> <span class="value" data-bind="text: endTime, visible: !allDay() && (!isEvOneDay() || !isEvOneTime())"></span> </div> <span data-i18n="CALENDAR/RECURRING" data-bind="css: {'repeat': isRepeat()}, i18n: 'title'"></span> <div class="subforms" data-bind="visible: dateEdit()"> <div class="dates_form"> <div class="form_content"> <div class="row" data-bind="css: {'ampm_time': ampmTimeFormat()}"> <input class="date input" type="text"  spellcheck="false" readonly="readonly" data-bind="initDom: startDom, value: startDate" /> <!--<input class="time input" type="text" spellcheck="false"  data-bind="value: startTime, visible: !allDay()" />--> <span class="custom_selector" data-bind="visible: !allDay(), customSelect: {'control': false, 'selected': 'selected', 'input': true, 'options': timeOptions(), 'timeOptions': timeOptions, value: startTime, optionsText: 'text', optionsValue: 'value'}"> <input class="value time input"  spellcheck="false" type="text" data-bind="value: startTime" /> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> <!--<span class="dropdown_content" data-bind="customScrollbar: {x: false}">--> <!--<span class="scroll-inner"></span>--> </span> </span> </span> </span> <input class="date input" type="text" spellcheck="false"  readonly="readonly" data-bind="initDom: endDom, value: endDate" /> <!--<input class="time input" type="text" spellcheck="false"  data-bind="value: endTime, visible: !allDay()" />--> <span class="custom_selector" data-bind="visible: !allDay(), customSelect: {'control': false, 'selected': 'selected', 'input': true, 'options': timeOptions(), 'timeOptions': timeOptions, value: endTime, optionsText: 'text', optionsValue: 'value'}"> <input class="value time input" spellcheck="false"  type="text" data-bind="value: endTime" /> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"></span> </span> </span> </span> </div> <div class="row allday"> <label data-bind="css: {'checked': allDay}" class="custom_checkbox"> <span class="icon"></span> <input type="checkbox" data-bind="checked: allDay" id="allday"> </label> <label for="allday" data-i18n="CALENDAR/EVENT_ALLDAY" data-bind="i18n: 'text'"></label> </div> <div class="repeat_panel" data-bind="visible: allEvents() === Enums.CalendarEditRecurrenceEvent.AllEvents"> <div class="row" data-bind="visible: true"> <span class="label" data-i18n="CALENDAR/EVENT_REPEAT_REPEATS" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="options: repeatPeriodOptions, optionsText: 'label', optionsValue: 'value', value: repeatPeriod"></select> <span class="" data-bind="visible: repeatPeriod() === 1"> <span class="label" data-i18n="CALENDAR/EVENT_REPEAT_UNTIL" data-bind="i18n: 'text'"></span> <input class="date input" spellcheck="false" type="text" readonly="readonly" data-bind="initDom: repeatEndDom, value: repeatEndDate" /> </span> <span class="" data-bind="visible: repeatPeriod() === 2"> <span class="label" data-i18n="CALENDAR/EVENT_REPEAT_DAYS" data-bind="i18n: 'text'"></span> <span class="custom_switcher"> <label data-bind="css: {'checked': weekMO}"> <span class="text" data-i18n="CALENDAR/EVENT_REPEAT_MON" data-bind="i18n: 'text'"></span> <input type="checkbox" data-bind="checked: weekMO" /> </label> <label data-bind="css: {'checked': weekTU}"> <span class="text" data-i18n="CALENDAR/EVENT_REPEAT_TUE" data-bind="i18n: 'text'"></span> <input type="checkbox" data-bind="checked: weekTU" /> </label> <label data-bind="css: {'checked': weekWE}"> <span class="text" data-i18n="CALENDAR/EVENT_REPEAT_WED" data-bind="i18n: 'text'"></span> <input type="checkbox" data-bind="checked: weekWE" /> </label> <label data-bind="css: {'checked': weekTH}"> <span class="text" data-i18n="CALENDAR/EVENT_REPEAT_THU" data-bind="i18n: 'text'"></span> <input type="checkbox" data-bind="checked: weekTH" /> </label> <label data-bind="css: {'checked': weekFR}"> <span class="text" data-i18n="CALENDAR/EVENT_REPEAT_FRI" data-bind="i18n: 'text'"></span> <input type="checkbox" data-bind="checked: weekFR" /> </label> <label data-bind="css: {'checked': weekSA}"> <span class="text" data-i18n="CALENDAR/EVENT_REPEAT_SAT" data-bind="i18n: 'text'"></span> <input type="checkbox" data-bind="checked: weekSA" /> </label> <label data-bind="css: {'checked': weekSU}"> <span class="text" data-i18n="CALENDAR/EVENT_REPEAT_SUN" data-bind="i18n: 'text'"></span> <input type="checkbox" data-bind="checked: weekSU" /> </label> </span> </span> <span data-bind="visible: repeatPeriod() === 3"> <span class="label" data-i18n="CALENDAR/EVENT_REPEAT_DAYS" data-bind="i18n: 'text'"></span> <span class="value" data-bind="text: monthlyDate()"></span> </span> <span data-bind="visible: repeatPeriod() === 4"> <span class="label" data-i18n="CALENDAR/EVENT_REPEAT_DAYS" data-bind="i18n: 'text'"></span> <span class="value" data-bind="text: yearlyDate()"></span> </span> </div> <div class="row" data-bind="visible: repeatPeriod() == 2"> <span class="label" data-i18n="CALENDAR/EVENT_REPEAT_EVERY" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="options: repeatWeekIntervalOptions, value: repeatInterval"></select> <span class="label" data-i18n="CALENDAR/EVENT_REPEAT_WEEK" data-bind="i18n: 'text'"></span> </div> </div> </div> <span class="form_arrow"></span> </div> </div> </div> <div class="fieldset main"> <div class="row name" data-bind="css: {'focused': subjectFocus(), 'filled': subject().length > 0}"> <label for="event_subject" class="label placeholder" data-i18n="CALENDAR/EVENT_SUBJECT" data-bind="i18n: 'text'"></label> <div class="value scrollable_field" data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <span class="input" data-bind="text: subject, visible: !isEditable()"></span> <textarea id="event_subject" class="input autosize" data-bind="autosize: {minHeight: 40, autosizeTrigger: autosizeTrigger, scrollableHeight: 110}, customBind: {onKeydown: onKeydown, onKeyup: onKeyup, onPaste: onPaste, valueObserver: subject}, value: subject, valueUpdate: 'afterkeydown', hasfocus: subjectFocus, visible: isEditable()"></textarea> </div> </div> </div> <div class="row description" data-bind="css: {'focused': descriptionFocus(), 'filled': description().length > 0}"> <div class="value scrollable_field" data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <label for="event_description" class="label placeholder" data-i18n="CALENDAR/EVENT_DESCRIPTION" data-bind="i18n: 'text'"></label> <span class="input" data-bind="text: description, visible: !isEditable()"></span> <textarea id="event_description" class="input autosize" data-bind="autosize: {minHeight: 26, autosizeTrigger: autosizeTrigger, scrollableHeight: 150}, value: description, valueUpdate: 'afterkeydown', hasfocus: descriptionFocus, visible: isEditable()"></textarea> </div> </div> </div> <div class="row location" data-bind="css: {'focused': locationFocus(), 'filled': (location()) ? location().length : false}"> <div class="value scrollable_field" data-bind="customScrollbar: {x: false}"> <div class="scroll-inner"> <label for="event_location" class="label placeholder" data-i18n="CALENDAR/EVENT_LOCATION" data-bind="i18n: 'text'"></label> <span class="input" data-bind="text: location, visible: !isEditable()"></span> <textarea id="event_location" class="input autosize" data-bind="autosize: {minHeight: 26, autosizeTrigger: autosizeTrigger, scrollableHeight: 74}, customBind: {onKeydown: onKeydown, onKeyup: onKeyup, onPaste: onPaste, valueObserver: location}, value: location, valueUpdate: 'afterkeydown', hasfocus: locationFocus, visible: isEditable()"></textarea> </div> </div> </div> </div> <div class="alarms_helper" data-bind="foreach: displayedAlarms()"> <div></div> </div> <div class="buttons clearfix"> <div class="subforms"> <div class="alarm_form" data-bind="visible: displayedAlarms().length > 0"> <div class="form_content"> <div class="alarms" data-bind="foreach: displayedAlarms()"> <span class="item alarm"> <span class="link remove" data-i18n="CALENDAR/EVENT_REMINDER_REMOVE" data-bind="i18n: 'text', visible: $parent.isEditableReminders(), click: function(oItem) {$parent.removeAlarm(oItem);}"></span> <span data-i18n="CALENDAR/EVENT_REMINDER_ALARM" data-bind="i18n: 'text'"></span> <span class="value" data-bind="text: $data.text, visible: !$parent.isEditableReminders()"></span> <span class="custom_selector" data-bind="visible: $parent.isEditableReminders(), customSelect: {'control': false, 'alarmOptions': $parent.alarmOptions, 'options': $parent.alarmOptions(), value: alarm, optionsText: 'text', optionsValue: 'value'}"> <span class="link value" data-bind="text: $data.text"></span> <span class="dropdown" data-bind="visible: $parent.isEditableReminders()"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> </span> </span> </span> <span data-i18n="CALENDAR/EVENT_REMINDER_BEFORE" data-bind="i18n: 'text'"></span> </span> </span> </div> <span class="link" data-i18n="CALENDAR/EVENT_REMINDER_NEW_ALARM" data-bind="i18n: 'text', click: addAlarm, visible: isEditableReminders() && (displayedAlarms().length < 5)"></span> </div> <span class="form_arrow"></span> </div> </div> <div class="additional_buttons"> <span class="item alarm" data-bind="click: isEditableReminders() ? addFirstAlarm : '', css: {'selected': displayedAlarms().length > 0, 'readonly': !isEditableReminders()}"> <span class="icon" data-i18n="CALENDAR/EVENT_REMINDER" data-bind="i18n: 'title'"></span> <span class="text" data-i18n="CALENDAR/EVENT_REMINDER" data-bind="i18n: 'text'"></span> </span> <span class="item guests" data-bind="visible: calendarAppointments, click: isEditable() ? showGuests : '', css: {'selected': guestsEdit() || attendees().length > 0, 'readonly': !isEditable()}"> <span class="icon" data-i18n="CALENDAR/EVENT_GUESTS" data-bind="i18n: 'title'"></span> <span class="text" data-i18n="CALENDAR/EVENT_GUESTS" data-bind="i18n: 'text'"></span> <span class="arrow"></span> </span> </div> <span class="button save" data-i18n="CALENDAR/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick, visible: isEditable() || isEditableReminders()"></span> <span class="link remove" data-i18n="CALENDAR/LINK_REMOVE" data-bind="i18n: 'text', click: onDeleteClick, visible: isEditForm() && isEditable()"></span> </div> </div> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_Calendar_GetLinkPopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <span class="title" data-bind="style: {backgroundColor: selectedColor}, i18n: 'text'" data-i18n="CALENDAR/TITLE_GETLINK_CALENDAR"></span> <div class="fields"> <div class="fieldset dav_access"> <div class="row"> <label for="dav_url" class="label" data-i18n="CALENDAR/URL_DAV" data-bind="i18n: 'text'"></label> <input id="dav_url" class="value input" spellcheck="false" type="text" maxlength="200" data-bind="value: calendarUrl(), click: function () {$element.select();}" readonly /> </div> <div class="row"> <label for="ics_link" class="label" data-i18n="CALENDAR/URL_ICS" data-bind="i18n: 'text'"></label> <input id="ics_link" class="value input" spellcheck="false" type="text" maxlength="200" data-bind="value: icsLink(), click: function () {$element.select();}"  readonly /> <a class="control download" data-bind="attr: {href: exportUrl()}"></a> </div> </div> <div class="fieldset web_access"> <div class="row web_access_switch"> <label class="custom_checkbox" data-bind="css: {'checked': isPublic}"> <span class="icon"></span> <input type="checkbox" id="make_public_access" data-bind="checked: isPublic(), click: function (){isPublic(!isPublic());}" /> </label> <label for="make_public_access" data-i18n="CALENDAR/LABEL_WEB_ACCESS" data-bind="i18n: 'text'"></label> </div> <div class="row" data-bind="visible: isPublic()"> <label for="public_link" class="label" data-i18n="CALENDAR/LABEL_WEB_LINK" data-bind="i18n: 'text'"></label> <input id="public_link" class="value input" spellcheck="false" type="text" maxlength="200" data-bind="value: pubUrl(), click: function () {$element.select();}" readonly /> </div> </div> <div class="buttons"> <span class="button save" data-i18n="CALENDAR/BUTTON_CLOSE" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> </div> <span class="helper"></span></script><script id="Popups_Calendar_ImportPopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <span class="title" data-bind="style: {backgroundColor: color}"> <span class="text fadeout"> <span data-i18n="CALENDAR/TITLE_IMPORT_CALENDAR" data-bind="i18n: 'text', fade: {color: color}"></span> </span> </span> <div class="fields"> <div class="fieldset"> <div class="hint" data-bind="visible: allowDragNDrop"> <span data-i18n="CALENDAR/HINT_DRAGNDROP_EVENTS" data-bind="i18n: 'text'"></span> </div> <div class="hint"> <span data-i18n="CALENDAR/HINT_IMPORT_CALENDAR" data-bind="i18n: 'text'"></span> </div> <div class="row"> <span data-bind="visible: importing, i18n: 'text'" data-i18n="CONTACTS/IMPORTING"></span> <div class="buttons without_border_top" data-bind="visible: !importing()"> <span id="jue_import_button" class="button import" data-i18n="CONTACTS/BUTTON_IMPORT_CONTACTS" data-bind="i18n: 'text'"></span> </div> </div> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_Calendar_SharePopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <span class="title" data-bind="style: {backgroundColor: selectedColor}, i18n: 'text'" data-i18n="CALENDAR/TITLE_SHARE_CALENDAR"></span> <div class="fields"> <div class="fieldset shares_personal"> <!--h2 class="subtitle" data-i18n="CALENDAR/TITLE_SHARE_THIS_CALENDAR" data-bind="i18n: 'text'"></h2--> <div class="shares_list" data-bind="customScrollbar: {x: false}, visible: (shares().length > 0)"> <div data-bind="foreach: shares()" class="scroll-inner"> <div class="share_item" data-bind="visible: !$parent.itsMe(email)"> <span class="control remove" data-bind="click: function (oItem) {$parent.removeShare(oItem);}"></span> <div class="row" data-bind="css: {'focused': focus, 'filled': (name && name.length > 0)}"> <span class="label" data-bind="css: {'recivedAnim': $parent.recivedAnim() && email === $parent.whomAnimate()}"> <span class="text" data-bind="title: email, text: name, visible: name !== ''"></span> <span class="text" data-bind="text: email, visible: name === ''"></span> </span> <select class="value input" data-bind="value: access, options: $parent.aAccess, optionsText: 'display', optionsValue: 'value'"></select> </div> </div> </div> </div> <div class="share_item"> <span class="control add" data-bind="click: addShare, css: {'disabled': !canAdd()}"></span> <div class="row" data-bind="css: {'focused': newShareFocus(), 'filled': (newShare()) ? newShare().length : false}"> <div class="label"> <label for="shared_item_input" class="label placeholder" style="top: 5px;" data-i18n="CALENDAR/LABEL_WEB_EMAIL_OR_NAME" data-bind="i18n: 'text'"></label> <input id="shared_item_input" class="value input" spellcheck="false" type="text" autocomplete="off" maxlength="200" data-bind="value: newShare, valueUpdate: ['blur', 'afterkeydown'], autocompleteSimple: {callback: autocompleteCallbackBinded, dataAccessor: shareAutocompleteItem}, hasfocus: newShareFocus" /> </div> <select class="value input" data-bind="value: newShareAccess, options: aAccess, optionsText: 'display', optionsValue: 'value'"></select> </div> </div> </div> <div class="fieldset shares_all" data-bind="visible: showGlobalContacts"> <div class="row"> <div class="label"> <label class="custom_checkbox" data-bind="css: {'checked': sharedToAll()}"> <span class="icon"></span> <input type="checkbox" id="share_to_all_item_input" data-bind="checked: sharedToAll" /> </label> <span> <label for="share_to_all_item_input" data-i18n="CALENDAR/TITLE_SHARE_WITH_ALL_CALENDARS" data-bind="i18n: 'text'"></label> </span> </div> <select class="value input" data-bind="visible: sharedToAll, value: sharedToAllAccess, options: aAccess, optionsText: 'display', optionsValue: 'value'"></select> </div> <div class="row"> <span class="hint" data-i18n="CALENDAR/TITLE_DESCRIPTION_SHARED_WITH_ALL_CALENDARS" data-bind="visible: sharedToAll, i18n: 'text'"></span> </div> </div> <div class="buttons"> <span class="button save" data-i18n="CALENDAR/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick"></span> </div> </div> </div> <span class="helper"></span></script><script id="Popups_FileStorage_FileStoragePopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <div class="panels"> <div class="panel storages"> <div class="panel_content"> <div class="middle_bar" data-bind="template: {name: 'FileStorage_StorageList', data: fileStorageViewModel}"></div> </div> </div> <div class="panel files"> <div class="panel_content"> <div class="middle_bar" data-bind="template: {name: 'FileStorage_FileList', data: fileStorageViewModel}"></div> </div> </div> </div> <div class="buttons"> <span class="button save" data-i18n="FILESTORAGE/BUTTON_SELECT" data-bind="i18n: 'text', click: onSelectClick"></span> <span class="button save" data-i18n="FILESTORAGE/BUTTON_CLOSE" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> <span class="helper"></span> </script><script id="Popups_FileStorage_FolderCreatePopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <div class="fields"> <div class="fieldset"> <div class="row"> <span class="label" data-i18n="FILESTORAGE/NEW_FOLDER" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="200" data-bind="hasfocus: folderNameFocus, value: folderName, onEnter: onOKClick" /> </div> </div> <div class="buttons"> <span class="button save" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onOKClick"></span> <span class="button cancel" data-i18n="SETTINGS/BUTTON_CANCEL" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_FileStorage_LinkCreatePopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <div class="large attachments" data-bind="visible: urlChecked()" style="text-align: center;"> <!-- ko template: {name: 'Common_FileViewModel', data: fileItem} --><!-- /ko --> </div> <div class="fields"> <div class="fieldset"> <div class="row"> <span class="label" data-i18n="FILESTORAGE/LABEL_UPLOAD_FILE_AS_LINK" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="200" data-bind="valueUpdate: 'afterkeydown', hasfocus: linkFocus, value: link" /> </div> <div class="hint row"> <span class="info" data-i18n="FILESTORAGE/INFO_UPLOAD_FILE_AS_LINK" data-bind="i18n: 'text'"></span> </div> </div> <div class="buttons"> <span class="button save" data-i18n="SETTINGS/BUTTON_ADD_SHORTCUT" data-bind="css: {'disabled': !urlChecked()}, i18n: 'text', command: saveCommand"></span> <span class="button cancel" data-i18n="SETTINGS/BUTTON_CANCEL" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_FileStorage_RenamePopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onCancelClick"></span> <div class="fields"> <div class="fieldset"> <div class="row"> <span class="label" data-i18n="FILESTORAGE/NAME" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="200" data-bind="hasfocus: nameFocus, value: name, onEnter: onOKClick" /> </div> </div> <div class="buttons"> <span class="button save" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onOKClick"></span> <span class="button cancel" data-i18n="SETTINGS/BUTTON_CANCEL" data-bind="i18n: 'text', click: onCancelClick"></span> </div> </div> </div> <span class="helper"></span> </script><script id="Popups_FileStorage_SharePopupViewModel" type="text/html"><div class="mask" data-bind="click: onCancelSharingClick"></div> <div class="popup_panel"> <span class="close" data-bind="click: onOKClick"></span> <div class="fields"> <div class="fieldset"> <div class="row"> <span class="label" data-i18n="FILESTORAGE/LINK" data-bind="i18n: 'text'"></span> <input readonly="readonly" spellcheck="false" class="value input" type="text" maxlength="255" data-bind="hasfocus: pubFocus, value: pub, click: function () {$element.select();}, onEnter: onOKClick" /> </div> </div> <div class="buttons"> <span class="button save" data-i18n="FILESTORAGE/BUTTON_CLOSE" data-bind="i18n: 'text', click: onOKClick"></span> <span class="button save" data-i18n="FILESTORAGE/BUTTON_CANCEL_SHARING" data-bind="i18n: 'text', click: onCancelSharingClick"></span> </div> </div> </div> <span class="helper"></span> </script><script id="Settings_AccountAutoresponderViewModel" type="text/html"><div class="fields"> <div class="fieldset"> <div data-bind="visible: available"> <div class="row enable"> <div> <label class="custom_checkbox" data-bind="css: {'checked': enable}"> <span class="icon"></span> <input type="checkbox" id="enable_ar" data-bind="checked: enable" /> </label> <label for="enable_ar" data-i18n="SETTINGS/ACCOUNT_AUTORESPONDER_ENABLE" data-bind="i18n: 'text'"></label> </div> </div> <div class="row subject"> <span class="label" data-i18n="SETTINGS/ACCOUNT_AUTORESPONDER_SUBJECT" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" data-bind="value: subject, disable: !enable()" /> </div> <div class="row message"> <span class="label" data-i18n="SETTINGS/ACCOUNT_AUTORESPONDER_MESSAGE" data-bind="i18n: 'text'"></span> <textarea class="input" data-bind="value: message, disable: !enable()"></textarea> </div> </div> </div> <div class="buttons" data-bind="visible: available"> <span class="button" data-bind="click: onSaveClick"> <span data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', visible: !loading()"></span> <span data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> </span> </div> </div></script><script id="Settings_AccountFilterPartAction" type="text/html"><span class="part field" data-bind="customSelect: {'control': false, 'options': $parents[1].actionOptions, value: $parent.action, optionsText: 'text', optionsValue: 'value'}"> <span class="link"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> </span> </span> </span> </span> <!--<select class="input" data-bind="value: $parent.action, options: $parents[1].actionOptions, optionsText: 'text', optionsValue: 'value'"> </select>--></script><script id="Settings_AccountFilterPartCondition" type="text/html"><span class="part field" data-bind="customSelect: {'control': false, 'options': $parents[1].conditionOptions, value: $parent.condition, optionsText: 'text', optionsValue: 'value'}"> <span class="link"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> </span> </span> </span> </span> <!--<select class="input" data-bind="value: $parent.condition, options: $parents[1].conditionOptions, optionsText: 'text', optionsValue: 'value'"> </select>--> </script><script id="Settings_AccountFilterPartDependedText" type="text/html"> <span class="part" data-bind="text: $parents[1].getDependedText($data), visible: $parents[1].getDependedField($data, $parent) !== 1"></span> </script><script id="Settings_AccountFilterPartField" type="text/html"><span class="part field" data-bind="customSelect: {'control': false, 'options': $parents[1].fieldOptions, value: $parent.field, optionsText: 'text', optionsValue: 'value'}"> <span class="link"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content"> </span> </span> </span> </span> <!--<select class="input" data-bind="value: $parent.field, options: $parents[1].fieldOptions, optionsText: 'text', optionsValue: 'value'"> </select>--> </script><script id="Settings_AccountFilterPartFolder" type="text/html"><span class="part field" data-bind="visible: $parent.action() !== 1, moveToFolderFilter: {'options': $parents[1].foldersOptions, value: $parent.folder, optionsText: 'displayName', optionsValue: 'id', container: '.scroll-inner'}"> <span class="link"></span> <span class="dropdown"> <span class="dropdown_helper"> <span class="dropdown_arrow"><span></span></span> <span class="dropdown_content" data-bind="customScrollbar: {x: false}"> <span class="scroll-inner"></span> </span> </span> </span> </span> </script><script id="Settings_AccountFilterPartString" type="text/html"><input type="text" spellcheck="false" class="part input" data-bind="value: $parent.filter" />  </script><script id="Settings_AccountFilterPartText" type="text/html"> <span class="part" data-bind="text: $data"></span>  </script><script id="Settings_AccountFiltersViewModel" type="text/html"><div class="fields"> <div class="fieldset"> <div data-bind="visible: available"> <div class="hint" data-i18n="SETTINGS/ACCOUNT_FILTERS_NO_SPECIFIED" data-bind="i18n: 'text', visible: (0 === collection().length && !loading())"></div> <!-- ko foreach: collection --> <div class="row filter"> <div class="value"> <span class="buttons"><span class="button" data-i18n="SETTINGS/ACCOUNT_FILTERS_REMOVE" data-bind="i18n: 'text', click: function (oFilter) { $parent.deleteFilter(oFilter); }"></span></span> <div> <label class="custom_checkbox" data-bind="css: {'checked': enable}"> <span class="icon"></span> <input type="checkbox" data-bind="checked: enable" /> </label> <!-- ko foreach: $parent.phaseArray --> <!-- ko template: {name: function () { return $parents[1].displayFilterPart($data, 'Settings_AccountFilterPart'); } } --><!-- /ko --> <!-- /ko --> </div> </div> </div> <!-- /ko --> </div> </div> <div class="buttons" data-bind="visible: available() && !loading()"> <span class="button addlink" data-i18n="SETTINGS/ACCOUNT_FILTERS_ADD" data-bind="i18n: 'text', click: addFilter"></span> <span class="button save" data-bind="click: onSaveClick"> <span data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', visible: !saving()"></span> <span data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: saving()"></span> </span> </div> </div> </script><script id="Settings_AccountFolderItem" type="text/html"><div class="item canSelect" data-bind="css: {'canSubscribe': canSubscribe, 'canRename': canRename, 'canDelete': canDelete},  visible: !virtual()"> <span class="title"> <span class="controls"> <span class="button subscribe" data-bind="title: subscribeButtonHint, css: {'subscribed': subscribed(), 'disabled': !canSubscribe()}, click: function(oFolder) { $root.onSubscribeFolderClick(oFolder); }"></span> <span class="button disabled"  data-bind="title: deleteButtonHint, css: {'delete': !isSystem() && selectable(), 'disabled': !canDelete()}, click: function(oFolder) { $root.onDeleteFolderClick(oFolder, $parent); }"></span> <span class="button up" data-bind="   visible: $root.allowFolderListOrder(),   css: {'disabled': !$root.canMoveFolderUp($data, $index(), $parent)},    click: function (oFolder) { $root.moveFolderUp(oFolder, $index(), $parent); }"></span> <span class="button down" data-bind="   visible: $root.allowFolderListOrder(),   css: {'disabled': !$root.canMoveFolderDown($data, $index(), $parent)},    click: function (oFolder) { $root.moveFolderDown(oFolder, $index(), $parent); }"></span> </span> <span class="count" data-bind="text: messageCount"></span> <span class="name"> <span class="icon" data-bind="css: 'type' + type()"></span> <span class="text" data-bind="css: {'link': canRename}, text: name, visible: !edited(), click: function(){if (canRename()) edited(true);}"></span> <input type="text" spellcheck="false" class="input" maxlength="30" data-bind="value: nameForEdit, visible: edited, hasfocus: edited, onEnter: function (oFolder) { $root.folderEditOnEnter(oFolder); }, onEsc: function (oFolder) { $root.folderEditOnEsc(oFolder); }"> <span class="text" data-bind="text: usedAs()"></span> </span> </span> <div class="children" data-bind="template: { name: 'Settings_AccountFolderItem', foreach: subfolders }"></div> </div> </script><script id="Settings_AccountFolderItemMovedWithMouse" type="text/html"><span class="title" data-bind="css: {'cannotDrag': $parent.subfolders && $parent.subfolders().length === 1}"> <span class="controls"> <span class="button subscribe" data-bind="title: subscribeButtonHint, css: {'subscribed': subscribed(), 'disabled': !canSubscribe()}, click: function(oFolder) { $root.onSubscribeFolderClick(oFolder); }"></span> <span class="button disabled" data-bind="title: deleteButtonHint, css: {'delete': !isSystem() && selectable(), 'disabled': !canDelete()}, click: function(oFolder) { $root.onDeleteFolderClick(oFolder, $parent); }"></span> </span> <span class="count" data-bind="text: messageCount"></span> <span class="name"> <span class="icon" data-bind="css: 'type' + type()"></span> <span class="text" data-bind="css: {'link': canRename}, text: name, visible: !edited(), click: function(){if (canRename()) edited(true);}"></span> <input type="text" spellcheck="false" class="input" maxlength="30" data-bind="value: nameForEdit, visible: edited, hasfocus: edited, onEnter: function (oFolder) { $root.folderEditOnEnter(oFolder); }, onEsc: function (oFolder) { $root.folderEditOnEsc(oFolder); }"> <span class="text" data-bind="text: usedAs()"></span> </span> </span> <!-- ko if: subfolders().length > 0 --> <div class="children" data-bind="sortable: {data: subfolders, connectClass: fullNameHash(),   afterMove: $root.afterSortableFolderMoveBinded, options: {axis: 'y', revert: true}}"> <div class="item canSelect canDrag" data-bind="visible: !virtual(), template: { name: 'Settings_AccountFolderItemMovedWithMouse'},  css: {'canSubscribe': canSubscribe, 'canRename': canRename, 'canDelete': canDelete}"></div> </div> <!-- /ko --> </script><script id="Settings_AccountFoldersViewModel" type="text/html"><div class="fields"> <div class="fieldset"> <div class="folders items_list"> <!-- ko if: !showMovedWithMouseItem() --> <!-- ko template: {name: 'Settings_AccountFolderItem', foreach: collection} --><!-- /ko --> <!-- /ko --> <!-- ko if: showMovedWithMouseItem() --> <div data-bind="sortable: {data: collection, connectClass: 'first_sortable_container',   afterMove: $root.afterSortableFolderMoveBinded, options: {axis: 'y', revert: true}}"> <div class="item canSelect canDrag" data-bind="visible: !virtual(),   template: { name: 'Settings_AccountFolderItemMovedWithMouse'},  css: {'canSubscribe': canSubscribe, 'canRename': canRename, 'canDelete': canDelete}"></div> </div> <!-- /ko --> <div class="item canSelect total"> <span class="title"> <span class="count" data-bind="text: totalMessageCount"></span> <span class="name"> <span class="text" data-i18n="SETTINGS/ACCOUNT_FOLDERS_TOTAL" data-bind="i18n: 'text'"></span> </span> </span> </div> </div> <div class="hint" data-i18n="SETTINGS/ACCOUNT_FOLDERS_INFO_DELETING_NONEMPTY_FOLDERS" data-bind="i18n: 'text', css: {'highlight': highlighted}"></div> <div class="hint" data-i18n="SETTINGS/ACCOUNT_FOLDERS_INFO_SETUP_SPECIAL_FOLDERS" data-bind="i18n: 'text'"></div> <div class="buttons"> <span class="button" data-i18n="SETTINGS/ACCOUNT_FOLDERS_BUTTON_ADD_NEW_FOLDER" data-bind="i18n: 'text', command: addNewFolderCommand"></span> <span class="button" data-i18n="SETTINGS/ACCOUNT_FOLDERS_BUTTON_SETUP_SPECIAL_FOLDERS" data-bind="i18n: 'text', command: systemFoldersCommand"></span> </div> </div> </div> </script><script id="Settings_AccountForwardViewModel" type="text/html"><div class="fields"> <div class="fieldset"> <div data-bind="visible: available"> <div class="row"> <div> <label class="custom_checkbox" data-bind="css: {'checked': enable}"> <span class="icon"></span> <input type="checkbox" id="enable_fwd" data-bind="checked: enable" /> </label> <label for="enable_fwd" data-i18n="SETTINGS/ACCOUNT_FORWARD_ENABLE" data-bind="i18n: 'text'"></label> </div> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/ACCOUNT_FORWARD_EMAIL" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" data-bind="value: email, disable: !enable(), hasfocus: emailFocus" /> </div> </div> </div> <div class="buttons" data-bind="visible: available"> <span class="button" data-bind="click: onSaveClick"> <span data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', visible: !loading()"></span> <span data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> </span> </div> </div></script><script id="Settings_AccountPropertiesViewModel" type="text/html"><div class="fields"> <div class="fieldset"> <div class="row"> <span class="label" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_YOUR_NAME" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="65" data-bind="value: friendlyName, onEnter: onSaveClick"/> </div> <div class="row" data-bind="visible: !isDefault() || (!isLinked() && allowUsersChangeEmailSettings)"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_INCOMING_MAIL" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="255" data-bind="value: incomingMailServer, onEnter: onSaveClick"/> <span class="label required" style="width: auto; margin-left: 10px;" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PORT" data-bind="i18n: 'text'"></span> <input class="value input port" spellcheck="false" type="text" maxlength="5" data-bind="value: incomingMailPort, onEnter: onSaveClick"/> </div> <div class="row" data-bind="visible: !isDefault() || (!isLinked() && allowUsersChangeEmailSettings)"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_LOGIN" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="255" data-bind="value: incomingMailLogin, hasfocus: incLoginFocused, onEnter: onSaveClick"/> </div> <div class="row" data-bind="visible: !isDefault() || (!isLinked() && allowUsersChangeEmailSettings)"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PASSWORD" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="password" maxlength="255" data-bind="value: incomingMailPassword, onEnter: onSaveClick"/> </div> <div class="row" data-bind="visible: !isDefault() || (!isLinked() && allowUsersChangeEmailSettings)"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_OUTGOING_MAIL" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="255"  data-bind="value: outgoingMailServer, hasfocus: outServerFocused, onEnter: onSaveClick"/> <span class="label required" style="width: auto; margin-left: 10px;" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PORT" data-bind="i18n: 'text'"></span> <input  class="value input port" spellcheck="false" type="text" maxlength="5"  data-bind="value: outgoingMailPort, onEnter: onSaveClick"/> </div> <div class="row" data-bind="visible: !isDefault() || (!isLinked() && allowUsersChangeEmailSettings)"> <div> <label class="custom_checkbox" data-bind="css: {'checked': useSmtpAuthentication}"> <span class="icon"></span> <input type="checkbox" id="mail_out_auth" data-bind="checked: useSmtpAuthentication" /> </label> <label for="mail_out_auth" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_USE_SMTP_AUTHENTICATION" data-bind="i18n: 'text'"></label> </div> </div> <div class="buttons" data-bind="visible: allowChangePassword" style="text-align: left;"> <span class="button" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_CHANGE_PASSWORD" data-bind="i18n: 'text', click: onChangePasswordClick"></span> </div> <div class="row remove_account" data-bind="visible: !isInternal() && allowUsersChangeEmailSettings"> <span class="link" data-i18n="SETTINGS/ACCOUNTS_LINK_DELETE"     data-bind="i18n: 'text', click: function () { $parent.onEditedAccountDelete() }"> </span> </div> <div class="hint" data-bind="visible: !isInternal() && allowUsersChangeEmailSettings"> <span data-bind="text: removeHint"></span> </div> <!--<div class="row" data-bind="visible: useSmtpAuthentication()"> <span class="label" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_NEW_PASSWORD" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="255" data-bind="value: outgoingMailLogin"/> </div> <div class="row" data-bind="visible: useSmtpAuthentication()"> <span class="label" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PASSWORD" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="password" maxlength="255" /> </div>--> </div> <div class="buttons"> <span class="button" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick, visible: !loading()"></span> <span class="button" data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', click: onSaveClick, visible: loading()"></span> </div> </div></script><script id="Settings_AccountSignatureViewModel" type="text/html"><!-- Attention! This template is used with view models  CAccountSignatureViewModel, CFetcherSignatureViewModel and CIdentityPropertiesViewModel. --> <div class="fields"> <div class="fieldset"> <div class="row"> <div> <label class="custom_radio" data-bind="css: {'checked': useSignature() == 0}"> <span class="icon"></span> <input type="radio" value="0" data-bind="checked: useSignature, attr: {'id': 'noSignature' + __name}" /> </label> <label data-i18n="SETTINGS/ACCOUNT_SIGNATURE_NO_SIGNATURE" data-bind="i18n: 'text', attr: {'for': 'noSignature' + __name}"></label> </div> </div> <div class="row editor_row"> <label class="custom_radio" data-bind="css: {'checked': useSignature() == 1}"> <span class="icon"></span> <input type="radio" id="useSignature" value="1" data-bind="checked: useSignature, enable: enabled" /> </label> <div class="editor" data-bind="template: {name: 'Common_HtmlEditorViewModel', data: oHtmlEditor}"></div> </div> <div class="hint" data-i18n="HTMLEDITOR/UPLOAD_HINT_IMAGE_DRAGNDROP" data-bind="visible: enableImageDragNDrop, i18n: 'text'"></div> </div> <div class="buttons"> <span class="button" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick, visible: !loading()"></span> <span class="button" data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> </div> </div></script><script id="Settings_CalendarSettingsViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-i18n="SETTINGS/TITLE_CALENDAR" data-bind="i18n: 'text'"></h2> </div> <div class="panel_center"> <div class="fields"> <div class="fieldset"> <div class="row workday"> <span class="label" data-i18n="SETTINGS/CALENDAR_WORKDAY_STARTS" data-bind="i18n: 'text'"></span> <span class="value"> <select class="input start" data-bind="value: selectedWorkdayStarts, options: availableTimes, optionsText: 'text', optionsValue: 'value'"></select> <span data-i18n="SETTINGS/CALENDAR_WORKDAY_ENDS" data-bind="i18n: 'text'"></span> <select class="input end" data-bind="value: selectedWorkdayEnds, options: availableTimes, optionsText: 'text', optionsValue: 'value'"></select> </span> </div> <div class="row"> <span class="label"></span> <span class="value"> <label class="custom_checkbox" data-bind="css: {'checked': showWorkday}"> <span class="icon"></span> <input type="checkbox" id="showWorkday" data-bind="checked: showWorkday" /> </label> <label for="showWorkday" data-i18n="SETTINGS/CALENDAR_SHOW_WORKDAY" data-bind="i18n: 'text'"></label> </span> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/CALENDAR_WEEK_STARTS_ON" data-bind="i18n: 'text'"></span> <span class="value"> <select class="input" data-bind="value: weekStartsOn"> <option value="6" data-i18n="DATETIME/SATURDAY" data-bind="i18n: 'text'"></option> <option value="0" data-i18n="DATETIME/SUNDAY" data-bind="i18n: 'text'"></option> <option value="1" data-i18n="DATETIME/MONDAY" data-bind="i18n: 'text'"></option> </select> </span> </div> <div class="row"> <span class="label"></span> <span class="value"> <label class="custom_checkbox" data-bind="css: {'checked': showWeekends}"> <span class="icon"></span> <input type="checkbox" id="showWeekends" data-bind="checked: showWeekends" /> </label> <label for="showWeekends" data-i18n="SETTINGS/CALENDAR_SHOW_WEEKENDS" data-bind="i18n: 'text'"></label> </span> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/CALENDAR_DEFAULT_TAB" data-bind="i18n: 'text'"></span> <span class="value"> <label class="custom_radio" data-bind="css: {'checked': defaultTab() == Enums.CalendarDefaultTab.Day}"> <span class="icon"></span> <input type="radio" id="tab_day" data-bind="checked: defaultTab, attr: {'value': Enums.CalendarDefaultTab.Day}" /> </label> <label for="tab_day" data-i18n="DATETIME/DAY" data-bind="i18n: 'text'"></label> <label class="custom_radio" data-bind="css: {'checked': defaultTab() == Enums.CalendarDefaultTab.Week}"> <span class="icon"></span> <input type="radio" id="tab_week" data-bind="checked: defaultTab, attr: {'value': Enums.CalendarDefaultTab.Week}" /> </label> <label for="tab_week" data-i18n="DATETIME/WEEK" data-bind="i18n: 'text'"></label> <label class="custom_radio" data-bind="css: {'checked': defaultTab() == Enums.CalendarDefaultTab.Month}"> <span class="icon"></span> <input type="radio" id="tab_month" data-bind="checked: defaultTab, attr: {'value': Enums.CalendarDefaultTab.Month}" /> </label> <label for="tab_month" data-i18n="DATETIME/MONTH" data-bind="i18n: 'text'"></label> </span> </div> </div> <div class="buttons"> <span class="button" data-bind="click: onSaveClick"> <span data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', visible: !loading()"></span> <span data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> </span> </div> </div> </div> <!--<table class=""> <tbody> <tr class="wm_hide"> <td data-i18n="SETTINGS/CALENDAR_COUNTRY" data-bind="i18n: 'text'"></td> <td> <select style="width: 300px;"></select> </td> </tr> <tr class="wm_hide"> <td data-i18n="SETTINGS/CALENDAR_TIME_ZONE" data-bind="i18n: 'text'"></td> <td></td> </tr> <tr class="wm_hide"> <td></td> <td> <input type="checkbox" class="wm_checkbox" name="_AllTimeZones" id="AllTimeZones" value="0" /> <label for="AllTimeZones" data-i18n="SETTINGS/CALENDAR_ALL_TIME_ZONES" data-bind="i18n: 'text'"></label> </td> </tr> <tr class="wm_hide"> <td></td> <td> <input type="checkbox" class="wm_checkbox" name="autoAddInvitation" id="autoAddInvitation" value="0" /> <label for="autoAddInvitation" data-i18n="SETTINGS/CALENDAR_AUTOADD_INVITATIONS" data-bind="i18n: 'text'"></label> </td> </tr> </tbody> </table> --> </script><script id="Settings_CommonSettingsViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-i18n="SETTINGS/TITLE_COMMON" data-bind="i18n: 'text'"></h2> </div> <div class="panel_center"> <div class="fields"> <div class="fieldset"> <div class="row" data-bind="visible: aSkins.length > 1"> <span class="label" data-i18n="SETTINGS/COMMON_SKIN" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: selectedSkin, options: aSkins"></select> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/COMMON_LANGUAGE" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: selectedLanguage, options: aLanguages, optionsText: 'name', optionsValue: 'value'"></select> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/COMMON_MESSAGES_PER_PAGE" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="options: messagesPerPageValues, value: messagesPerPage"></select> </div> <div class="row" data-bind="visible: bAllowContacts"> <span class="label" data-i18n="SETTINGS/COMMON_CONTACTS_PER_PAGE" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="options: contactsPerPageValues, value: contactsPerPage"></select> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/COMMON_AUTOCHECKMAIL_EVERY" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: autocheckmailInterval"> <option value="0" data-i18n="SETTINGS/COMMON_AUTOCHECKMAIL_OFF" data-bind="i18n: 'text'"></option> <option value="1" data-i18n="SETTINGS/COMMON_AUTOCHECKMAIL_1" data-bind="i18n: 'text'"></option> <option value="3" data-i18n="SETTINGS/COMMON_AUTOCHECKMAIL_3" data-bind="i18n: 'text'"></option> <option value="5" data-i18n="SETTINGS/COMMON_AUTOCHECKMAIL_5" data-bind="i18n: 'text'"></option> <option value="10" data-i18n="SETTINGS/COMMON_AUTOCHECKMAIL_10" data-bind="i18n: 'text'"></option> <option value="15" data-i18n="SETTINGS/COMMON_AUTOCHECKMAIL_15" data-bind="i18n: 'text'"></option> <option value="20" data-i18n="SETTINGS/COMMON_AUTOCHECKMAIL_20" data-bind="i18n: 'text'"></option> <option value="30" data-i18n="SETTINGS/COMMON_AUTOCHECKMAIL_30" data-bind="i18n: 'text'"></option> </select> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/COMMON_TIME_FORMAT" data-bind="i18n: 'text'"></span> <span class="value"> <label class="custom_radio" data-bind="css: {'checked': timeFormat() === Enums.TimeFormat.F12}"> <span class="icon"></span> <input type="radio" id="timeformat_12" data-bind="checked: timeFormat, attr: {'value': Enums.TimeFormat.F12}" /> </label> <label for="timeformat_12" data-i18n="SETTINGS/COMMON_TIME_FORMAT_12" data-bind="i18n: 'text'"></label> <label class="custom_radio" data-bind="css: {'checked': timeFormat() === Enums.TimeFormat.F24}"> <span class="icon"></span> <input type="radio" id="timeformat_24" data-bind="checked: timeFormat, attr: {'value': Enums.TimeFormat.F24}" /> </label> <label for="timeformat_24" data-i18n="SETTINGS/COMMON_TIME_FORMAT_24" data-bind="i18n: 'text'"></label> </span> </div> <div class="row" data-bind="visible: bAllowCalendar"> <span class="label" data-i18n="SETTINGS/COMMON_DATE_FORMAT" data-bind="i18n: 'text'"></span> <select class="value input" data-bind="value: dateFormat, options: aDateFormats, optionsText: 'name', optionsValue: 'value'"></select> </div> <div class="row" data-bind="visible: bAllowThreads"> <span class="value offset"> <label class="custom_checkbox" data-bind="css: {'checked': useThreads}"> <span class="icon"></span> <input type="checkbox" id="useThreads" data-bind="checked: useThreads" /> </label> <label for="useThreads" data-i18n="SETTINGS/COMMON_USE_THREADING" data-bind="i18n: 'text'"></label> </span> </div> <div class="row"> <span class="value offset"> <label class="custom_checkbox" data-bind="css: {'checked': saveRepliedToCurrFolder}"> <span class="icon"></span> <input type="checkbox" id="saveRepliedToCurrFolder" data-bind="checked: saveRepliedToCurrFolder" /> </label> <label for="saveRepliedToCurrFolder" data-i18n="SETTINGS/COMMON_SAVE_REPLIED_TO_CURR_FOLDER" data-bind="i18n: 'text'"></label> </span> </div> <div class="hint row"> <span class="value offset" data-bind="i18n: 'text'" data-i18n="SETTINGS/COMMON_SAVE_REPLIED_TO_CURR_FOLDER_HINT"></span> </div> <div class="row" data-bind="visible: window.Notification"> <span class="value offset" data-bind="css: {'disabled': !desktopNotificationsIsEnable()}"> <label class="custom_checkbox" data-bind="css: {'checked': desktopNotifications}"> <span class="icon"></span> <input type="checkbox" id="desktopNotifications" data-bind="checked: desktopNotifications, enable: desktopNotificationsIsEnable()" /> </label> <label for="desktopNotifications" data-i18n="NOTIFICATION/ENABLE" data-bind="i18n: 'text'"></label> </span> </div> <div class="hint row" data-bind="visible: !desktopNotificationsIsEnable()"> <span class="value offset" data-bind="i18n: 'text'" data-i18n="NOTIFICATION/DISABLED"></span> </div> <div class="row" data-bind="visible: isRtl"> <span class="value offset"> <label class="custom_checkbox" data-bind="css: {'checked': allowChangeInputDirection}"> <span class="icon"></span> <input type="checkbox" id="allowChangeInputDirection" data-bind="checked: allowChangeInputDirection" /> </label> <label for="allowChangeInputDirection" data-i18n="SETTINGS/COMMON_SHOW_INPUT_DIRECTION_BUTTONS" data-bind="i18n: 'text'"></label> </span> </div> <div class="hint row" data-bind="visible: isRtl"> <span class="value offset" data-bind="i18n: 'text'" data-i18n="SETTINGS/COMMON_SHOW_INPUT_DIRECTION_BUTTONS_HINT"></span> </div> </div> <div class="buttons"> <span class="button" data-bind="click: onSaveClick"> <span data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', visible: !loading()"></span> <span data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> </span> </div> </div> </div></script><script id="Settings_EmailAccountsSettingsViewModel" type="text/html"><div class="panel_top"> <div class="buttons" data-bind="visible: allowUsersAddNewAccounts"> <span class="button special add_new_account" data-i18n="SETTINGS/ACCOUNTS_BUTTON_ADD_NEW_ACCOUNT" data-bind="i18n: 'text', click: onAccountAdd"></span> </div> <h2 class="title" data-bind="text: title"></h2> </div> <div class="panel_center"> <div> <div class="items_list accounts_list"> <div data-bind="foreach: accounts"> <div class="item account" data-bind="css: {'selected': id() === $parent.editedAccountId() && !$parent.editedFetcherId() && !$parent.editedIdentityId()},  click: function () {$parent.changeAccount(id());}"> <span class="link fetcher" data-i18n="SETTINGS/ACCOUNTS_LINK_ADD_IDENTITY" data-bind="i18n: 'text', visible: $parent.isAllowIdentities, click: function (oModel, oEv) {$parent.onIdentityAdd(id(), oEv);}"></span> <span class="link fetcher" data-i18n="SETTINGS/ACCOUNTS_LINK_ADD_FETCHER" data-bind="i18n: 'text', visible: (isDefault() && $parent.isAllowFetcher), click: $parent.onFetcherAdd"></span> <span class="title" data-bind="text: email()"></span> </div> <!-- ko if: fetchers() --> <!-- ko foreach: fetchers().collection --> <div class="item fetcher" data-bind="css: {'selected': id() === $parents[1].editedFetcherId()}, click: function () {$parents[1].onChangeFetcher($data.id());}"> <span class="icon"></span> <span class="label" data-i18n="SETTINGS/ACCOUNT_FETCHER_FETCH_FROM" data-bind="i18n: 'text'"></span> <span class="title" data-bind="text: incomingMailServer() + ' / ' + incomingMailLogin()"></span> <span class="info" data-i18n="SETTINGS/ACCOUNT_FETCHER_FETCHING" data-bind="i18n: 'text', visible: isLocked()"></span> </div> <!-- /ko --> <!-- /ko --> <!-- ko if: identities --> <!-- ko foreach: identities --> <div class="item fetcher" data-bind="css: {'selected': id() === $parents[1].editedIdentityId()}, click: function () {$parents[1].onChangeIdentity($data);}"> <span class="icon"></span> <span class="label" data-i18n="SETTINGS/ACCOUNTS_IDENTITY_TEXT" data-bind="i18n: 'text'"></span> <span class="title" data-bind="text: fullEmail"></span> </div> <!-- /ko --> <!-- /ko --> </div> </div> <div class="tabs"> <div class="shortcuts"> <div data-bind="visible: !editedFetcherId() && !editedIdentityId()"> <span class="item properties" data-bind="css: {'selected': tab() === Enums.AccountSettingsTab.Properties}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNTS_TAB_PROPERTIES"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.Properties);}"></a> </span> <span class="item folders" data-bind="css: {'selected': tab() === Enums.AccountSettingsTab.Folders}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNTS_TAB_MANAGE_FOLDERS"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.Folders);}"></a> </span> <span class="item forward" data-bind="visible: allowForwardExtension, css: {'selected': tab() === Enums.AccountSettingsTab.Forward}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNTS_TAB_FORWARD"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.Forward);}"></a> </span> <span class="item autoresponder" data-bind="visible: allowAutoresponderExtension, css: {'selected': tab() === Enums.AccountSettingsTab.Autoresponder}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNTS_TAB_AUTORESPONDER"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.Autoresponder);}"></a> </span> <span class="item filters" data-bind="visible: allowSieveFiltersExtension, css: {'selected': tab() === Enums.AccountSettingsTab.Filters}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNTS_TAB_FILTERS"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.Filters);}"></a> </span> <span class="item signature" data-bind="css: {'selected': tab() === Enums.AccountSettingsTab.Signature}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNTS_TAB_SIGNATURE"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.Signature);}"></a> </span> </div> <div data-bind="visible: editedFetcherId()"> <span class="item pop3" data-bind="css: {'selected': tab() === Enums.AccountSettingsTab.FetcherInc}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNT_FETCHER_INCOMING_SETTINGS"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.FetcherInc);}"></a> </span> <span class="item smtp" data-bind="css: {'selected': tab() === Enums.AccountSettingsTab.FetcherOut}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNT_FETCHER_OUTGOING_SETTINGS"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.FetcherOut);}"></a> </span> <span class="item signature" data-bind="css: {'selected': tab() === Enums.AccountSettingsTab.FetcherSig}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNTS_TAB_SIGNATURE"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.FetcherSig);}"></a> </span> </div> <div data-bind="visible: editedIdentityId()"> <span class="item properties" data-bind="css: {'selected': tab() === Enums.AccountSettingsTab.IdentityProperties}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNTS_TAB_PROPERTIES"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.IdentityProperties);}"></a> </span> <span class="item signature" data-bind="css: {'selected': tab() === Enums.AccountSettingsTab.IdentitySignature}"> <a href="javascript: void(0);" data-i18n="SETTINGS/ACCOUNTS_TAB_SIGNATURE"    data-bind="i18n: 'text', click: function () {onTabClick(Enums.AccountSettingsTab.IdentitySignature);}"></a> </span> </div> </div> <div class="tabs_container"> <div class="tab properties" data-bind="visible: tab() === Enums.AccountSettingsTab.Properties"> <div data-bind="template: {name: 'Settings_AccountPropertiesViewModel', data: oAccountProperties}"></div> </div> <div class="tab signature" data-bind="visible: tab() === Enums.AccountSettingsTab.Signature"> <div data-bind="template: {name: 'Settings_AccountSignatureViewModel', data: oAccountSignature}"></div> </div> <div class="tab filters" data-bind="visible: tab() === Enums.AccountSettingsTab.Filters"> <div data-bind="template: {name: 'Settings_AccountFiltersViewModel', data: oAccountFilters}"></div> </div> <div class="tab autoresponder" data-bind="visible: tab() === Enums.AccountSettingsTab.Autoresponder"> <div data-bind="template: {name: 'Settings_AccountAutoresponderViewModel', data: oAccountAutoresponder}"></div> </div> <div class="tab forward" data-bind="visible: tab() === Enums.AccountSettingsTab.Forward"> <div data-bind="template: {name: 'Settings_AccountForwardViewModel', data: oAccountForward}"></div> </div> <div class="tab folders" data-bind="visible: tab() === Enums.AccountSettingsTab.Folders"> <div data-bind="template: {name: 'Settings_AccountFoldersViewModel', data: oAccountFolders}"></div> </div> <div class="tab pop3" data-bind="visible: tab() === Enums.AccountSettingsTab.FetcherInc"> <div data-bind="template: {name: 'Settings_FetcherIncomingViewModel', data: oFetcherIncoming}"></div> </div> <div class="tab smtp" data-bind="visible: tab() === Enums.AccountSettingsTab.FetcherOut"> <div data-bind="template: {name: 'Settings_FetcherOutgoingViewModel', data: oFetcherOutgoing}"></div> </div> <div class="tab signature" data-bind="visible: tab() === Enums.AccountSettingsTab.FetcherSig"> <div data-bind="template: {name: 'Settings_AccountSignatureViewModel', data: oFetcherSignature}"></div> </div> <div class="tab properties" data-bind="visible: tab() === Enums.AccountSettingsTab.IdentityProperties"> <div data-bind="template: {name: 'Settings_IdentityPropertiesViewModel', data: oIdentityProperties}"></div> </div> <div class="tab signature" data-bind="visible: tab() === Enums.AccountSettingsTab.IdentitySignature"> <div data-bind="template: {name: 'Settings_AccountSignatureViewModel', data: oIdentityProperties}"></div> </div> </div> </div> </div> </div></script><script id="Settings_FetcherIncomingViewModel" type="text/html"><div class="fields"> <div class="fieldset"> <!--<div class="row name">--> <!--<span class="label" data-i18n="SETTINGS/ACCOUNT_FETCHER_YOUR_NAME" data-bind="i18n: 'text'"></span>--> <!--<input class="value input" spellcheck="false" type="text" maxlength="65" data-bind="value: name, valueUpdate: 'afterkeydown', onEnter: onSaveClick"/> &lt;!&ndash;, hasfocus: nameFocus&ndash;&gt;--> <!--</div>--> <div class="row"> <div> <label class="custom_checkbox" data-bind="css: {'checked': isEnabled}"> <span class="icon"></span> <input type="checkbox" id="incoming_mail_enabled" data-bind="checked: isEnabled" /> </label> <label for="incoming_mail_enabled" data-i18n="SETTINGS/ACCOUNT_FETCHER_INCOMING_ENABLED" data-bind="i18n: 'text'"></label> </div> </div> <div class="row hint"> <span class="" data-i18n="SETTINGS/ACCOUNT_FETCHER_FETCHED_HINT" data-bind="i18n: 'text'"></span> </div> <div class="row incoming"> <span class="label" data-i18n="SETTINGS/ACCOUNT_FETCHER_POP3_SERVER" data-bind="i18n: 'text'"></span> <!--<input class="value input" spellcheck="false" type="text" maxlength="65" data-bind="value: incomingMailServer, onEnter: onSaveClick, hasFocus: serverIsSelected, enable: isEnabled"/>--> <span class="value text" data-bind="text: incomingMailServer"></span> <span class="label" style="width: auto; margin-left: 10px;" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PORT" data-bind="i18n: 'text'"></span> <!--<input class="value input port" spellcheck="false" type="text" maxlength="5" data-bind="value: incomingMailPort, onEnter: onSaveClick, enable: isEnabled"/>--> <span class="value port text" data-bind="text: incomingMailPort"></span> </div> <div class="row login"> <span class="label" data-i18n="SETTINGS/ACCOUNT_FETCHER_LOGIN" data-bind="i18n: 'text'"></span> <!--<input class="value input" spellcheck="false" type="text" maxlength="255" data-bind="value: incomingMailLogin, onEnter: onSaveClick, hasFocus: loginIsSelected, enable: isEnabled"/> &lt;!&ndash;, hasfocus: incLoginFocused&ndash;&gt;--> <span class="value text" data-bind="text: incomingMailLogin"></span> </div> <div class="row password"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_FETCHER_PASSWORD" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="password" maxlength="255" data-bind="value: incomingMailPassword, onEnter: onSaveClick, hasFocus: passwordIsSelected, enable: isEnabled"/> </div> <div class="row hint"> <span class="" data-i18n="SETTINGS/ACCOUNT_FETCHER_POP3_STORE_TARGET_CLARIFICATION" data-bind="i18n: 'text'"></span> </div> <div class="row folder"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_FETCHER_POP3_STORE_TARGET_FOLDER" data-bind="i18n: 'text'"></span> <span class="" data-i18n="SETTINGS/ACCOUNT_FETCHER_WAITING_FOLDER_LIST" data-bind="i18n: 'text', visible: options().length == 1"></span> <select class="value input" data-bind="visible: options().length > 1, value: folder, options: options, optionsText: 'name', optionsValue: 'id', optionsAfterRender: defaultOptionsAfterRender, enable: isEnabled"> </select> </div> <div class="row"> <div> <label class="custom_checkbox" data-bind="css: {'checked': leaveMessagesOnServer}"> <span class="icon"></span> <input type="checkbox" id="leave_messages_on_server" data-bind="checked: leaveMessagesOnServer, enable: isEnabled" /> </label> <label for="leave_messages_on_server" data-i18n="SETTINGS/ACCOUNT_FETCHER_POP3_LAVE_MESSAGES_ON_SERVER" data-bind="i18n: 'text'"></label> </div> </div> <div class="row"> <span class="link" data-i18n="SETTINGS/ACCOUNTS_LINK_REMOVE_FETCHER"   data-bind="i18n: 'text', click: function () { $parent.onFetcherDeleteClick($data) }"> </span> </div> </div> <div class="buttons"> <span class="button" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick, visible: !loading()"></span> <span class="button" data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', click: onSaveClick, visible: loading()"></span> </div> </div></script><script id="Settings_FetcherOutgoingViewModel" type="text/html"><div class="fields"> <div class="fieldset"> <div class="row allow_sending"> <div> <label class="custom_checkbox" data-bind="css: {'checked': isOutgoingEnabled}"> <span class="icon"></span> <input type="checkbox" id="sending_from_this_account" data-bind="checked: isOutgoingEnabled, enable: isEnabled" /> </label> <label for="sending_from_this_account" data-i18n="SETTINGS/ACCOUNT_FETCHER_OUTGOING_ALLOW_SENDING" data-bind="i18n: 'text'"></label> </div> </div> <div class="row outgoing"> <span class="label required" data-i18n="SETTINGS/ACCOUNT_FETCHER_SMTP_SERVER" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="65" data-bind="value: outgoingMailServer, onEnter: onSaveClick, hasFocus: serverIsSelected, enable: isEnabled"/> <span class="label required" style="width: auto; margin-left: 10px;" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_PORT" data-bind="i18n: 'text'"></span> <input class="value input port" spellcheck="false" type="text" maxlength="5" data-bind="value: outgoingMailPort, onEnter: onSaveClick, enable: isEnabled"/> </div> <div class="row smtp_authentication"> <div> <label class="custom_checkbox" data-bind="css: {'checked': outgoingMailAuth}"> <span class="icon"></span> <input type="checkbox" id="use_smtp_authentication" data-bind="checked: outgoingMailAuth, enable: isEnabled" /> </label> <label for="use_smtp_authentication" data-i18n="SETTINGS/ACCOUNT_FETCHER_USE_SMTP_AUTHENTICATION" data-bind="i18n: 'text'"></label> </div> </div> <div class="row hint"> <span class="" data-i18n="SETTINGS/ACCOUNT_FETCHER_HINT_COMPOSE" data-bind="i18n: 'text'"></span> </div> <div class="row name"> <span class="label" data-i18n="SETTINGS/ACCOUNT_FETCHER_LABEL_NAME" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="65" data-bind="value: userName, onEnter: onSaveClick, enable: isEnabled"/> </div> <div class="row email"> <span class="label" data-i18n="SETTINGS/ACCOUNT_FETCHER_LABEL_EMAIL" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" maxlength="65" data-bind="value: email, onEnter: onSaveClick, enable: isEnabled"/> </div> </div> <div class="buttons"> <span class="button" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick, visible: !loading()"></span> <span class="button" data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', click: onSaveClick, visible: loading()"></span> </div> </div></script><script id="Settings_HelpdeskSettingsViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-i18n="SETTINGS/TITLE_HELPDESK" data-bind="i18n: 'text'"></h2> </div> <div class="panel_center"> <div class="fields"> <div class="fieldset"> <div class="row"> <span class="value"> <label class="custom_checkbox" data-bind="css: {'checked': allowNotifications}"> <span class="icon"></span> <input type="checkbox" id="allowNotifications" data-bind="checked: allowNotifications" /> </label> <label for="allowNotifications" data-i18n="SETTINGS/HELPDESK_NOTIFICATIONS_LABEL" data-bind="i18n: 'text'"></label> </span> </div> <div class="hint"> <span data-i18n="SETTINGS/HELPDESK_NOTIFICATIONS_HINT" data-bind="i18n: 'text'"></span> </div> </div> <div class="buttons"> <span class="button" data-bind="click: onSaveClick"> <span data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', visible: !loading()"></span> <span data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> </span> </div> </div> </div></script><script id="Settings_IdentityPropertiesViewModel" type="text/html"><div class="fields"> <div class="fieldset"> <div class="row" data-bind="visible: !bCreate"> <div> <label class="custom_checkbox" data-bind="css: {'checked': enabled}"> <span class="icon"></span> <input type="checkbox" data-bind="checked: enabled,    attr: {'id': 'identity_enabled' + bCreate}" /> </label> <label data-i18n="SETTINGS/ACCOUNTS_IDENTITY_INCOMING_ENABLED" data-bind="i18n: 'text',    attr: {'for': 'identity_enabled' + bCreate}"></label> </div> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_YOUR_NAME" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" data-bind="value: friendlyName, onEnter: onSaveClick, hasFocus: friendlyNameHasFocus"/> </div> <div class="row"> <span class="label" data-i18n="SETTINGS/ACCOUNT_PROPERTIES_EMAIL" data-bind="i18n: 'text'"></span> <input class="value input" spellcheck="false" type="text" data-bind="value: email, onEnter: onSaveClick"/> </div> <div class="row remove_account" data-bind="visible: !bCreate"> <span class="link" data-bind="i18n: 'text', click: remove" data-i18n="SETTINGS/ACCOUNTS_IDENTITY_LINK_REMOVE"></span> </div> </div> <div class="buttons"> <span class="button save" data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', click: onSaveClick, visible: !loading()"></span> <span class="button save" data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> <span class="button cancel" data-i18n="SETTINGS/BUTTON_CANCEL" data-bind="i18n: 'text', click: cancel, visible: bCreate"></span> </div> </div> </script><script id="Settings_MobileSyncSettingsViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-i18n="SETTINGS/TITLE_MOBILE_SYNC" data-bind="i18n: 'text'"></h2> </div> <div class="panel_center"> <div class="fields"> <div class="fieldset" data-bind="visible: enableDav"> <h2 class="subtitle" data-i18n="SETTINGS/MOBILE_DAVSYNC_HEADING" data-bind="i18n: 'text'"></h2> <div class="hint" data-i18n="SETTINGS/MOBILE_DAVSYNC_HINT" data-bind="i18n: 'text'"></div> <div class="row"> <span class="label" data-i18n="SETTINGS/MOBILE_DAVSYNC_SERVER" data-bind="i18n: 'text'"></span> <span class="value" data-bind="text: davServer"></span> </div> <div class="hint" data-bind="text: credentialsHintText"></div> <div class="hint" data-bind="i18n: 'html', visible: isDemo" data-i18n="SETTINGS/DEMO_CREDENTIAL_HINT_HTML"></div> </div> <div class="fieldset ios_profile" data-bind="visible: bVisibleIosLink"> <div class="row"> <span class="label"> </span> <span class="value"> <a class="link" href="./?Profile"> <span class="icon"></span> <span class="text" data-i18n="SETTINGS/MOBILE_IOS_LINK" data-bind="i18n: 'text'"></span> </a> </span> </div> </div> <div class="fieldset" data-bind="visible: visibleDavViaUrls"> <h2 class="subtitle" data-i18n="SETTINGS/MOBILE_DAVSYNC_SEPARATE_URLS_HEADING" data-bind="i18n: 'text'"></h2> <div class="hint" data-i18n="SETTINGS/MOBILE_DAVSYNC_HINT_URLS" data-bind="i18n: 'text'"></div> <div class="fieldgroup" data-bind="visible: bVisibleCalendar"> <h2 class="subtitle" data-i18n="SETTINGS/MOBILE_DAVSYNC_HEADING_CALENDAR" data-bind="i18n: 'text'"></h2> <!-- ko foreach: davCalendars --> <div class="row"> <span class="label" data-bind="text: Name"></span> <span class="value" data-bind="text: Url"></span> </div> <!-- /ko --> </div> <div class="fieldgroup" data-bind="visible: bVisibleContacts"> <h2 class="subtitle" data-i18n="SETTINGS/MOBILE_DAVSYNC_HEADING_CONTACTS" data-bind="i18n: 'text'"></h2> <div class="row" data-bind="visible: bVisiblePersonalContacts"> <span class="label" data-i18n="SETTINGS/MOBILE_DAVSYNC_PERSONAL_CONTACTS" data-bind="i18n: 'text'"></span> <span class="value" data-bind="text: davPersonalContactsUrl"></span> </div> <div class="row" data-bind="visible: bVisiblePersonalContacts"> <span class="label" data-i18n="SETTINGS/MOBILE_DAVSYNC_COLLECTED_ADDRESSES" data-bind="i18n: 'text'"></span> <span class="value" data-bind="text: davCollectedAddressesUrl"></span> </div> <div class="row" data-bind="visible: bVisibleGlobalContacts"> <span class="label" data-i18n="SETTINGS/MOBILE_DAVSYNC_GLOBAL_ADDRESS_BOOK" data-bind="i18n: 'text'"></span> <span class="value" data-bind="text: davGlobalAddressBookUrl"></span> </div> </div> <div class="hint" data-bind="text: credentialsHintText"></div> <div class="hint" data-bind="i18n: 'html', visible: isDemo" data-i18n="SETTINGS/DEMO_CREDENTIAL_HINT_HTML"></div> </div> <div class="fieldset" data-bind="visible: visibleDavViaUrls && bVisibleFiles"> <h2 class="subtitle" data-i18n="SETTINGS/MOBILE_DAVSYNC_HEADING_FILES" data-bind="i18n: 'text'"></h2> <div class="hint" data-i18n="SETTINGS/MOBILE_DAVSYNC_HINT_SPECIFY" data-bind="i18n: 'text'"></div> <div class="fieldgroup"> <div class="row"> <span class="label" data-i18n="SETTINGS/MOBILE_DAVSYNC_FILES" data-bind="i18n: 'text'"></span> <span class="value" data-bind="text: davServer() + '/files'"></span> </div> </div> <div class="hint" data-bind="text: credentialsHintText"></div> <div class="hint" data-bind="i18n: 'html', visible: isDemo" data-i18n="SETTINGS/DEMO_CREDENTIAL_HINT_HTML"></div> </div> </div> </div> </script><script id="Settings_OutLookSyncSettingsViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-i18n="SETTINGS/TITLE_OUTLOOK_SYNC" data-bind="i18n: 'text'"></h2> </div> <div class="panel_center"> <div class="fields" data-bind="visible: visibleOutlookSync()"> <div class="fieldset"> <div class="hint" data-i18n="SETTINGS/OUTLOOKSYNC_HEADING" data-bind="i18n: 'text'"></div> <div class="row"> <span class="label" data-i18n="SETTINGS/OUTLOOKSYNC_SERVER" data-bind="i18n: 'text'"></span> <span class="value" data-bind="text: server"></span> </div> <div class="hint" data-bind="text: credentialsHintText"></div> <div class="hint" data-bind="i18n: 'html', visible: isDemo" data-i18n="SETTINGS/DEMO_CREDENTIAL_HINT_HTML"></div> <br /> <br /> <div class="hint" data-i18n="SETTINGS/OUTLOOKSYNC_PLUGIN_VERSION_DESC_1" data-bind="i18n: 'text', visible: outlookSyncPlugin32 || outlookSyncPlugin64"></div> <div> - <a class="link" href="#" target="_blank" data-i18n="SETTINGS/OUTLOOKSYNC_PLUGIN_VERSION_32_LINK" data-bind="i18n: 'text', visible: outlookSyncPlugin32, attr: {href: outlookSyncPlugin32}"></a> <br /> - <a class="link" href="#" target="_blank" data-i18n="SETTINGS/OUTLOOKSYNC_PLUGIN_VERSION_64_LINK" data-bind="i18n: 'text', visible: outlookSyncPlugin64, attr: {href: outlookSyncPlugin64}"></a> </div> <br /> <div class="hint" data-bind="visible: outlookSyncPluginReadMore"> <span data-i18n="SETTINGS/OUTLOOKSYNC_PLUGIN_VERSION_DESC_2" data-bind="i18n: 'text'"></span> <a class="link" href="#" target="_blank" data-i18n="SETTINGS/OUTLOOKSYNC_PLUGIN_VERSION_READ_MORE_LINK" data-bind="i18n: 'text', attr: {href: outlookSyncPluginReadMore}"></a> </div> </div> </div> </div></script><script id="Settings_PgpSettingsViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-i18n="OPENPGP/SETTINGS_TITLE" data-bind="i18n: 'text'"></h2> </div> <div class="panel_center"> <div class="fields"> <div class="fieldset"> <div class="row"> <span class="value offset"> <label class="custom_checkbox" data-bind="css: {'checked': enableOpenPgp}"> <span class="icon"></span> <input type="checkbox" id="enableOpenPgp" data-bind="checked: enableOpenPgp" /> </label> <label for="enableOpenPgp" data-i18n="SETTINGS/COMMON_ENABLE_OPENPGP" data-bind="i18n: 'text'"></label> </span> </div> <div class="row" data-bind="visible: bAllowAutoSave"> <span class="value offset"> <label class="custom_checkbox" data-bind="css: {'checked': allowAutosaveInDrafts}"> <span class="icon"></span> <input type="checkbox" id="allowAutosaveInDrafts" data-bind="checked: allowAutosaveInDrafts" /> </label> <label for="allowAutosaveInDrafts" data-i18n="SETTINGS/COMMON_ALLOW_AUTOSAVE" data-bind="i18n: 'text'"></label> </span> </div> <div class="hint row" data-bind="visible: bAllowAutoSave"> <span class="value offset" data-bind="i18n: 'text'" data-i18n="SETTINGS/COMMON_ALLOW_AUTOSAVE_HINT"></span> </div> <!--<div class="row"> <span class="value offset"> <label class="custom_checkbox" data-bind="css: {'checked': autosignOutgoingEmails}"> <span class="icon"></span> <input type="checkbox" id="autosignOutgoingEmails" data-bind="checked: autosignOutgoingEmails" /> </label> <label for="autosignOutgoingEmails" data-i18n="SETTINGS/COMMON_OPENPGP_AUTOSIGN" data-bind="i18n: 'text'"></label> </span> </div> <div class="hint row"> <span class="value offset" data-bind="i18n: 'text'" data-i18n="SETTINGS/COMMON_OPENPGP_AUTOSIGN_HINT"></span> </div>--> </div> <div class="buttons"> <span class="button" data-bind="click: onSaveClick"> <span data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', visible: !loading()"></span> <span data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> </span> </div> <div class="fieldset" data-bind="visible: enableOpenPgp"> <div class="row keys_label" data-bind="visible: pgpLoaded"> <span class="label" data-i18n="OPENPGP/LABEL_PUBLIC_KEYS" data-bind="i18n: 'text'"></span> <span class="value" data-i18n="OPENPGP/INFO_EMPTY_PUBLIC_KEYS" data-bind="i18n: 'text', visible: publicKeys().length === 0"></span> </div> <div class="row folders items_list" data-bind="foreach: publicKeys"> <div class="item"> <span class="title"> <span class="controls"> <span class="button subscribe subscribed" data-i18n="OPENPGP/ACTION_VIEW_KEY"    data-bind="i18n: 'title', click: function () { $parent.showArmor(key); }"></span> <span class="button delete" data-i18n="OPENPGP/ACTION_DELETE_KEY"    data-bind="i18n: 'title', click: function () { $parent.removeOpenPgpKey(key); }"></span> </span> <span class="name"> <span class="text" data-bind="text: user"></span> </span> </span> </div> </div> <div class="row keys_label" data-bind="visible: pgpLoaded"> <span class="label" data-i18n="OPENPGP/LABEL_PRIVATE_KEYS" data-bind="i18n: 'text'"></span> <span class="value" data-i18n="OPENPGP/INFO_EMPTY_PRIVATE_KEYS" data-bind="i18n: 'text', visible: privateKeys().length === 0"></span> </div> <div class="row folders items_list" data-bind="foreach: privateKeys"> <div class="item"> <span class="title"> <span class="controls"> <span class="button subscribe subscribed" data-i18n="OPENPGP/ACTION_VIEW_KEY"    data-bind="i18n: 'title', click: function () { $parent.showArmor(key); }"></span> <span class="button delete" data-i18n="OPENPGP/ACTION_DELETE_KEY"    data-bind="i18n: 'title', click: function () { $parent.removeOpenPgpKey(key); }"></span> </span> <span class="name"> <span class="text" data-bind="text: user"></span> </span> </span> </div> </div> </div> <div class="buttons" data-bind="visible: enableOpenPgp"> <span data-bind="click: importKey" class="button"> <span data-bind="i18n: 'text'" data-i18n="OPENPGP/BUTTON_IMPORT_KEY"></span> </span> <span data-bind="click: generateNewKey" class="button"> <span data-bind="i18n: 'text'" data-i18n="OPENPGP/BUTTON_GENERATE_NEW_KEY"></span> </span> </div> </div> </div></script><script id="Settings_ServicesSettingsViewModel" type="text/html"><div class="panel_top"> <h2 class="title" data-i18n="SETTINGS/TITLE_SERVICES" data-bind="i18n: 'text'"></h2> </div> <div class="panel_center"> <div class="fields"> <div class="fieldset" data-bind="visible: allowFiles"> <h2 class="subtitle" data-i18n="SETTINGS/SERVICES_FILES_MODULE" data-bind="i18n: 'text'"></h2> <div class="row">  <div>  <label class="custom_checkbox" data-bind="css: {'checked': enableFiles}">  <span class="icon"></span>  <input type="checkbox" id="enableFiles" data-bind="checked: enableFiles">  </label>  <label for="enableFiles" data-i18n="SETTINGS/SERVICES_FILES_MODULE_ENABLE" data-bind="i18n: 'text'"></label>  </div>  </div> <div class="hint" data-i18n="SETTINGS/SERVICES_FILES_MODULE_HINT" data-bind="i18n: 'text'"></div> </div> <div class="fieldset" data-bind="visible: allowGoogle"> <h2 class="subtitle" data-i18n="SETTINGS/SERVICES_GOOGLE_DRIVE" data-bind="i18n: 'text'"></h2> <div class="hint" data-i18n="SETTINGS/SERVICES_GOOGLE_DRIVE_HINT" data-bind="i18n: 'text'"></div> <div class="buttons" style="text-align: left;"> <span class="button" data-bind="click: onGoogleSignInClick"> <span data-i18n="SETTINGS/SERVICES_BUTTON_ENABLE" data-bind="i18n: 'text', visible: !googleConnected()"></span> <span data-i18n="SETTINGS/SERVICES_BUTTON_DISABLE" data-bind="i18n: 'text', visible: googleConnected()"></span> </span> </div> </div> <div class="fieldset" data-bind="visible: allowDropbox"> <h2 class="subtitle" data-i18n="SETTINGS/SERVICES_DROPBOX" data-bind="i18n: 'text'"></h2> <div class="hint" data-i18n="SETTINGS/SERVICES_DROPBOX_HINT" data-bind="i18n: 'text'"></div> <div class="buttons" style="text-align: left;"> <span class="button" data-bind="click: onDropboxSignInClick"> <span data-i18n="SETTINGS/SERVICES_BUTTON_ENABLE" data-bind="i18n: 'text', visible: !dropboxConnected()"></span> <span data-i18n="SETTINGS/SERVICES_BUTTON_DISABLE" data-bind="i18n: 'text', visible: dropboxConnected()"></span> </span> </div> </div> <div class="buttons"> <span class="button" data-bind="click: onSaveClick"> <span data-i18n="SETTINGS/BUTTON_SAVE" data-bind="i18n: 'text', visible: !loading()"></span> <span data-i18n="SETTINGS/BUTTON_SAVING" data-bind="i18n: 'text', visible: loading()"></span> </span> </div> </div> </div></script><script id="Settings_SettingsViewModel" type="text/html"><div class="panels settings"> <div class="panel navigation"> <div class="panel_content"> <div class="middle_bar"> <div class="panel_center"> <div class="items_list" data-bind="foreach: aTabs"> <div class="item canSelect" data-bind="attr: {'class': 'item canSelect ' + $data.TabName}, css: {'selected': ($parent.tab() === $data.TabName)}, click: function () {$parent.showTab($data.TabName);}"> <span class="title"> <span class="icon"></span> <span class="text" data-bind="text: $data.TabTitle"></span> </span> </div> </div> </div> </div> </div> </div> <div class="panel data"> <div class="panel_content" data-bind="foreach: aTabs"> <div data-bind="attr: {'class': 'middle_bar ' + $data.TabName}, visible: $parent.tab() === $data.TabName"> <!-- ko template: {name: $data.TemplateName, data: $data} --><!-- /ko --> </div> </div> </div> </div></script>